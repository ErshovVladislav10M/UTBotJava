[
 {
  "name": "getpass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "prompt"
      },
      {
       "annotation": "(TextIO | None)",
       "arg": "stream"
      }
     ],
     "kwonlyargs": [],
     "name": "getpass",
     "returns": "str"
    },
    "module": "getpass"
   }
  ]
 },
 {
  "name": "getuser",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getuser",
     "returns": "str"
    },
    "module": "getpass"
   }
  ]
 },
 {
  "name": "run_module",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "mod_name"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "init_globals"
      },
      {
       "annotation": "(str | None)",
       "arg": "run_name"
      },
      {
       "annotation": "bool",
       "arg": "alter_sys"
      }
     ],
     "kwonlyargs": [],
     "name": "run_module",
     "returns": "dict[str, Any]"
    },
    "module": "runpy"
   }
  ]
 },
 {
  "name": "run_path",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path_name"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "init_globals"
      },
      {
       "annotation": "(str | None)",
       "arg": "run_name"
      }
     ],
     "kwonlyargs": [],
     "name": "run_path",
     "returns": "dict[str, Any]"
    },
    "module": "runpy"
   }
  ]
 },
 {
  "name": "find",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "Literal[False]",
       "arg": "all"
      }
     ],
     "kwonlyargs": [],
     "name": "find",
     "returns": "(str | None)"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "Literal[True]",
       "arg": "all"
      }
     ],
     "kwonlyargs": [],
     "name": "find",
     "returns": "list[str]"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "bool",
       "arg": "all"
      }
     ],
     "kwonlyargs": [],
     "name": "find",
     "returns": "Any"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "translation",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "None",
       "arg": "class_"
      },
      {
       "annotation": "bool",
       "arg": "fallback"
      },
      {
       "annotation": "(str | None)",
       "arg": "codeset"
      }
     ],
     "kwonlyargs": [],
     "name": "translation",
     "returns": "NullTranslations"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "type[_T]",
       "arg": "class_"
      },
      {
       "annotation": "Literal[False]",
       "arg": "fallback"
      },
      {
       "annotation": "(str | None)",
       "arg": "codeset"
      }
     ],
     "kwonlyargs": [],
     "name": "translation",
     "returns": "_T"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "languages"
      },
      {
       "annotation": "type[Any]",
       "arg": "class_"
      },
      {
       "annotation": "Literal[True]",
       "arg": "fallback"
      },
      {
       "annotation": "(str | None)",
       "arg": "codeset"
      }
     ],
     "kwonlyargs": [],
     "name": "translation",
     "returns": "Any"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "install",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      },
      {
       "annotation": "(str | None)",
       "arg": "codeset"
      },
      {
       "annotation": "(Container[str] | None)",
       "arg": "names"
      }
     ],
     "kwonlyargs": [],
     "name": "install",
     "returns": "None"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "textdomain",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "domain"
      }
     ],
     "kwonlyargs": [],
     "name": "textdomain",
     "returns": "str"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(_str | None)",
       "arg": "__domain"
      }
     ],
     "kwonlyargs": [],
     "name": "textdomain",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "bindtextdomain",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "localedir"
      }
     ],
     "kwonlyargs": [],
     "name": "bindtextdomain",
     "returns": "str"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "__domain"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "__dir"
      }
     ],
     "kwonlyargs": [],
     "name": "bindtextdomain",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "dgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "dgettext",
     "returns": "str"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(_str | None)",
       "arg": "__domain"
      },
      {
       "annotation": "_str",
       "arg": "__msg"
      }
     ],
     "kwonlyargs": [],
     "name": "dgettext",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "dngettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "dngettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "gettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "gettext",
     "returns": "str"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "__msg"
      }
     ],
     "kwonlyargs": [],
     "name": "gettext",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "ngettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "ngettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "pgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "context"
      },
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "pgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "dpgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "context"
      },
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "dpgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "npgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "context"
      },
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "npgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "dnpgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "context"
      },
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "dnpgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "lgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "lgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "ldgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "ldgettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "lngettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "lngettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "ldngettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "str",
       "arg": "msgid1"
      },
      {
       "annotation": "str",
       "arg": "msgid2"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "ldngettext",
     "returns": "str"
    },
    "module": "gettext"
   }
  ]
 },
 {
  "name": "bind_textdomain_codeset",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      },
      {
       "annotation": "(str | None)",
       "arg": "codeset"
      }
     ],
     "kwonlyargs": [],
     "name": "bind_textdomain_codeset",
     "returns": "str"
    },
    "module": "gettext"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "__domain"
      },
      {
       "annotation": "(_str | None)",
       "arg": "__codeset"
      }
     ],
     "kwonlyargs": [],
     "name": "bind_textdomain_codeset",
     "returns": "(_str | None)"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "glob0",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "dirname"
      },
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      }
     ],
     "kwonlyargs": [],
     "name": "glob0",
     "returns": "list[AnyStr]"
    },
    "module": "glob"
   }
  ]
 },
 {
  "name": "glob1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "dirname"
      },
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      }
     ],
     "kwonlyargs": [],
     "name": "glob1",
     "returns": "list[AnyStr]"
    },
    "module": "glob"
   }
  ]
 },
 {
  "name": "glob",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pathname"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "root_dir"
      },
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "recursive"
      }
     ],
     "name": "glob",
     "returns": "list[AnyStr]"
    },
    "module": "glob"
   }
  ]
 },
 {
  "name": "iglob",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pathname"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "root_dir"
      },
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "recursive"
      }
     ],
     "name": "iglob",
     "returns": "Iterator[AnyStr]"
    },
    "module": "glob"
   }
  ]
 },
 {
  "name": "escape",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pathname"
      }
     ],
     "kwonlyargs": [],
     "name": "escape",
     "returns": "AnyStr"
    },
    "module": "glob"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "s"
      },
      {
       "annotation": "bool",
       "arg": "quote"
      }
     ],
     "kwonlyargs": [],
     "name": "escape",
     "returns": "AnyStr"
    },
    "module": "html"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      }
     ],
     "kwonlyargs": [],
     "name": "escape",
     "returns": "AnyStr"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "has_magic",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "has_magic",
     "returns": "bool"
    },
    "module": "glob"
   }
  ]
 },
 {
  "name": "randbelow",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "exclusive_upper_bound"
      }
     ],
     "kwonlyargs": [],
     "name": "randbelow",
     "returns": "int"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "randbits",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "k"
      }
     ],
     "kwonlyargs": [],
     "name": "randbits",
     "returns": "int"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "choice",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsLenAndGetItem[_T]",
       "arg": "seq"
      }
     ],
     "kwonlyargs": [],
     "name": "choice",
     "returns": "_T"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "token_bytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "nbytes"
      }
     ],
     "kwonlyargs": [],
     "name": "token_bytes",
     "returns": "bytes"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "token_hex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "nbytes"
      }
     ],
     "kwonlyargs": [],
     "name": "token_hex",
     "returns": "str"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "token_urlsafe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "nbytes"
      }
     ],
     "kwonlyargs": [],
     "name": "token_urlsafe",
     "returns": "str"
    },
    "module": "secrets"
   }
  ]
 },
 {
  "name": "select",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[Any]",
       "arg": "__rlist"
      },
      {
       "annotation": "Iterable[Any]",
       "arg": "__wlist"
      },
      {
       "annotation": "Iterable[Any]",
       "arg": "__xlist"
      },
      {
       "annotation": "(float | None)",
       "arg": "__timeout"
      }
     ],
     "kwonlyargs": [],
     "name": "select",
     "returns": "tuple[list[Any], list[Any], list[Any]]"
    },
    "module": "select"
   }
  ]
 },
 {
  "name": "getgrall",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getgrall",
     "returns": "list[struct_group]"
    },
    "module": "grp"
   }
  ]
 },
 {
  "name": "getgrgid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "id"
      }
     ],
     "kwonlyargs": [],
     "name": "getgrgid",
     "returns": "struct_group"
    },
    "module": "grp"
   }
  ]
 },
 {
  "name": "getgrnam",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "getgrnam",
     "returns": "struct_group"
    },
    "module": "grp"
   }
  ]
 },
 {
  "name": "open",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | _ReadableFileobj)",
       "arg": "filename"
      },
      {
       "annotation": "_ReadBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "GzipFile"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | _WritableFileobj)",
       "arg": "filename"
      },
      {
       "annotation": "_WriteBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "GzipFile"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "_OpenTextMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | _ReadableFileobj | _WritableFileobj)",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "(GzipFile | TextIO)"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "_TFlags",
       "arg": "flag"
      },
      {
       "annotation": "(int | None)",
       "arg": "protocol"
      },
      {
       "annotation": "bool",
       "arg": "writeback"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Shelf[object]"
    },
    "module": "shelve"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['r', 'rb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Aifc_read"
    },
    "module": "aifc"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['w', 'wb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Aifc_write"
    },
    "module": "aifc"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "(str | None)",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Any"
    },
    "module": "aifc"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_PathOrFile",
       "arg": "filename"
      },
      {
       "annotation": "Literal['r', 'rb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "Literal[-1]",
       "arg": "check"
      },
      {
       "annotation": "None",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "name": "open",
     "returns": "LZMAFile"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_PathOrFile",
       "arg": "filename"
      },
      {
       "annotation": "_OpenBinaryWritingMode",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "int",
       "arg": "check"
      },
      {
       "annotation": "(int | None)",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "name": "open",
     "returns": "LZMAFile"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "Literal['rt']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "Literal[-1]",
       "arg": "check"
      },
      {
       "annotation": "None",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "_OpenTextWritingMode",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "int",
       "arg": "check"
      },
      {
       "annotation": "(int | None)",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_PathOrFile",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "int",
       "arg": "check"
      },
      {
       "annotation": "(int | None)",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "name": "open",
     "returns": "(LZMAFile | TextIO)"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenTextMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIOWrapper"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "Literal[0]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "FileIO"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenBinaryModeUpdating",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BufferedRandom"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenBinaryModeWriting",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BufferedWriter"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenBinaryModeReading",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BufferedReader"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "OpenBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BinaryIO"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_OpenFile",
       "arg": "file"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "IO[Any]"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['r', 'rb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Au_read"
    },
    "module": "sunau"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['w', 'wb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Au_write"
    },
    "module": "sunau"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "(str | None)",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Any"
    },
    "module": "sunau"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_ReadableFileobj",
       "arg": "filename"
      },
      {
       "annotation": "_ReadBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BZ2File"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_ReadableFileobj",
       "arg": "filename"
      },
      {
       "annotation": "_ReadTextMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_WritableFileobj",
       "arg": "filename"
      },
      {
       "annotation": "_WriteBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BZ2File"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_WritableFileobj",
       "arg": "filename"
      },
      {
       "annotation": "_WriteTextMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "(_ReadBinaryMode | _WriteBinaryMode)",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "BZ2File"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "(_ReadTextMode | _WriteTextMode)",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | _ReadableFileobj | _WritableFileobj)",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "(BZ2File | TextIO)"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "name"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "(IO[bytes] | None)",
       "arg": "fileobj"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "format"
      },
      {
       "annotation": "(type[TarInfo] | None)",
       "arg": "tarinfo"
      },
      {
       "annotation": "(bool | None)",
       "arg": "dereference"
      },
      {
       "annotation": "(bool | None)",
       "arg": "ignore_zeros"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "(Mapping[str, str] | None)",
       "arg": "pax_headers"
      },
      {
       "annotation": "(int | None)",
       "arg": "debug"
      },
      {
       "annotation": "(int | None)",
       "arg": "errorlevel"
      },
      {
       "annotation": "(int | None)",
       "arg": "compresslevel"
      }
     ],
     "name": "open",
     "returns": "TarFile"
    },
    "module": "tarfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "StreamReaderWriter"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "flags"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "open",
     "returns": "int"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['r', 'w', 'rw']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Any"
    },
    "module": "ossaudiodev"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "device"
      },
      {
       "annotation": "Literal['r', 'w', 'rw']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Any"
    },
    "module": "ossaudiodev"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "TextIO"
    },
    "module": "tokenize"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "file"
      },
      {
       "annotation": "_TFlags",
       "arg": "flag"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "_Database"
    },
    "module": "dbm"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['r', 'rb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Wave_read"
    },
    "module": "wave"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "Literal['w', 'wb']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Wave_write"
    },
    "module": "wave"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "f"
      },
      {
       "annotation": "(str | None)",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "Any"
    },
    "module": "wave"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "url"
      },
      {
       "annotation": "int",
       "arg": "new"
      },
      {
       "annotation": "bool",
       "arg": "autoraise"
      }
     ],
     "kwonlyargs": [],
     "name": "open",
     "returns": "bool"
    },
    "module": "webbrowser"
   }
  ]
 },
 {
  "name": "compress",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "mtime"
      }
     ],
     "name": "compress",
     "returns": "bytes"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "int",
       "arg": "format"
      },
      {
       "annotation": "int",
       "arg": "check"
      },
      {
       "annotation": "(int | None)",
       "arg": "preset"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      }
     ],
     "kwonlyargs": [],
     "name": "compress",
     "returns": "bytes"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "int",
       "arg": "compresslevel"
      }
     ],
     "kwonlyargs": [],
     "name": "compress",
     "returns": "bytes"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "compress",
     "returns": "bytes"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "decompress",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "decompress",
     "returns": "bytes"
    },
    "module": "gzip"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "int",
       "arg": "format"
      },
      {
       "annotation": "(int | None)",
       "arg": "memlimit"
      },
      {
       "annotation": "(_FilterChain | None)",
       "arg": "filters"
      }
     ],
     "kwonlyargs": [],
     "name": "decompress",
     "returns": "bytes"
    },
    "module": "lzma"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "decompress",
     "returns": "bytes"
    },
    "module": "bz2"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "wbits"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      }
     ],
     "kwonlyargs": [],
     "name": "decompress",
     "returns": "bytes"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "new",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "data"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "new",
     "returns": "_Hash"
    },
    "module": "hashlib"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "key"
      },
      {
       "annotation": "(ReadableBuffer | None)",
       "arg": "msg"
      },
      {
       "annotation": "_DigestMod",
       "arg": "digestmod"
      }
     ],
     "kwonlyargs": [],
     "name": "new",
     "returns": "HMAC"
    },
    "module": "hmac"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "key"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_DigestMod",
       "arg": "digestmod"
      }
     ],
     "name": "new",
     "returns": "HMAC"
    },
    "module": "hmac"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "new",
     "returns": "Xxo"
    },
    "module": "xxlimited"
   }
  ]
 },
 {
  "name": "md5",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "md5",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "sha1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "sha1",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "sha224",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "sha224",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "sha256",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "sha256",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "sha384",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "sha384",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "sha512",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "string"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "usedforsecurity"
      }
     ],
     "name": "sha512",
     "returns": "_Hash"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "pbkdf2_hmac",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "hash_name"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "password"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "salt"
      },
      {
       "annotation": "int",
       "arg": "iterations"
      },
      {
       "annotation": "(int | None)",
       "arg": "dklen"
      }
     ],
     "kwonlyargs": [],
     "name": "pbkdf2_hmac",
     "returns": "bytes"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "scrypt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "password"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(ReadableBuffer | None)",
       "arg": "salt"
      },
      {
       "annotation": "(int | None)",
       "arg": "n"
      },
      {
       "annotation": "(int | None)",
       "arg": "r"
      },
      {
       "annotation": "(int | None)",
       "arg": "p"
      },
      {
       "annotation": "int",
       "arg": "maxmem"
      },
      {
       "annotation": "int",
       "arg": "dklen"
      }
     ],
     "name": "scrypt",
     "returns": "bytes"
    },
    "module": "hashlib"
   }
  ]
 },
 {
  "name": "merge",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(Callable[[_S], Any] | None)",
       "arg": "key"
      },
      {
       "annotation": "bool",
       "arg": "reverse"
      }
     ],
     "name": "merge",
     "returns": "Iterable[_S]"
    },
    "module": "heapq"
   }
  ]
 },
 {
  "name": "nlargest",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "Iterable[_S]",
       "arg": "iterable"
      },
      {
       "annotation": "(Callable[[_S], SupportsRichComparison] | None)",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "nlargest",
     "returns": "list[_S]"
    },
    "module": "heapq"
   }
  ]
 },
 {
  "name": "nsmallest",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "Iterable[_S]",
       "arg": "iterable"
      },
      {
       "annotation": "(Callable[[_S], SupportsRichComparison] | None)",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "nsmallest",
     "returns": "list[_S]"
    },
    "module": "heapq"
   }
  ]
 },
 {
  "name": "_heapify_max",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[Any]",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "_heapify_max",
     "returns": "None"
    },
    "module": "heapq"
   }
  ]
 },
 {
  "name": "split",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      },
      {
       "annotation": "bool",
       "arg": "comments"
      },
      {
       "annotation": "bool",
       "arg": "posix"
      }
     ],
     "kwonlyargs": [],
     "name": "split",
     "returns": "list[str]"
    },
    "module": "shlex"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "split",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "split",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "maxsplit"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "split",
     "returns": "list[AnyStr | Any]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "maxsplit"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "split",
     "returns": "list[AnyStr | Any]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "join",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[str]",
       "arg": "split_command"
      }
     ],
     "kwonlyargs": [],
     "name": "join",
     "returns": "str"
    },
    "module": "shlex"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "__path"
      }
     ],
     "kwonlyargs": [],
     "name": "join",
     "returns": "str"
    },
    "module": "ntpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "__path"
      }
     ],
     "kwonlyargs": [],
     "name": "join",
     "returns": "bytes"
    },
    "module": "ntpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "__a"
      }
     ],
     "kwonlyargs": [],
     "name": "join",
     "returns": "str"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "__a"
      }
     ],
     "kwonlyargs": [],
     "name": "join",
     "returns": "bytes"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "quote",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "quote",
     "returns": "str"
    },
    "module": "shlex"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "quote",
     "returns": "str"
    },
    "module": "pipes"
   }
  ]
 },
 {
  "name": "compare_digest",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "__a"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "__b"
      }
     ],
     "kwonlyargs": [],
     "name": "compare_digest",
     "returns": "bool"
    },
    "module": "hmac"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "__a"
      },
      {
       "annotation": "AnyStr",
       "arg": "__b"
      }
     ],
     "kwonlyargs": [],
     "name": "compare_digest",
     "returns": "bool"
    },
    "module": "hmac"
   }
  ]
 },
 {
  "name": "digest",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "key"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "msg"
      },
      {
       "annotation": "str",
       "arg": "digest"
      }
     ],
     "kwonlyargs": [],
     "name": "digest",
     "returns": "bytes"
    },
    "module": "hmac"
   }
  ]
 },
 {
  "name": "copyfileobj",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRead[AnyStr]",
       "arg": "fsrc"
      },
      {
       "annotation": "SupportsWrite[AnyStr]",
       "arg": "fdst"
      },
      {
       "annotation": "int",
       "arg": "length"
      }
     ],
     "kwonlyargs": [],
     "name": "copyfileobj",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "copyfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "_StrOrBytesPathT",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copyfile",
     "returns": "_StrOrBytesPathT"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "copymode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copymode",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "copystat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copystat",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "copy",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "src"
      },
      {
       "annotation": "StrPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copy",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "src"
      },
      {
       "annotation": "BytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copy",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "copy",
     "returns": "_T"
    },
    "module": "copy"
   }
  ]
 },
 {
  "name": "copy2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "src"
      },
      {
       "annotation": "StrPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copy2",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "src"
      },
      {
       "annotation": "BytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "copy2",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "ignore_patterns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "ignore_patterns",
     "returns": "Callable[[Any, list[str]], set[str]]"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "copytree",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "src"
      },
      {
       "annotation": "StrPath",
       "arg": "dst"
      },
      {
       "annotation": "bool",
       "arg": "symlinks"
      },
      {
       "annotation": "(None | Callable[[str, list[str]], Iterable[str]] | Callable[[StrPath, list\n    [str]], Iterable[str]])",
       "arg": "ignore"
      },
      {
       "annotation": "Callable[[str, str], None]",
       "arg": "copy_function"
      },
      {
       "annotation": "bool",
       "arg": "ignore_dangling_symlinks"
      },
      {
       "annotation": "bool",
       "arg": "dirs_exist_ok"
      }
     ],
     "kwonlyargs": [],
     "name": "copytree",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "rmtree",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "bool",
       "arg": "ignore_errors"
      },
      {
       "annotation": "(Callable[[Any, Any, Any], Any] | None)",
       "arg": "onerror"
      }
     ],
     "kwonlyargs": [],
     "name": "rmtree",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "move",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "src"
      },
      {
       "annotation": "StrPath",
       "arg": "dst"
      },
      {
       "annotation": "_CopyFn",
       "arg": "copy_function"
      }
     ],
     "kwonlyargs": [],
     "name": "move",
     "returns": "_PathReturn"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "disk_usage",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | StrOrBytesPath)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "disk_usage",
     "returns": "_ntuple_diskusage"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "chown",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "(str | int)",
       "arg": "user"
      },
      {
       "annotation": "None",
       "arg": "group"
      }
     ],
     "kwonlyargs": [],
     "name": "chown",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "None",
       "arg": "user"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | int)",
       "arg": "group"
      }
     ],
     "name": "chown",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "None",
       "arg": "user"
      },
      {
       "annotation": "(str | int)",
       "arg": "group"
      }
     ],
     "kwonlyargs": [],
     "name": "chown",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "(str | int)",
       "arg": "user"
      },
      {
       "annotation": "(str | int)",
       "arg": "group"
      }
     ],
     "kwonlyargs": [],
     "name": "chown",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "uid"
      },
      {
       "annotation": "int",
       "arg": "gid"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "chown",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "which",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_StrPathT",
       "arg": "cmd"
      },
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "which",
     "returns": "(str | _StrPathT | None)"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "cmd"
      },
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "which",
     "returns": "(bytes | None)"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "make_archive",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "base_name"
      },
      {
       "annotation": "str",
       "arg": "format"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "root_dir"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "base_dir"
      },
      {
       "annotation": "bool",
       "arg": "verbose"
      },
      {
       "annotation": "bool",
       "arg": "dry_run"
      },
      {
       "annotation": "(str | None)",
       "arg": "owner"
      },
      {
       "annotation": "(str | None)",
       "arg": "group"
      },
      {
       "annotation": "(Any | None)",
       "arg": "logger"
      }
     ],
     "kwonlyargs": [],
     "name": "make_archive",
     "returns": "str"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "get_archive_formats",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_archive_formats",
     "returns": "list[tuple[str, str]]"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "register_archive_format",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "Callable[..., object]",
       "arg": "function"
      },
      {
       "annotation": "Sequence[tuple[str, Any] | list[Any]]",
       "arg": "extra_args"
      },
      {
       "annotation": "str",
       "arg": "description"
      }
     ],
     "kwonlyargs": [],
     "name": "register_archive_format",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "Callable[[str, str], object]",
       "arg": "function"
      },
      {
       "annotation": "None",
       "arg": "extra_args"
      },
      {
       "annotation": "str",
       "arg": "description"
      }
     ],
     "kwonlyargs": [],
     "name": "register_archive_format",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "unregister_archive_format",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "unregister_archive_format",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "unpack_archive",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "filename"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "extract_dir"
      },
      {
       "annotation": "(str | None)",
       "arg": "format"
      }
     ],
     "kwonlyargs": [],
     "name": "unpack_archive",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "register_unpack_format",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "list[str]",
       "arg": "extensions"
      },
      {
       "annotation": "Callable[..., object]",
       "arg": "function"
      },
      {
       "annotation": "Sequence[tuple[str, Any]]",
       "arg": "extra_args"
      },
      {
       "annotation": "str",
       "arg": "description"
      }
     ],
     "kwonlyargs": [],
     "name": "register_unpack_format",
     "returns": "None"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "list[str]",
       "arg": "extensions"
      },
      {
       "annotation": "Callable[[str, str], object]",
       "arg": "function"
      },
      {
       "annotation": "None",
       "arg": "extra_args"
      },
      {
       "annotation": "str",
       "arg": "description"
      }
     ],
     "kwonlyargs": [],
     "name": "register_unpack_format",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "unregister_unpack_format",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "unregister_unpack_format",
     "returns": "None"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "get_unpack_formats",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_unpack_formats",
     "returns": "list[tuple[str, list[str], str]]"
    },
    "module": "shutil"
   }
  ]
 },
 {
  "name": "get_terminal_size",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[int, int]",
       "arg": "fallback"
      }
     ],
     "kwonlyargs": [],
     "name": "get_terminal_size",
     "returns": "os.terminal_size"
    },
    "module": "shutil"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "get_terminal_size",
     "returns": "terminal_size"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "unescape",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "unescape",
     "returns": "AnyStr"
    },
    "module": "html"
   }
  ]
 },
 {
  "name": "default_int_handler",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__signalnum"
      },
      {
       "annotation": "(FrameType | None)",
       "arg": "__frame"
      }
     ],
     "kwonlyargs": [],
     "name": "default_int_handler",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "getsignal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SIGNUM",
       "arg": "signalnum"
      }
     ],
     "kwonlyargs": [],
     "name": "getsignal",
     "returns": "_HANDLER"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "signal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SIGNUM",
       "arg": "signalnum"
      },
      {
       "annotation": "_HANDLER",
       "arg": "handler"
      }
     ],
     "kwonlyargs": [],
     "name": "signal",
     "returns": "_HANDLER"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "alarm",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__seconds"
      }
     ],
     "kwonlyargs": [],
     "name": "alarm",
     "returns": "int"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "getitimer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__which"
      }
     ],
     "kwonlyargs": [],
     "name": "getitimer",
     "returns": "tuple[float, float]"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "pause",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pause",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "pthread_kill",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__thread_id"
      },
      {
       "annotation": "int",
       "arg": "__signalnum"
      }
     ],
     "kwonlyargs": [],
     "name": "pthread_kill",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "pthread_sigmask",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "how"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "mask"
      }
     ],
     "kwonlyargs": [],
     "name": "pthread_sigmask",
     "returns": "set[_SIGNUM]"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "setitimer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__which"
      },
      {
       "annotation": "float",
       "arg": "__seconds"
      },
      {
       "annotation": "float",
       "arg": "__interval"
      }
     ],
     "kwonlyargs": [],
     "name": "setitimer",
     "returns": "tuple[float, float]"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "siginterrupt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__signalnum"
      },
      {
       "annotation": "bool",
       "arg": "__flag"
      }
     ],
     "kwonlyargs": [],
     "name": "siginterrupt",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "sigpending",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "sigpending",
     "returns": "Any"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "sigwait",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[int]",
       "arg": "sigset"
      }
     ],
     "kwonlyargs": [],
     "name": "sigwait",
     "returns": "_SIGNUM"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "sigtimedwait",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[int]",
       "arg": "sigset"
      },
      {
       "annotation": "float",
       "arg": "timeout"
      }
     ],
     "kwonlyargs": [],
     "name": "sigtimedwait",
     "returns": "(struct_siginfo | None)"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "sigwaitinfo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[int]",
       "arg": "sigset"
      }
     ],
     "kwonlyargs": [],
     "name": "sigwaitinfo",
     "returns": "struct_siginfo"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "strsignal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SIGNUM",
       "arg": "__signalnum"
      }
     ],
     "kwonlyargs": [],
     "name": "strsignal",
     "returns": "(str | None)"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "valid_signals",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "valid_signals",
     "returns": "set[Signals]"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "raise_signal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SIGNUM",
       "arg": "__signalnum"
      }
     ],
     "kwonlyargs": [],
     "name": "raise_signal",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "set_wakeup_fd",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "warn_on_full_buffer"
      }
     ],
     "name": "set_wakeup_fd",
     "returns": "int"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "pidfd_send_signal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pidfd"
      },
      {
       "annotation": "int",
       "arg": "__sig"
      },
      {
       "annotation": "None",
       "arg": "__siginfo"
      },
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "pidfd_send_signal",
     "returns": "None"
    },
    "module": "signal"
   }
  ]
 },
 {
  "name": "main",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "main",
     "returns": "None"
    },
    "module": "site"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "args"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(Callable[[_Timer], _Timer] | None)",
       "arg": "_wrap_timer"
      }
     ],
     "name": "main",
     "returns": "None"
    },
    "module": "timeit"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "main",
     "returns": "None"
    },
    "module": "pdb"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "args"
      }
     ],
     "kwonlyargs": [],
     "name": "main",
     "returns": "None"
    },
    "module": "venv"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "main",
     "returns": "None"
    },
    "module": "py_compile"
   }
  ]
 },
 {
  "name": "abs_paths",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "abs_paths",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "addpackage",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "sitedir"
      },
      {
       "annotation": "StrPath",
       "arg": "name"
      },
      {
       "annotation": "(set[str] | None)",
       "arg": "known_paths"
      }
     ],
     "kwonlyargs": [],
     "name": "addpackage",
     "returns": "(set[str] | None)"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "addsitedir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "sitedir"
      },
      {
       "annotation": "(set[str] | None)",
       "arg": "known_paths"
      }
     ],
     "kwonlyargs": [],
     "name": "addsitedir",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "addsitepackages",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(set[str] | None)",
       "arg": "known_paths"
      },
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "prefixes"
      }
     ],
     "kwonlyargs": [],
     "name": "addsitepackages",
     "returns": "(set[str] | None)"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "addusersitepackages",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(set[str] | None)",
       "arg": "known_paths"
      }
     ],
     "kwonlyargs": [],
     "name": "addusersitepackages",
     "returns": "(set[str] | None)"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "check_enableusersite",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "check_enableusersite",
     "returns": "(bool | None)"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "enablerlcompleter",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "enablerlcompleter",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "execsitecustomize",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "execsitecustomize",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "execusercustomize",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "execusercustomize",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "getsitepackages",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "prefixes"
      }
     ],
     "kwonlyargs": [],
     "name": "getsitepackages",
     "returns": "list[str]"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "getuserbase",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getuserbase",
     "returns": "str"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "getusersitepackages",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getusersitepackages",
     "returns": "str"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "makepath",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "makepath",
     "returns": "tuple[str, str]"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "removeduppaths",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "removeduppaths",
     "returns": "set[str]"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "setcopyright",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "setcopyright",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "sethelper",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "sethelper",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "setquit",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "setquit",
     "returns": "None"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "venv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(set[str] | None)",
       "arg": "known_paths"
      }
     ],
     "kwonlyargs": [],
     "name": "venv",
     "returns": "(set[str] | None)"
    },
    "module": "site"
   }
  ]
 },
 {
  "name": "abstractmethod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FuncT",
       "arg": "funcobj"
      }
     ],
     "kwonlyargs": [],
     "name": "abstractmethod",
     "returns": "_FuncT"
    },
    "module": "abc"
   }
  ]
 },
 {
  "name": "get_cache_token",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_cache_token",
     "returns": "object"
    },
    "module": "abc"
   }
  ]
 },
 {
  "name": "update_abstractmethods",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[_T]",
       "arg": "cls"
      }
     ],
     "kwonlyargs": [],
     "name": "update_abstractmethods",
     "returns": "type[_T]"
    },
    "module": "abc"
   }
  ]
 },
 {
  "name": "Internaldate2tuple",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      }
     ],
     "kwonlyargs": [],
     "name": "Internaldate2tuple",
     "returns": "time.struct_time"
    },
    "module": "imaplib"
   }
  ]
 },
 {
  "name": "Int2AP",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "num"
      }
     ],
     "kwonlyargs": [],
     "name": "Int2AP",
     "returns": "str"
    },
    "module": "imaplib"
   }
  ]
 },
 {
  "name": "ParseFlags",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      }
     ],
     "kwonlyargs": [],
     "name": "ParseFlags",
     "returns": "tuple[str, ...]"
    },
    "module": "imaplib"
   }
  ]
 },
 {
  "name": "Time2Internaldate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(float | time.struct_time | str)",
       "arg": "date_time"
      }
     ],
     "kwonlyargs": [],
     "name": "Time2Internaldate",
     "returns": "str"
    },
    "module": "imaplib"
   }
  ]
 },
 {
  "name": "quoteaddr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "addrstring"
      }
     ],
     "kwonlyargs": [],
     "name": "quoteaddr",
     "returns": "str"
    },
    "module": "smtplib"
   }
  ]
 },
 {
  "name": "quotedata",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "quotedata",
     "returns": "str"
    },
    "module": "smtplib"
   }
  ]
 },
 {
  "name": "what",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrPath | _ReadableBinary)",
       "arg": "file"
      },
      {
       "annotation": "None",
       "arg": "h"
      }
     ],
     "kwonlyargs": [],
     "name": "what",
     "returns": "(str | None)"
    },
    "module": "imghdr"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "file"
      },
      {
       "annotation": "bytes",
       "arg": "h"
      }
     ],
     "kwonlyargs": [],
     "name": "what",
     "returns": "(str | None)"
    },
    "module": "imghdr"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "what",
     "returns": "(SndHeaders | None)"
    },
    "module": "sndhdr"
   }
  ]
 },
 {
  "name": "whathdr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "whathdr",
     "returns": "(SndHeaders | None)"
    },
    "module": "sndhdr"
   }
  ]
 },
 {
  "name": "geohash",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "latitude"
      },
      {
       "annotation": "float",
       "arg": "longitude"
      },
      {
       "annotation": "bytes",
       "arg": "datedow"
      }
     ],
     "kwonlyargs": [],
     "name": "geohash",
     "returns": "None"
    },
    "module": "antigravity"
   }
  ]
 },
 {
  "name": "new_module",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "new_module",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "get_magic",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_magic",
     "returns": "bytes"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "get_tag",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_tag",
     "returns": "str"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "cache_from_source",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "path"
      },
      {
       "annotation": "(bool | None)",
       "arg": "debug_override"
      }
     ],
     "kwonlyargs": [],
     "name": "cache_from_source",
     "returns": "str"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "source_from_cache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "source_from_cache",
     "returns": "str"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "get_suffixes",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_suffixes",
     "returns": "list[tuple[str, str, int]]"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "load_source",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "str",
       "arg": "pathname"
      },
      {
       "annotation": "(_FileLike | None)",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "load_source",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "load_compiled",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "str",
       "arg": "pathname"
      },
      {
       "annotation": "(_FileLike | None)",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "load_compiled",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "load_package",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "StrPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "load_package",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "load_module",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(_FileLike | None)",
       "arg": "file"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "tuple[str, str, int]",
       "arg": "details"
      }
     ],
     "kwonlyargs": [],
     "name": "load_module",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "find_module",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(None | list[str] | list[PathLike[str]] | list[StrPath])",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "find_module",
     "returns": "tuple[IO[Any], str, tuple[str, str, int]]"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "reload",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "types.ModuleType",
       "arg": "module"
      }
     ],
     "kwonlyargs": [],
     "name": "reload",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "ModuleType",
       "arg": "module"
      }
     ],
     "kwonlyargs": [],
     "name": "reload",
     "returns": "ModuleType"
    },
    "module": "importlib"
   }
  ]
 },
 {
  "name": "init_builtin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "init_builtin",
     "returns": "(types.ModuleType | None)"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "load_dynamic",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "str",
       "arg": "path"
      },
      {
       "annotation": "Any",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "load_dynamic",
     "returns": "types.ModuleType"
    },
    "module": "imp"
   }
  ]
 },
 {
  "name": "fromfd",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FD",
       "arg": "fd"
      },
      {
       "annotation": "(AddressFamily | int)",
       "arg": "family"
      },
      {
       "annotation": "(SocketKind | int)",
       "arg": "type"
      },
      {
       "annotation": "int",
       "arg": "proto"
      }
     ],
     "kwonlyargs": [],
     "name": "fromfd",
     "returns": "socket"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "send_fds",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "socket",
       "arg": "sock"
      },
      {
       "annotation": "Iterable[bytes]",
       "arg": "buffers"
      },
      {
       "annotation": "(bytes | Iterable[int])",
       "arg": "fds"
      },
      {
       "annotation": "int",
       "arg": "flags"
      },
      {
       "annotation": "None",
       "arg": "address"
      }
     ],
     "kwonlyargs": [],
     "name": "send_fds",
     "returns": "int"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "recv_fds",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "socket",
       "arg": "sock"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "int",
       "arg": "maxfds"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "recv_fds",
     "returns": "tuple[bytes, list[int], int, Any]"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "socketpair",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | AddressFamily | None)",
       "arg": "family"
      },
      {
       "annotation": "(SocketType | int)",
       "arg": "type"
      },
      {
       "annotation": "int",
       "arg": "proto"
      }
     ],
     "kwonlyargs": [],
     "name": "socketpair",
     "returns": "tuple[socket, socket]"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "getfqdn",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "getfqdn",
     "returns": "str"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "create_connection",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[str | None, int]",
       "arg": "address"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(tuple[bytearray | bytes | str, int] | None)",
       "arg": "source_address"
      }
     ],
     "kwonlyargs": [],
     "name": "create_connection",
     "returns": "socket"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "has_dualstack_ipv6",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "has_dualstack_ipv6",
     "returns": "bool"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "create_server",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Address",
       "arg": "address"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "int",
       "arg": "family"
      },
      {
       "annotation": "(int | None)",
       "arg": "backlog"
      },
      {
       "annotation": "bool",
       "arg": "reuse_port"
      },
      {
       "annotation": "bool",
       "arg": "dualstack_ipv6"
      }
     ],
     "name": "create_server",
     "returns": "socket"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "getaddrinfo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | str | None)",
       "arg": "host"
      },
      {
       "annotation": "(str | int | None)",
       "arg": "port"
      },
      {
       "annotation": "int",
       "arg": "family"
      },
      {
       "annotation": "int",
       "arg": "type"
      },
      {
       "annotation": "int",
       "arg": "proto"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "getaddrinfo",
     "returns": "list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str,\n    int, int, int]]]"
    },
    "module": "socket"
   }
  ]
 },
 {
  "name": "_get_action_name",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Action | None)",
       "arg": "argument"
      }
     ],
     "kwonlyargs": [],
     "name": "_get_action_name",
     "returns": "(str | None)"
    },
    "module": "argparse"
   }
  ]
 },
 {
  "name": "__import__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "locals"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "fromlist"
      },
      {
       "annotation": "int",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "__import__",
     "returns": "ModuleType"
    },
    "module": "importlib"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "locals"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "fromlist"
      },
      {
       "annotation": "int",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "__import__",
     "returns": "types.ModuleType"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "import_module",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(str | None)",
       "arg": "package"
      }
     ],
     "kwonlyargs": [],
     "name": "import_module",
     "returns": "ModuleType"
    },
    "module": "importlib"
   }
  ]
 },
 {
  "name": "find_loader",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(str | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "find_loader",
     "returns": "(Loader | None)"
    },
    "module": "importlib"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "fullname"
      }
     ],
     "kwonlyargs": [],
     "name": "find_loader",
     "returns": "(Loader | None)"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "invalidate_caches",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "invalidate_caches",
     "returns": "None"
    },
    "module": "importlib"
   }
  ]
 },
 {
  "name": "getmembers",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "(_GetMembersPredicate | None)",
       "arg": "predicate"
      }
     ],
     "kwonlyargs": [],
     "name": "getmembers",
     "returns": "_GetMembersReturn"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getmodulename",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "getmodulename",
     "returns": "(str | None)"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "ismodule",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "ismodule",
     "returns": "TypeGuard[ModuleType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isclass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isclass",
     "returns": "TypeGuard[type[Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "ismethod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "ismethod",
     "returns": "TypeGuard[MethodType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isfunction",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isfunction",
     "returns": "TypeGuard[FunctionType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isgeneratorfunction",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "isgeneratorfunction",
     "returns": "bool"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "iscoroutinefunction",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "iscoroutinefunction",
     "returns": "bool"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isgenerator",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isgenerator",
     "returns": "TypeGuard[GeneratorType[Any, Any, Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "iscoroutine",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "iscoroutine",
     "returns": "TypeGuard[CoroutineType[Any, Any, Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isawaitable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isawaitable",
     "returns": "TypeGuard[Awaitable[Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isasyncgenfunction",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "isasyncgenfunction",
     "returns": "bool"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isasyncgen",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isasyncgen",
     "returns": "TypeGuard[AsyncGeneratorType[Any, Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "istraceback",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "istraceback",
     "returns": "TypeGuard[TracebackType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isframe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isframe",
     "returns": "TypeGuard[FrameType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "iscode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "iscode",
     "returns": "TypeGuard[CodeType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isbuiltin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isbuiltin",
     "returns": "TypeGuard[BuiltinFunctionType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isroutine",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isroutine",
     "returns": "TypeGuard[FunctionType | LambdaType | MethodType | BuiltinFunctionType |\n    BuiltinMethodType | WrapperDescriptorType | MethodDescriptorType |\n    ClassMethodDescriptorType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "ismethoddescriptor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "ismethoddescriptor",
     "returns": "TypeGuard[MethodDescriptorType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "ismemberdescriptor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "ismemberdescriptor",
     "returns": "TypeGuard[MemberDescriptorType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isabstract",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isabstract",
     "returns": "bool"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isgetsetdescriptor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isgetsetdescriptor",
     "returns": "TypeGuard[GetSetDescriptorType]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "isdatadescriptor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isdatadescriptor",
     "returns": "TypeGuard[_SupportsSet[Any, Any] | _SupportsDelete[Any]]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "findsource",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "findsource",
     "returns": "tuple[list[str], int]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getabsfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      },
      {
       "annotation": "(str | None)",
       "arg": "_filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getabsfile",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getblock",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[str]",
       "arg": "lines"
      }
     ],
     "kwonlyargs": [],
     "name": "getblock",
     "returns": "Sequence[str]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getdoc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getdoc",
     "returns": "(str | None)"
    },
    "module": "inspect"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getdoc",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "getcomments",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getcomments",
     "returns": "(str | None)"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getfile",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getmodule",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "(str | None)",
       "arg": "_filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getmodule",
     "returns": "(ModuleType | None)"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getsourcefile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getsourcefile",
     "returns": "(str | None)"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getsourcelines",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getsourcelines",
     "returns": "tuple[list[str], int]"
    },
    "module": "inspect"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "getsourcelines",
     "returns": "tuple[list[str], int]"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "getsource",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SourceObjectType",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "getsource",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "cleandoc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "doc"
      }
     ],
     "kwonlyargs": [],
     "name": "cleandoc",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "indentsize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "line"
      }
     ],
     "kwonlyargs": [],
     "name": "indentsize",
     "returns": "int"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "signature",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., Any]",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_wrapped"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "locals"
      },
      {
       "annotation": "bool",
       "arg": "eval_str"
      }
     ],
     "name": "signature",
     "returns": "Signature"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "get_annotations",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Callable[..., Any] | type[Any] | ModuleType)",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "locals"
      },
      {
       "annotation": "bool",
       "arg": "eval_str"
      }
     ],
     "name": "get_annotations",
     "returns": "dict[str, Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getclasstree",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[type]",
       "arg": "classes"
      },
      {
       "annotation": "bool",
       "arg": "unique"
      }
     ],
     "kwonlyargs": [],
     "name": "getclasstree",
     "returns": "list[Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "walktree",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[type]",
       "arg": "classes"
      },
      {
       "annotation": "dict[type[Any], list[type]]",
       "arg": "children"
      },
      {
       "annotation": "(type[Any] | None)",
       "arg": "parent"
      }
     ],
     "kwonlyargs": [],
     "name": "walktree",
     "returns": "list[Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getargs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "CodeType",
       "arg": "co"
      }
     ],
     "kwonlyargs": [],
     "name": "getargs",
     "returns": "Arguments"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getargspec",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "getargspec",
     "returns": "ArgSpec"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getfullargspec",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "getfullargspec",
     "returns": "FullArgSpec"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getargvalues",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FrameType",
       "arg": "frame"
      }
     ],
     "kwonlyargs": [],
     "name": "getargvalues",
     "returns": "ArgInfo"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "formatannotation",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "annotation"
      },
      {
       "annotation": "(str | None)",
       "arg": "base_module"
      }
     ],
     "kwonlyargs": [],
     "name": "formatannotation",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "formatannotationrelativeto",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "formatannotationrelativeto",
     "returns": "Callable[[object], str]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "formatargspec",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[str]",
       "arg": "args"
      },
      {
       "annotation": "(str | None)",
       "arg": "varargs"
      },
      {
       "annotation": "(str | None)",
       "arg": "varkw"
      },
      {
       "annotation": "(tuple[Any, ...] | None)",
       "arg": "defaults"
      },
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "kwonlyargs"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "kwonlydefaults"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "annotations"
      },
      {
       "annotation": "Callable[[str], str]",
       "arg": "formatarg"
      },
      {
       "annotation": "Callable[[str], str]",
       "arg": "formatvarargs"
      },
      {
       "annotation": "Callable[[str], str]",
       "arg": "formatvarkw"
      },
      {
       "annotation": "Callable[[Any], str]",
       "arg": "formatvalue"
      },
      {
       "annotation": "Callable[[Any], str]",
       "arg": "formatreturns"
      },
      {
       "annotation": "Callable[[Any], str]",
       "arg": "formatannotation"
      }
     ],
     "kwonlyargs": [],
     "name": "formatargspec",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "formatargvalues",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[str]",
       "arg": "args"
      },
      {
       "annotation": "(str | None)",
       "arg": "varargs"
      },
      {
       "annotation": "(str | None)",
       "arg": "varkw"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "locals"
      },
      {
       "annotation": "(Callable[[str], str] | None)",
       "arg": "formatarg"
      },
      {
       "annotation": "(Callable[[str], str] | None)",
       "arg": "formatvarargs"
      },
      {
       "annotation": "(Callable[[str], str] | None)",
       "arg": "formatvarkw"
      },
      {
       "annotation": "(Callable[[Any], str] | None)",
       "arg": "formatvalue"
      }
     ],
     "kwonlyargs": [],
     "name": "formatargvalues",
     "returns": "str"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getmro",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type",
       "arg": "cls"
      }
     ],
     "kwonlyargs": [],
     "name": "getmro",
     "returns": "tuple[type, ...]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getcallargs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, Any]",
       "arg": "__func"
      }
     ],
     "kwonlyargs": [],
     "name": "getcallargs",
     "returns": "dict[str, Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getclosurevars",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., Any]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "getclosurevars",
     "returns": "ClosureVars"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "unwrap",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., Any]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(Callable[[Any], Any] | None)",
       "arg": "stop"
      }
     ],
     "name": "unwrap",
     "returns": "Any"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getframeinfo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(FrameType | TracebackType)",
       "arg": "frame"
      },
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "getframeinfo",
     "returns": "Traceback"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getouterframes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "frame"
      },
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "getouterframes",
     "returns": "list[FrameInfo]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getinnerframes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "TracebackType",
       "arg": "tb"
      },
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "getinnerframes",
     "returns": "list[FrameInfo]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getlineno",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FrameType",
       "arg": "frame"
      }
     ],
     "kwonlyargs": [],
     "name": "getlineno",
     "returns": "int"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "currentframe",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "currentframe",
     "returns": "(FrameType | None)"
    },
    "module": "inspect"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "currentframe",
     "returns": "FrameType"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "stack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "stack",
     "returns": "list[FrameInfo]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "trace",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "trace",
     "returns": "list[FrameInfo]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getattr_static",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      },
      {
       "annotation": "str",
       "arg": "attr"
      },
      {
       "annotation": "(Any | None)",
       "arg": "default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr_static",
     "returns": "Any"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getgeneratorstate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Generator[Any, Any, Any]",
       "arg": "generator"
      }
     ],
     "kwonlyargs": [],
     "name": "getgeneratorstate",
     "returns": "Literal['GEN_CREATED', 'GEN_RUNNING', 'GEN_SUSPENDED', 'GEN_CLOSED']"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getcoroutinestate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Coroutine[Any, Any, Any]",
       "arg": "coroutine"
      }
     ],
     "kwonlyargs": [],
     "name": "getcoroutinestate",
     "returns": "Literal['CORO_CREATED', 'CORO_RUNNING', 'CORO_SUSPENDED', 'CORO_CLOSED']"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getgeneratorlocals",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Generator[Any, Any, Any]",
       "arg": "generator"
      }
     ],
     "kwonlyargs": [],
     "name": "getgeneratorlocals",
     "returns": "dict[str, Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "getcoroutinelocals",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Coroutine[Any, Any, Any]",
       "arg": "coroutine"
      }
     ],
     "kwonlyargs": [],
     "name": "getcoroutinelocals",
     "returns": "dict[str, Any]"
    },
    "module": "inspect"
   }
  ]
 },
 {
  "name": "classify_class_attrs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type",
       "arg": "cls"
      }
     ],
     "kwonlyargs": [],
     "name": "classify_class_attrs",
     "returns": "list[Attribute]"
    },
    "module": "inspect"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "classify_class_attrs",
     "returns": "list[tuple[str, str, type, str]]"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "getspall",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getspall",
     "returns": "list[struct_spwd]"
    },
    "module": "spwd"
   }
  ]
 },
 {
  "name": "getspnam",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__arg"
      }
     ],
     "kwonlyargs": [],
     "name": "getspnam",
     "returns": "struct_spwd"
    },
    "module": "spwd"
   }
  ]
 },
 {
  "name": "parse",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "filename"
      },
      {
       "annotation": "Literal['exec']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "Module"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "filename"
      },
      {
       "annotation": "Literal['eval']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "Expression"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "filename"
      },
      {
       "annotation": "Literal['func_type']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "FunctionType"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "filename"
      },
      {
       "annotation": "Literal['single']",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "Interactive"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Literal['eval']",
       "arg": "mode"
      },
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "Expression"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Literal['func_type']",
       "arg": "mode"
      },
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "FunctionType"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Literal['single']",
       "arg": "mode"
      },
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "Interactive"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "source"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "type_comments"
      },
      {
       "annotation": "(None | int | tuple[int, int])",
       "arg": "feature_version"
      }
     ],
     "name": "parse",
     "returns": "AST"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "str"
      },
      {
       "annotation": "int",
       "arg": "flags"
      },
      {
       "annotation": "(State | None)",
       "arg": "state"
      }
     ],
     "kwonlyargs": [],
     "name": "parse",
     "returns": "SubPattern"
    },
    "module": "sre_parse"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(IO[Any] | None)",
       "arg": "fp"
      },
      {
       "annotation": "SupportsItemAccess[str, str]",
       "arg": "environ"
      },
      {
       "annotation": "bool",
       "arg": "keep_blank_values"
      },
      {
       "annotation": "bool",
       "arg": "strict_parsing"
      },
      {
       "annotation": "str",
       "arg": "separator"
      }
     ],
     "kwonlyargs": [],
     "name": "parse",
     "returns": "dict[str, list[str]]"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "unparse",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "ast_obj"
      }
     ],
     "kwonlyargs": [],
     "name": "unparse",
     "returns": "str"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "copy_location",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "new_node"
      },
      {
       "annotation": "AST",
       "arg": "old_node"
      }
     ],
     "kwonlyargs": [],
     "name": "copy_location",
     "returns": "_T"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "dump",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "node"
      },
      {
       "annotation": "bool",
       "arg": "annotate_fields"
      },
      {
       "annotation": "bool",
       "arg": "include_attributes"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | str | None)",
       "arg": "indent"
      }
     ],
     "name": "dump",
     "returns": "str"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      },
      {
       "annotation": "IO[str]",
       "arg": "fp"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "skipkeys"
      },
      {
       "annotation": "bool",
       "arg": "ensure_ascii"
      },
      {
       "annotation": "bool",
       "arg": "check_circular"
      },
      {
       "annotation": "bool",
       "arg": "allow_nan"
      },
      {
       "annotation": "(type[JSONEncoder] | None)",
       "arg": "cls"
      },
      {
       "annotation": "(None | int | str)",
       "arg": "indent"
      },
      {
       "annotation": "(tuple[str, str] | None)",
       "arg": "separators"
      },
      {
       "annotation": "(Callable[[Any], Any] | None)",
       "arg": "default"
      },
      {
       "annotation": "bool",
       "arg": "sort_keys"
      }
     ],
     "name": "dump",
     "returns": "None"
    },
    "module": "json"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__value"
      },
      {
       "annotation": "IO[Any]",
       "arg": "__file"
      },
      {
       "annotation": "int",
       "arg": "__version"
      }
     ],
     "kwonlyargs": [],
     "name": "dump",
     "returns": "None"
    },
    "module": "marshal"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      },
      {
       "annotation": "_WritableFileobj",
       "arg": "file"
      },
      {
       "annotation": "(int | None)",
       "arg": "protocol"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "fix_imports"
      },
      {
       "annotation": "_BufferCallback",
       "arg": "buffer_callback"
      }
     ],
     "name": "dump",
     "returns": "None"
    },
    "module": "pickle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(Mapping[str, Any] | list[Any] | tuple[Any, ...] | str | bool | float |\n    bytes | datetime)",
       "arg": "value"
      },
      {
       "annotation": "IO[bytes]",
       "arg": "fp"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "PlistFormat",
       "arg": "fmt"
      },
      {
       "annotation": "bool",
       "arg": "sort_keys"
      },
      {
       "annotation": "bool",
       "arg": "skipkeys"
      }
     ],
     "name": "dump",
     "returns": "None"
    },
    "module": "plistlib"
   }
  ]
 },
 {
  "name": "fix_missing_locations",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "node"
      }
     ],
     "kwonlyargs": [],
     "name": "fix_missing_locations",
     "returns": "_T"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "get_docstring",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "node"
      },
      {
       "annotation": "bool",
       "arg": "clean"
      }
     ],
     "kwonlyargs": [],
     "name": "get_docstring",
     "returns": "(str | None)"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "increment_lineno",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "node"
      },
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "increment_lineno",
     "returns": "_T"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "iter_child_nodes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "node"
      }
     ],
     "kwonlyargs": [],
     "name": "iter_child_nodes",
     "returns": "Iterator[AST]"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "iter_fields",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "node"
      }
     ],
     "kwonlyargs": [],
     "name": "iter_fields",
     "returns": "Iterator[tuple[str, Any]]"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "literal_eval",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | AST)",
       "arg": "node_or_string"
      }
     ],
     "kwonlyargs": [],
     "name": "literal_eval",
     "returns": "Any"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "get_source_segment",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "source"
      },
      {
       "annotation": "AST",
       "arg": "node"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "padded"
      }
     ],
     "name": "get_source_segment",
     "returns": "(str | None)"
    },
    "module": "ast"
   }
  ]
 },
 {
  "name": "walk",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AST",
       "arg": "node"
      }
     ],
     "kwonlyargs": [],
     "name": "walk",
     "returns": "Iterator[AST]"
    },
    "module": "ast"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | PathLike[AnyStr])",
       "arg": "top"
      },
      {
       "annotation": "bool",
       "arg": "topdown"
      },
      {
       "annotation": "(_OnError | None)",
       "arg": "onerror"
      },
      {
       "annotation": "bool",
       "arg": "followlinks"
      }
     ],
     "kwonlyargs": [],
     "name": "walk",
     "returns": "Iterator[tuple[AnyStr, list[AnyStr], list[AnyStr]]]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "open_code",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "open_code",
     "returns": "IO[bytes]"
    },
    "module": "io"
   }
  ]
 },
 {
  "name": "ip_address",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_RawIPAddress",
       "arg": "address"
      }
     ],
     "kwonlyargs": [],
     "name": "ip_address",
     "returns": "(IPv4Address | IPv6Address)"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "ip_network",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_RawIPAddress | _RawNetworkPart)",
       "arg": "address"
      },
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "kwonlyargs": [],
     "name": "ip_network",
     "returns": "(IPv4Network | IPv6Network)"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "ip_interface",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_RawIPAddress | _RawNetworkPart)",
       "arg": "address"
      }
     ],
     "kwonlyargs": [],
     "name": "ip_interface",
     "returns": "(IPv4Interface | IPv6Interface)"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "v4_int_to_packed",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "address"
      }
     ],
     "kwonlyargs": [],
     "name": "v4_int_to_packed",
     "returns": "bytes"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "v6_int_to_packed",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "address"
      }
     ],
     "kwonlyargs": [],
     "name": "v6_int_to_packed",
     "returns": "bytes"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "summarize_address_range",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IPv4Address",
       "arg": "first"
      },
      {
       "annotation": "IPv4Address",
       "arg": "last"
      }
     ],
     "kwonlyargs": [],
     "name": "summarize_address_range",
     "returns": "Iterator[IPv4Network]"
    },
    "module": "ipaddress"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "IPv6Address",
       "arg": "first"
      },
      {
       "annotation": "IPv6Address",
       "arg": "last"
      }
     ],
     "kwonlyargs": [],
     "name": "summarize_address_range",
     "returns": "Iterator[IPv6Network]"
    },
    "module": "ipaddress"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(IPv4Address | IPv6Address)",
       "arg": "first"
      },
      {
       "annotation": "(IPv4Address | IPv6Address)",
       "arg": "last"
      }
     ],
     "kwonlyargs": [],
     "name": "summarize_address_range",
     "returns": "(Iterator[IPv4Network] | Iterator[IPv6Network])"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "collapse_addresses",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_N]",
       "arg": "addresses"
      }
     ],
     "kwonlyargs": [],
     "name": "collapse_addresses",
     "returns": "Iterator[_N]"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "get_mixed_type_key",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_A",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "get_mixed_type_key",
     "returns": "tuple[int, _A]"
    },
    "module": "ipaddress"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "IPv4Network",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "get_mixed_type_key",
     "returns": "tuple[int, IPv4Address, IPv4Address]"
    },
    "module": "ipaddress"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "IPv6Network",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "get_mixed_type_key",
     "returns": "tuple[int, IPv6Address, IPv6Address]"
    },
    "module": "ipaddress"
   }
  ]
 },
 {
  "name": "dis",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[_NamedIntConstant]",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "dis",
     "returns": "None"
    },
    "module": "sre_compile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | IO[bytes])",
       "arg": "pickle"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "out"
      },
      {
       "annotation": "(MutableMapping[int, Any] | None)",
       "arg": "memo"
      },
      {
       "annotation": "int",
       "arg": "indentlevel"
      },
      {
       "annotation": "int",
       "arg": "annotate"
      }
     ],
     "kwonlyargs": [],
     "name": "dis",
     "returns": "None"
    },
    "module": "pickletools"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(_HaveCodeOrStringType | None)",
       "arg": "x"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "(int | None)",
       "arg": "depth"
      }
     ],
     "name": "dis",
     "returns": "None"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "isstring",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "isstring",
     "returns": "bool"
    },
    "module": "sre_compile"
   }
  ]
 },
 {
  "name": "compile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes | SubPattern)",
       "arg": "p"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "compile",
     "returns": "Pattern[Any]"
    },
    "module": "sre_compile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer | AST)",
       "arg": "source"
      },
      {
       "annotation": "(str | ReadableBuffer | _PathLike[Any])",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "flags"
      },
      {
       "annotation": "int",
       "arg": "dont_inherit"
      },
      {
       "annotation": "int",
       "arg": "optimize"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "int",
       "arg": "_feature_version"
      }
     ],
     "name": "compile",
     "returns": "Any"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "file"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "cfile"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "dfile"
      },
      {
       "annotation": "bool",
       "arg": "doraise"
      },
      {
       "annotation": "int",
       "arg": "optimize"
      },
      {
       "annotation": "(PycInvalidationMode | None)",
       "arg": "invalidation_mode"
      },
      {
       "annotation": "int",
       "arg": "quiet"
      }
     ],
     "kwonlyargs": [],
     "name": "compile",
     "returns": "(AnyStr | None)"
    },
    "module": "py_compile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "compile",
     "returns": "Pattern[AnyStr]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "compile",
     "returns": "Pattern[AnyStr]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "tee",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T]",
       "arg": "__iterable"
      },
      {
       "annotation": "int",
       "arg": "__n"
      }
     ],
     "kwonlyargs": [],
     "name": "tee",
     "returns": "tuple[Iterator[_T], ...]"
    },
    "module": "itertools"
   }
  ]
 },
 {
  "name": "read",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "read",
     "returns": "None"
    },
    "module": "asyncore"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__length"
      }
     ],
     "kwonlyargs": [],
     "name": "read",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "write",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "write",
     "returns": "None"
    },
    "module": "asyncore"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "write",
     "returns": "int"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "arg"
      },
      {
       "annotation": "bool",
       "arg": "move"
      },
      {
       "annotation": "str",
       "arg": "align"
      },
      {
       "annotation": "tuple[str, int, str]",
       "arg": "font"
      }
     ],
     "kwonlyargs": [],
     "name": "write",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "readwrite",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "readwrite",
     "returns": "None"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "poll",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "timeout"
      },
      {
       "annotation": "(_maptype | None)",
       "arg": "map"
      }
     ],
     "kwonlyargs": [],
     "name": "poll",
     "returns": "None"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "poll2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "timeout"
      },
      {
       "annotation": "(_maptype | None)",
       "arg": "map"
      }
     ],
     "kwonlyargs": [],
     "name": "poll2",
     "returns": "None"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "loop",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "timeout"
      },
      {
       "annotation": "bool",
       "arg": "use_poll"
      },
      {
       "annotation": "(_maptype | None)",
       "arg": "map"
      },
      {
       "annotation": "(int | None)",
       "arg": "count"
      }
     ],
     "kwonlyargs": [],
     "name": "loop",
     "returns": "None"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "compact_traceback",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "compact_traceback",
     "returns": "tuple[tuple[str, str, str], type, type, str]"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "close_all",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_maptype | None)",
       "arg": "map"
      },
      {
       "annotation": "bool",
       "arg": "ignore_all"
      }
     ],
     "kwonlyargs": [],
     "name": "close_all",
     "returns": "None"
    },
    "module": "asyncore"
   }
  ]
 },
 {
  "name": "dumps",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "skipkeys"
      },
      {
       "annotation": "bool",
       "arg": "ensure_ascii"
      },
      {
       "annotation": "bool",
       "arg": "check_circular"
      },
      {
       "annotation": "bool",
       "arg": "allow_nan"
      },
      {
       "annotation": "(type[JSONEncoder] | None)",
       "arg": "cls"
      },
      {
       "annotation": "(None | int | str)",
       "arg": "indent"
      },
      {
       "annotation": "(tuple[str, str] | None)",
       "arg": "separators"
      },
      {
       "annotation": "(Callable[[Any], Any] | None)",
       "arg": "default"
      },
      {
       "annotation": "bool",
       "arg": "sort_keys"
      }
     ],
     "name": "dumps",
     "returns": "str"
    },
    "module": "json"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__value"
      },
      {
       "annotation": "int",
       "arg": "__version"
      }
     ],
     "kwonlyargs": [],
     "name": "dumps",
     "returns": "bytes"
    },
    "module": "marshal"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      },
      {
       "annotation": "(int | None)",
       "arg": "protocol"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "fix_imports"
      },
      {
       "annotation": "_BufferCallback",
       "arg": "buffer_callback"
      }
     ],
     "name": "dumps",
     "returns": "bytes"
    },
    "module": "pickle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(Mapping[str, Any] | list[Any] | tuple[Any, ...] | str | bool | float |\n    bytes | datetime)",
       "arg": "value"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "PlistFormat",
       "arg": "fmt"
      },
      {
       "annotation": "bool",
       "arg": "skipkeys"
      },
      {
       "annotation": "bool",
       "arg": "sort_keys"
      }
     ],
     "name": "dumps",
     "returns": "bytes"
    },
    "module": "plistlib"
   }
  ]
 },
 {
  "name": "loads",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "s"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(type[JSONDecoder] | None)",
       "arg": "cls"
      },
      {
       "annotation": "(Callable[[dict[Any, Any]], Any] | None)",
       "arg": "object_hook"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_float"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_int"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_constant"
      },
      {
       "annotation": "(Callable[[list[tuple[Any, Any]]], Any] | None)",
       "arg": "object_pairs_hook"
      }
     ],
     "name": "loads",
     "returns": "Any"
    },
    "module": "json"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__bytes"
      }
     ],
     "kwonlyargs": [],
     "name": "loads",
     "returns": "Any"
    },
    "module": "marshal"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "fix_imports"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "(Iterable[Any] | None)",
       "arg": "buffers"
      }
     ],
     "name": "loads",
     "returns": "Any"
    },
    "module": "pickle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "value"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(PlistFormat | None)",
       "arg": "fmt"
      },
      {
       "annotation": "type[MutableMapping[str, Any]]",
       "arg": "dict_type"
      }
     ],
     "name": "loads",
     "returns": "Any"
    },
    "module": "plistlib"
   }
  ]
 },
 {
  "name": "load",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRead[str | bytes]",
       "arg": "fp"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(type[JSONDecoder] | None)",
       "arg": "cls"
      },
      {
       "annotation": "(Callable[[dict[Any, Any]], Any] | None)",
       "arg": "object_hook"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_float"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_int"
      },
      {
       "annotation": "(Callable[[str], Any] | None)",
       "arg": "parse_constant"
      },
      {
       "annotation": "(Callable[[list[tuple[Any, Any]]], Any] | None)",
       "arg": "object_pairs_hook"
      }
     ],
     "name": "load",
     "returns": "Any"
    },
    "module": "json"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "IO[Any]",
       "arg": "__file"
      }
     ],
     "kwonlyargs": [],
     "name": "load",
     "returns": "Any"
    },
    "module": "marshal"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_ReadableFileobj",
       "arg": "file"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "fix_imports"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "(Iterable[Any] | None)",
       "arg": "buffers"
      }
     ],
     "name": "load",
     "returns": "Any"
    },
    "module": "pickle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "fp"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(PlistFormat | None)",
       "arg": "fmt"
      },
      {
       "annotation": "type[MutableMapping[str, Any]]",
       "arg": "dict_type"
      }
     ],
     "name": "load",
     "returns": "Any"
    },
    "module": "plistlib"
   }
  ]
 },
 {
  "name": "detect_encoding",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "detect_encoding",
     "returns": "str"
    },
    "module": "json"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], bytes]",
       "arg": "readline"
      }
     ],
     "kwonlyargs": [],
     "name": "detect_encoding",
     "returns": "tuple[str, Sequence[bytes]]"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "fix_flags",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "src"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "fix_flags",
     "returns": "int"
    },
    "module": "sre_parse"
   }
  ]
 },
 {
  "name": "parse_template",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "source"
      },
      {
       "annotation": "_Pattern[Any]",
       "arg": "state"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_template",
     "returns": "_TemplateType"
    },
    "module": "sre_parse"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "source"
      },
      {
       "annotation": "_Pattern[Any]",
       "arg": "state"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_template",
     "returns": "_TemplateByteType"
    },
    "module": "sre_parse"
   }
  ]
 },
 {
  "name": "expand_template",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_TemplateType",
       "arg": "template"
      },
      {
       "annotation": "Match[Any]",
       "arg": "match"
      }
     ],
     "kwonlyargs": [],
     "name": "expand_template",
     "returns": "str"
    },
    "module": "sre_parse"
   }
  ]
 },
 {
  "name": "_clear",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_clear",
     "returns": "None"
    },
    "module": "atexit"
   }
  ]
 },
 {
  "name": "_ncallbacks",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_ncallbacks",
     "returns": "int"
    },
    "module": "atexit"
   }
  ]
 },
 {
  "name": "_run_exitfuncs",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_run_exitfuncs",
     "returns": "None"
    },
    "module": "atexit"
   }
  ]
 },
 {
  "name": "register",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, _T]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "register",
     "returns": "Callable[_P, _T]"
    },
    "module": "atexit"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[str], CodecInfo | None]",
       "arg": "__search_function"
      }
     ],
     "kwonlyargs": [],
     "name": "register",
     "returns": "None"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(Callable[[], BaseBrowser] | None)",
       "arg": "klass"
      },
      {
       "annotation": "(BaseBrowser | None)",
       "arg": "instance"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "preferred"
      }
     ],
     "name": "register",
     "returns": "None"
    },
    "module": "webbrowser"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "signum"
      },
      {
       "annotation": "FileDescriptorLike",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "all_threads"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "register",
     "returns": "None"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "unregister",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., Any]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "unregister",
     "returns": "None"
    },
    "module": "atexit"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[str], CodecInfo | None]",
       "arg": "__search_function"
      }
     ],
     "kwonlyargs": [],
     "name": "unregister",
     "returns": "None"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "signum"
      }
     ],
     "kwonlyargs": [],
     "name": "unregister",
     "returns": "None"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "iskeyword",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "iskeyword",
     "returns": "bool"
    },
    "module": "keyword"
   }
  ]
 },
 {
  "name": "issoftkeyword",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "issoftkeyword",
     "returns": "bool"
    },
    "module": "keyword"
   }
  ]
 },
 {
  "name": "wrap_socket",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "socket.socket",
       "arg": "sock"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "keyfile"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "certfile"
      },
      {
       "annotation": "bool",
       "arg": "server_side"
      },
      {
       "annotation": "int",
       "arg": "cert_reqs"
      },
      {
       "annotation": "int",
       "arg": "ssl_version"
      },
      {
       "annotation": "(str | None)",
       "arg": "ca_certs"
      },
      {
       "annotation": "bool",
       "arg": "do_handshake_on_connect"
      },
      {
       "annotation": "bool",
       "arg": "suppress_ragged_eofs"
      },
      {
       "annotation": "(str | None)",
       "arg": "ciphers"
      }
     ],
     "kwonlyargs": [],
     "name": "wrap_socket",
     "returns": "SSLSocket"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "create_default_context",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Purpose",
       "arg": "purpose"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cafile"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "capath"
      },
      {
       "annotation": "(str | bytes | None)",
       "arg": "cadata"
      }
     ],
     "name": "create_default_context",
     "returns": "SSLContext"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "_create_unverified_context",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "protocol"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "int",
       "arg": "cert_reqs"
      },
      {
       "annotation": "bool",
       "arg": "check_hostname"
      },
      {
       "annotation": "Purpose",
       "arg": "purpose"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "certfile"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "keyfile"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cafile"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "capath"
      },
      {
       "annotation": "(str | bytes | None)",
       "arg": "cadata"
      }
     ],
     "name": "_create_unverified_context",
     "returns": "SSLContext"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "RAND_bytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__num"
      }
     ],
     "kwonlyargs": [],
     "name": "RAND_bytes",
     "returns": "bytes"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "RAND_pseudo_bytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__num"
      }
     ],
     "kwonlyargs": [],
     "name": "RAND_pseudo_bytes",
     "returns": "tuple[bytes, bool]"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "RAND_status",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "RAND_status",
     "returns": "bool"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "RAND_egd",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "RAND_egd",
     "returns": "None"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "RAND_add",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__s"
      },
      {
       "annotation": "float",
       "arg": "__entropy"
      }
     ],
     "kwonlyargs": [],
     "name": "RAND_add",
     "returns": "None"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "match_hostname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_PeerCertRetType",
       "arg": "cert"
      },
      {
       "annotation": "str",
       "arg": "hostname"
      }
     ],
     "kwonlyargs": [],
     "name": "match_hostname",
     "returns": "None"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "cert_time_to_seconds",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "cert_time"
      }
     ],
     "kwonlyargs": [],
     "name": "cert_time_to_seconds",
     "returns": "int"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "get_server_certificate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[str, int]",
       "arg": "addr"
      },
      {
       "annotation": "int",
       "arg": "ssl_version"
      },
      {
       "annotation": "(str | None)",
       "arg": "ca_certs"
      },
      {
       "annotation": "float",
       "arg": "timeout"
      }
     ],
     "kwonlyargs": [],
     "name": "get_server_certificate",
     "returns": "str"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "DER_cert_to_PEM_cert",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "der_cert_bytes"
      }
     ],
     "kwonlyargs": [],
     "name": "DER_cert_to_PEM_cert",
     "returns": "str"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "PEM_cert_to_DER_cert",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "pem_cert_string"
      }
     ],
     "kwonlyargs": [],
     "name": "PEM_cert_to_DER_cert",
     "returns": "bytes"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "get_default_verify_paths",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_default_verify_paths",
     "returns": "DefaultVerifyPaths"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "get_protocol_name",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "protocol_code"
      }
     ],
     "kwonlyargs": [],
     "name": "get_protocol_name",
     "returns": "str"
    },
    "module": "ssl"
   }
  ]
 },
 {
  "name": "add",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment1"
      },
      {
       "annotation": "bytes",
       "arg": "__fragment2"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "add",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "adpcm2lin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "(AdpcmState | None)",
       "arg": "__state"
      }
     ],
     "kwonlyargs": [],
     "name": "adpcm2lin",
     "returns": "tuple[bytes, AdpcmState]"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "alaw2lin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "alaw2lin",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "avg",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "avg",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "avgpp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "avgpp",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "bias",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "int",
       "arg": "__bias"
      }
     ],
     "kwonlyargs": [],
     "name": "bias",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "byteswap",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "byteswap",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "cross",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "cross",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "findfactor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "bytes",
       "arg": "__reference"
      }
     ],
     "kwonlyargs": [],
     "name": "findfactor",
     "returns": "float"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "findfit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "bytes",
       "arg": "__reference"
      }
     ],
     "kwonlyargs": [],
     "name": "findfit",
     "returns": "tuple[int, float]"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "findmax",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__length"
      }
     ],
     "kwonlyargs": [],
     "name": "findmax",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "getsample",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "int",
       "arg": "__index"
      }
     ],
     "kwonlyargs": [],
     "name": "getsample",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "lin2adpcm",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "(AdpcmState | None)",
       "arg": "__state"
      }
     ],
     "kwonlyargs": [],
     "name": "lin2adpcm",
     "returns": "tuple[bytes, AdpcmState]"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "lin2alaw",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "lin2alaw",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "lin2lin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "int",
       "arg": "__newwidth"
      }
     ],
     "kwonlyargs": [],
     "name": "lin2lin",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "lin2ulaw",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "lin2ulaw",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "max",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "max",
     "returns": "int"
    },
    "module": "audioop"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRichComparisonT",
       "arg": "__arg1"
      },
      {
       "annotation": "SupportsRichComparisonT",
       "arg": "__arg2"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      }
     ],
     "name": "max",
     "returns": "SupportsRichComparisonT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "__arg1"
      },
      {
       "annotation": "_T",
       "arg": "__arg2"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T], SupportsRichComparison]",
       "arg": "key"
      }
     ],
     "name": "max",
     "returns": "_T"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      }
     ],
     "name": "max",
     "returns": "SupportsRichComparisonT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T], SupportsRichComparison]",
       "arg": "key"
      }
     ],
     "name": "max",
     "returns": "_T"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      },
      {
       "annotation": "_T",
       "arg": "default"
      }
     ],
     "name": "max",
     "returns": "(SupportsRichComparisonT | _T)"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T1]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T1], SupportsRichComparison]",
       "arg": "key"
      },
      {
       "annotation": "_T2",
       "arg": "default"
      }
     ],
     "name": "max",
     "returns": "(_T1 | _T2)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "maxpp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "maxpp",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "minmax",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "minmax",
     "returns": "tuple[int, int]"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "mul",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "float",
       "arg": "__factor"
      }
     ],
     "kwonlyargs": [],
     "name": "mul",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "ratecv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "int",
       "arg": "__nchannels"
      },
      {
       "annotation": "int",
       "arg": "__inrate"
      },
      {
       "annotation": "int",
       "arg": "__outrate"
      },
      {
       "annotation": "(RatecvState | None)",
       "arg": "__state"
      },
      {
       "annotation": "int",
       "arg": "__weightA"
      },
      {
       "annotation": "int",
       "arg": "__weightB"
      }
     ],
     "kwonlyargs": [],
     "name": "ratecv",
     "returns": "tuple[bytes, RatecvState]"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "reverse",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "reverse",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "rms",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "rms",
     "returns": "int"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "tomono",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "float",
       "arg": "__lfactor"
      },
      {
       "annotation": "float",
       "arg": "__rfactor"
      }
     ],
     "kwonlyargs": [],
     "name": "tomono",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "tostereo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      },
      {
       "annotation": "float",
       "arg": "__lfactor"
      },
      {
       "annotation": "float",
       "arg": "__rfactor"
      }
     ],
     "kwonlyargs": [],
     "name": "tostereo",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "ulaw2lin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__fragment"
      },
      {
       "annotation": "int",
       "arg": "__width"
      }
     ],
     "kwonlyargs": [],
     "name": "ulaw2lin",
     "returns": "bytes"
    },
    "module": "audioop"
   }
  ]
 },
 {
  "name": "b64encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      },
      {
       "annotation": "(ReadableBuffer | None)",
       "arg": "altchars"
      }
     ],
     "kwonlyargs": [],
     "name": "b64encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b64decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      },
      {
       "annotation": "(ReadableBuffer | None)",
       "arg": "altchars"
      },
      {
       "annotation": "bool",
       "arg": "validate"
      }
     ],
     "kwonlyargs": [],
     "name": "b64decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "standard_b64encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "standard_b64encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "standard_b64decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "standard_b64decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "urlsafe_b64encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "urlsafe_b64encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "urlsafe_b64decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "urlsafe_b64decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b32encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "b32encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b32decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      },
      {
       "annotation": "bool",
       "arg": "casefold"
      },
      {
       "annotation": "(bytes | None)",
       "arg": "map01"
      }
     ],
     "kwonlyargs": [],
     "name": "b32decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b16encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "b16encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b16decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      },
      {
       "annotation": "bool",
       "arg": "casefold"
      }
     ],
     "kwonlyargs": [],
     "name": "b16decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b32hexencode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "b32hexencode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b32hexdecode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "s"
      },
      {
       "annotation": "bool",
       "arg": "casefold"
      }
     ],
     "kwonlyargs": [],
     "name": "b32hexdecode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "a85encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "b"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "foldspaces"
      },
      {
       "annotation": "int",
       "arg": "wrapcol"
      },
      {
       "annotation": "bool",
       "arg": "pad"
      },
      {
       "annotation": "bool",
       "arg": "adobe"
      }
     ],
     "name": "a85encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "a85decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "b"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "foldspaces"
      },
      {
       "annotation": "bool",
       "arg": "adobe"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "ignorechars"
      }
     ],
     "name": "a85decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b85encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "b"
      },
      {
       "annotation": "bool",
       "arg": "pad"
      }
     ],
     "kwonlyargs": [],
     "name": "b85encode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "b85decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer)",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "b85decode",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "input"
      },
      {
       "annotation": "IO[bytes]",
       "arg": "output"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "None"
    },
    "module": "base64"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "obj"
      },
      {
       "annotation": "_BytesToBytesEncoding",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "bytes"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "obj"
      },
      {
       "annotation": "_StrToStrEncoding",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "str"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "obj"
      },
      {
       "annotation": "Literal['hex', 'hex_codec']",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "bytes"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "obj"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "str"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "in_file"
      },
      {
       "annotation": "(_File | None)",
       "arg": "out_file"
      },
      {
       "annotation": "(int | None)",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "quiet"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "None"
    },
    "module": "uu"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BinaryIO",
       "arg": "input"
      },
      {
       "annotation": "BinaryIO",
       "arg": "output"
      },
      {
       "annotation": "int",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "decode",
     "returns": "None"
    },
    "module": "quopri"
   }
  ]
 },
 {
  "name": "encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "input"
      },
      {
       "annotation": "IO[bytes]",
       "arg": "output"
      }
     ],
     "kwonlyargs": [],
     "name": "encode",
     "returns": "None"
    },
    "module": "base64"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "obj"
      },
      {
       "annotation": "_BytesToBytesEncoding",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "encode",
     "returns": "bytes"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "obj"
      },
      {
       "annotation": "_StrToStrEncoding",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "encode",
     "returns": "str"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "obj"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "encode",
     "returns": "bytes"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_File",
       "arg": "in_file"
      },
      {
       "annotation": "_File",
       "arg": "out_file"
      },
      {
       "annotation": "(str | None)",
       "arg": "name"
      },
      {
       "annotation": "(int | None)",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "backtick"
      }
     ],
     "name": "encode",
     "returns": "None"
    },
    "module": "uu"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BinaryIO",
       "arg": "input"
      },
      {
       "annotation": "BinaryIO",
       "arg": "output"
      },
      {
       "annotation": "int",
       "arg": "quotetabs"
      },
      {
       "annotation": "int",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "encode",
     "returns": "None"
    },
    "module": "quopri"
   }
  ]
 },
 {
  "name": "encodebytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "encodebytes",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "decodebytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "ReadableBuffer",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "decodebytes",
     "returns": "bytes"
    },
    "module": "base64"
   }
  ]
 },
 {
  "name": "getline",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "int",
       "arg": "lineno"
      },
      {
       "annotation": "(_ModuleGlobals | None)",
       "arg": "module_globals"
      }
     ],
     "kwonlyargs": [],
     "name": "getline",
     "returns": "str"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "clearcache",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clearcache",
     "returns": "None"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "getlines",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "(_ModuleGlobals | None)",
       "arg": "module_globals"
      }
     ],
     "kwonlyargs": [],
     "name": "getlines",
     "returns": "list[str]"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "checkcache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "checkcache",
     "returns": "None"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "updatecache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "(_ModuleGlobals | None)",
       "arg": "module_globals"
      }
     ],
     "kwonlyargs": [],
     "name": "updatecache",
     "returns": "list[str]"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "lazycache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "_ModuleGlobals",
       "arg": "module_globals"
      }
     ],
     "kwonlyargs": [],
     "name": "lazycache",
     "returns": "bool"
    },
    "module": "linecache"
   }
  ]
 },
 {
  "name": "fmean",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsFloat]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "fmean",
     "returns": "float"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "geometric_mean",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsFloat]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "geometric_mean",
     "returns": "float"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "mean",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "mean",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "harmonic_mean",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "(Iterable[_Number] | None)",
       "arg": "weights"
      }
     ],
     "kwonlyargs": [],
     "name": "harmonic_mean",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "median",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "median",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "median_low",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "median_low",
     "returns": "SupportsRichComparisonT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "median_high",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "median_high",
     "returns": "SupportsRichComparisonT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "median_grouped",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "_NumberT",
       "arg": "interval"
      }
     ],
     "kwonlyargs": [],
     "name": "median_grouped",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "mode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_HashableT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "mode",
     "returns": "_HashableT"
    },
    "module": "statistics"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "mode",
     "returns": "str"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "mode",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "multimode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_HashableT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "multimode",
     "returns": "list[_HashableT]"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "pstdev",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "(_NumberT | None)",
       "arg": "mu"
      }
     ],
     "kwonlyargs": [],
     "name": "pstdev",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "pvariance",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "(_NumberT | None)",
       "arg": "mu"
      }
     ],
     "kwonlyargs": [],
     "name": "pvariance",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "quantiles",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "Literal['inclusive', 'exclusive']",
       "arg": "method"
      }
     ],
     "name": "quantiles",
     "returns": "list[_NumberT]"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "stdev",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "(_NumberT | None)",
       "arg": "xbar"
      }
     ],
     "kwonlyargs": [],
     "name": "stdev",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "variance",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_NumberT]",
       "arg": "data"
      },
      {
       "annotation": "(_NumberT | None)",
       "arg": "xbar"
      }
     ],
     "kwonlyargs": [],
     "name": "variance",
     "returns": "_NumberT"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "correlation",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[_Number]",
       "arg": "__x"
      },
      {
       "annotation": "Sequence[_Number]",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "correlation",
     "returns": "float"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "covariance",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[_Number]",
       "arg": "__x"
      },
      {
       "annotation": "Sequence[_Number]",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "covariance",
     "returns": "float"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "linear_regression",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[_Number]",
       "arg": "__regressor"
      },
      {
       "annotation": "Sequence[_Number]",
       "arg": "__dependent_variable"
      }
     ],
     "kwonlyargs": [],
     "name": "linear_regression",
     "returns": "LinearRegression"
    },
    "module": "statistics"
   }
  ]
 },
 {
  "name": "checkfuncname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Breakpoint",
       "arg": "b"
      },
      {
       "annotation": "FrameType",
       "arg": "frame"
      }
     ],
     "kwonlyargs": [],
     "name": "checkfuncname",
     "returns": "bool"
    },
    "module": "bdb"
   }
  ]
 },
 {
  "name": "effective",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "file"
      },
      {
       "annotation": "int",
       "arg": "line"
      },
      {
       "annotation": "FrameType",
       "arg": "frame"
      }
     ],
     "kwonlyargs": [],
     "name": "effective",
     "returns": "(tuple[Breakpoint, bool] | tuple[None, None])"
    },
    "module": "bdb"
   }
  ]
 },
 {
  "name": "set_trace",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "set_trace",
     "returns": "None"
    },
    "module": "bdb"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "header"
      }
     ],
     "name": "set_trace",
     "returns": "None"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "setlocale",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "category"
      },
      {
       "annotation": "(_str | Iterable[_str | None] | None)",
       "arg": "locale"
      }
     ],
     "kwonlyargs": [],
     "name": "setlocale",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "localeconv",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "localeconv",
     "returns": "Mapping[_str, int | _str | list[int]]"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "nl_langinfo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__key"
      }
     ],
     "kwonlyargs": [],
     "name": "nl_langinfo",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "getdefaultlocale",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[_str, ...]",
       "arg": "envvars"
      }
     ],
     "kwonlyargs": [],
     "name": "getdefaultlocale",
     "returns": "tuple[_str | None, _str | None]"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "getlocale",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "category"
      }
     ],
     "kwonlyargs": [],
     "name": "getlocale",
     "returns": "tuple[_str | None, _str | None]"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "getpreferredencoding",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "do_setlocale"
      }
     ],
     "kwonlyargs": [],
     "name": "getpreferredencoding",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "normalize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "localename"
      }
     ],
     "kwonlyargs": [],
     "name": "normalize",
     "returns": "_str"
    },
    "module": "locale"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__form"
      },
      {
       "annotation": "str",
       "arg": "__unistr"
      }
     ],
     "kwonlyargs": [],
     "name": "normalize",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "resetlocale",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "category"
      }
     ],
     "kwonlyargs": [],
     "name": "resetlocale",
     "returns": "None"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "strcoll",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "__os1"
      },
      {
       "annotation": "_str",
       "arg": "__os2"
      }
     ],
     "kwonlyargs": [],
     "name": "strcoll",
     "returns": "int"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "strxfrm",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "strxfrm",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "format",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "percent"
      },
      {
       "annotation": "(float | Decimal)",
       "arg": "value"
      },
      {
       "annotation": "bool",
       "arg": "grouping"
      },
      {
       "annotation": "bool",
       "arg": "monetary"
      }
     ],
     "kwonlyargs": [],
     "name": "format",
     "returns": "_str"
    },
    "module": "locale"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__value"
      },
      {
       "annotation": "str",
       "arg": "__format_spec"
      }
     ],
     "kwonlyargs": [],
     "name": "format",
     "returns": "str"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "cols"
      },
      {
       "annotation": "int",
       "arg": "colwidth"
      },
      {
       "annotation": "int",
       "arg": "spacing"
      }
     ],
     "kwonlyargs": [],
     "name": "format",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "format_string",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "f"
      },
      {
       "annotation": "Any",
       "arg": "val"
      },
      {
       "annotation": "bool",
       "arg": "grouping"
      },
      {
       "annotation": "bool",
       "arg": "monetary"
      }
     ],
     "kwonlyargs": [],
     "name": "format_string",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "currency",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | float | Decimal)",
       "arg": "val"
      },
      {
       "annotation": "bool",
       "arg": "symbol"
      },
      {
       "annotation": "bool",
       "arg": "grouping"
      },
      {
       "annotation": "bool",
       "arg": "international"
      }
     ],
     "kwonlyargs": [],
     "name": "currency",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "delocalize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "string"
      }
     ],
     "kwonlyargs": [],
     "name": "delocalize",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "atof",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "string"
      },
      {
       "annotation": "Callable[[_str], float]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "atof",
     "returns": "float"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "atoi",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_str",
       "arg": "string"
      }
     ],
     "kwonlyargs": [],
     "name": "atoi",
     "returns": "int"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "str",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "val"
      }
     ],
     "kwonlyargs": [],
     "name": "str",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "dcgettext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_str | None)",
       "arg": "__domain"
      },
      {
       "annotation": "_str",
       "arg": "__msg"
      },
      {
       "annotation": "int",
       "arg": "__category"
      }
     ],
     "kwonlyargs": [],
     "name": "dcgettext",
     "returns": "_str"
    },
    "module": "locale"
   }
  ]
 },
 {
  "name": "capwords",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      },
      {
       "annotation": "(str | None)",
       "arg": "sep"
      }
     ],
     "kwonlyargs": [],
     "name": "capwords",
     "returns": "str"
    },
    "module": "string"
   }
  ]
 },
 {
  "name": "a2b_uu",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "a2b_uu",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "b2a_uu",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "backtick"
      }
     ],
     "name": "b2a_uu",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "a2b_base64",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "a2b_base64",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "b2a_base64",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "newline"
      }
     ],
     "name": "b2a_base64",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "a2b_qp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "data"
      },
      {
       "annotation": "bool",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "a2b_qp",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "b2a_qp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "bool",
       "arg": "quotetabs"
      },
      {
       "annotation": "bool",
       "arg": "istext"
      },
      {
       "annotation": "bool",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "b2a_qp",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "a2b_hqx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "a2b_hqx",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "rledecode_hqx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "rledecode_hqx",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "rlecode_hqx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "rlecode_hqx",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "b2a_hqx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "b2a_hqx",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "crc_hqx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "__crc"
      }
     ],
     "kwonlyargs": [],
     "name": "crc_hqx",
     "returns": "int"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "crc32",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "__crc"
      }
     ],
     "kwonlyargs": [],
     "name": "crc32",
     "returns": "int"
    },
    "module": "binascii"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(array[Any] | bytes)",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "__value"
      }
     ],
     "kwonlyargs": [],
     "name": "crc32",
     "returns": "int"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "b2a_hex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      }
     ],
     "kwonlyargs": [],
     "name": "b2a_hex",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "hexlify",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      },
      {
       "annotation": "(str | bytes)",
       "arg": "sep"
      },
      {
       "annotation": "int",
       "arg": "bytes_per_sep"
      }
     ],
     "kwonlyargs": [],
     "name": "hexlify",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "a2b_hex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__hexstr"
      }
     ],
     "kwonlyargs": [],
     "name": "a2b_hex",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "unhexlify",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__hexstr"
      }
     ],
     "kwonlyargs": [],
     "name": "unhexlify",
     "returns": "bytes"
    },
    "module": "binascii"
   }
  ]
 },
 {
  "name": "getLogger",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "getLogger",
     "returns": "Logger"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "getLoggerClass",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getLoggerClass",
     "returns": "type[Logger]"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "getLogRecordFactory",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getLogRecordFactory",
     "returns": "Callable[..., LogRecord]"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "debug",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "debug",
     "returns": "None"
    },
    "module": "logging"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(None | str | types.ModuleType)",
       "arg": "module"
      },
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "bool",
       "arg": "pm"
      }
     ],
     "kwonlyargs": [],
     "name": "debug",
     "returns": "None"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "info",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "info",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "warning",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "warning",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "warn",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "warn",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "error",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "error",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "critical",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "critical",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "exception",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "exception",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "log",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "level"
      },
      {
       "annotation": "object",
       "arg": "msg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_ExcInfoType",
       "arg": "exc_info"
      },
      {
       "annotation": "bool",
       "arg": "stack_info"
      },
      {
       "annotation": "int",
       "arg": "stacklevel"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "extra"
      }
     ],
     "name": "log",
     "returns": "None"
    },
    "module": "logging"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "base"
      }
     ],
     "kwonlyargs": [],
     "name": "log",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__x"
      },
      {
       "annotation": "_C",
       "arg": "__y_obj"
      }
     ],
     "kwonlyargs": [],
     "name": "log",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "disable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "disable",
     "returns": "None"
    },
    "module": "logging"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "disable",
     "returns": "None"
    },
    "module": "faulthandler"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "disable",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "addLevelName",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "level"
      },
      {
       "annotation": "str",
       "arg": "levelName"
      }
     ],
     "kwonlyargs": [],
     "name": "addLevelName",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "getLevelName",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Level",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "getLevelName",
     "returns": "Any"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "makeLogRecord",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Mapping[str, object]",
       "arg": "dict"
      }
     ],
     "kwonlyargs": [],
     "name": "makeLogRecord",
     "returns": "LogRecord"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "basicConfig",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(StrPath | None)",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "filemode"
      },
      {
       "annotation": "str",
       "arg": "format"
      },
      {
       "annotation": "(str | None)",
       "arg": "datefmt"
      },
      {
       "annotation": "_FormatStyle",
       "arg": "style"
      },
      {
       "annotation": "(_Level | None)",
       "arg": "level"
      },
      {
       "annotation": "(SupportsWrite[str] | None)",
       "arg": "stream"
      },
      {
       "annotation": "(Iterable[Handler] | None)",
       "arg": "handlers"
      },
      {
       "annotation": "(bool | None)",
       "arg": "force"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "basicConfig",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "shutdown",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[Any]",
       "arg": "handlerList"
      }
     ],
     "kwonlyargs": [],
     "name": "shutdown",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "setLoggerClass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[Logger]",
       "arg": "klass"
      }
     ],
     "kwonlyargs": [],
     "name": "setLoggerClass",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "captureWarnings",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "capture"
      }
     ],
     "kwonlyargs": [],
     "name": "captureWarnings",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "setLogRecordFactory",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., LogRecord]",
       "arg": "factory"
      }
     ],
     "kwonlyargs": [],
     "name": "setLogRecordFactory",
     "returns": "None"
    },
    "module": "logging"
   }
  ]
 },
 {
  "name": "in_table_a1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_a1",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_b1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_b1",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "map_table_b3",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "map_table_b3",
     "returns": "str"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "map_table_b2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "a"
      }
     ],
     "kwonlyargs": [],
     "name": "map_table_b2",
     "returns": "str"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c11",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c11",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c12",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c12",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c11_c12",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c11_c12",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c21",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c21",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c22",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c22",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c21_c22",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c21_c22",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c3",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c3",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c4",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c5",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c5",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c6",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c6",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c7",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c7",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c8",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c8",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_c9",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_c9",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_d1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_d1",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "in_table_d2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "in_table_d2",
     "returns": "bool"
    },
    "module": "stringprep"
   }
  ]
 },
 {
  "name": "getfileinfo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "getfileinfo",
     "returns": "_FileInfoTuple"
    },
    "module": "binhex"
   }
  ]
 },
 {
  "name": "binhex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "inp"
      },
      {
       "annotation": "str",
       "arg": "out"
      }
     ],
     "kwonlyargs": [],
     "name": "binhex",
     "returns": "None"
    },
    "module": "binhex"
   }
  ]
 },
 {
  "name": "hexbin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "inp"
      },
      {
       "annotation": "str",
       "arg": "out"
      }
     ],
     "kwonlyargs": [],
     "name": "hexbin",
     "returns": "None"
    },
    "module": "binhex"
   }
  ]
 },
 {
  "name": "is_check_supported",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__check_id"
      }
     ],
     "kwonlyargs": [],
     "name": "is_check_supported",
     "returns": "bool"
    },
    "module": "lzma"
   }
  ]
 },
 {
  "name": "pack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "fmt"
      }
     ],
     "kwonlyargs": [],
     "name": "pack",
     "returns": "bytes"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "pack_into",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "fmt"
      },
      {
       "annotation": "WriteableBuffer",
       "arg": "buffer"
      },
      {
       "annotation": "int",
       "arg": "offset"
      }
     ],
     "kwonlyargs": [],
     "name": "pack_into",
     "returns": "None"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "unpack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__format"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "__buffer"
      }
     ],
     "kwonlyargs": [],
     "name": "unpack",
     "returns": "tuple[Any, ...]"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "unpack_from",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__format"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "buffer"
      },
      {
       "annotation": "int",
       "arg": "offset"
      }
     ],
     "kwonlyargs": [],
     "name": "unpack_from",
     "returns": "tuple[Any, ...]"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "iter_unpack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__format"
      },
      {
       "annotation": "ReadableBuffer",
       "arg": "__buffer"
      }
     ],
     "kwonlyargs": [],
     "name": "iter_unpack",
     "returns": "Iterator[tuple[Any, ...]]"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "calcsize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__format"
      }
     ],
     "kwonlyargs": [],
     "name": "calcsize",
     "returns": "int"
    },
    "module": "struct"
   }
  ]
 },
 {
  "name": "run",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "input"
      },
      {
       "annotation": "Literal[True]",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[str]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "input"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[str]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "input"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[str]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Literal[True]",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      },
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "input"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[str]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "Literal[False]",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "(bytes | None)",
       "arg": "input"
      },
      {
       "annotation": "Literal[None, False]",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[bytes]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "capture_output"
      },
      {
       "annotation": "bool",
       "arg": "check"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "run",
     "returns": "CompletedProcess[Any]"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "(str | None)",
       "arg": "filename"
      },
      {
       "annotation": "(str | int)",
       "arg": "sort"
      }
     ],
     "kwonlyargs": [],
     "name": "run",
     "returns": "None"
    },
    "module": "cProfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "locals"
      }
     ],
     "kwonlyargs": [],
     "name": "run",
     "returns": "None"
    },
    "module": "pdb"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "(str | None)",
       "arg": "filename"
      },
      {
       "annotation": "(str | int)",
       "arg": "sort"
      }
     ],
     "kwonlyargs": [],
     "name": "run",
     "returns": "None"
    },
    "module": "profile"
   }
  ]
 },
 {
  "name": "call",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "name": "call",
     "returns": "int"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "check_call",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stdout"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "kwonlyargs": [],
     "name": "check_call",
     "returns": "int"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "check_output",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "Literal[True]",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "str"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "str"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "str"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Literal[True]",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "str"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "Literal[False]",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "Literal[None, False]",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "bytes"
    },
    "module": "subprocess"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_CMD",
       "arg": "args"
      },
      {
       "annotation": "int",
       "arg": "bufsize"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "executable"
      },
      {
       "annotation": "_FILE",
       "arg": "stdin"
      },
      {
       "annotation": "_FILE",
       "arg": "stderr"
      },
      {
       "annotation": "(Callable[[], Any] | None)",
       "arg": "preexec_fn"
      },
      {
       "annotation": "bool",
       "arg": "close_fds"
      },
      {
       "annotation": "bool",
       "arg": "shell"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "cwd"
      },
      {
       "annotation": "(_ENV | None)",
       "arg": "env"
      },
      {
       "annotation": "bool",
       "arg": "universal_newlines"
      },
      {
       "annotation": "Any",
       "arg": "startupinfo"
      },
      {
       "annotation": "int",
       "arg": "creationflags"
      },
      {
       "annotation": "bool",
       "arg": "restore_signals"
      },
      {
       "annotation": "bool",
       "arg": "start_new_session"
      },
      {
       "annotation": "Any",
       "arg": "pass_fds"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      },
      {
       "annotation": "(_TXT | None)",
       "arg": "input"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(bool | None)",
       "arg": "text"
      }
     ],
     "name": "check_output",
     "returns": "Any"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "getstatusoutput",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_TXT",
       "arg": "cmd"
      }
     ],
     "kwonlyargs": [],
     "name": "getstatusoutput",
     "returns": "tuple[int, str]"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "getoutput",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_TXT",
       "arg": "cmd"
      }
     ],
     "kwonlyargs": [],
     "name": "getoutput",
     "returns": "str"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "list2cmdline",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[StrOrBytesPath]",
       "arg": "seq"
      }
     ],
     "kwonlyargs": [],
     "name": "list2cmdline",
     "returns": "str"
    },
    "module": "subprocess"
   }
  ]
 },
 {
  "name": "abs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsAbs[_T]",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "abs",
     "returns": "_T"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "all",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[object]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "all",
     "returns": "bool"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "any",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[object]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "any",
     "returns": "bool"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "any",
     "returns": "str"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "ascii",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "ascii",
     "returns": "str"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "bin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | SupportsIndex)",
       "arg": "__number"
      }
     ],
     "kwonlyargs": [],
     "name": "bin",
     "returns": "str"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "breakpoint",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "breakpoint",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "callable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "callable",
     "returns": "TypeGuard[Callable[..., object]]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "chr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__i"
      }
     ],
     "kwonlyargs": [],
     "name": "chr",
     "returns": "str"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "aiter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsAiter[_SupportsAnextT]",
       "arg": "__async_iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "aiter",
     "returns": "_SupportsAnextT"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "anext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsSynchronousAnext[_AwaitableT]",
       "arg": "__i"
      }
     ],
     "kwonlyargs": [],
     "name": "anext",
     "returns": "_AwaitableT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsAnext[_T]",
       "arg": "__i"
      },
      {
       "annotation": "_VT",
       "arg": "default"
      }
     ],
     "kwonlyargs": [],
     "name": "anext",
     "returns": "(_T | _VT)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "copyright",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "copyright",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "credits",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "credits",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "delattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      },
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "delattr",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "dir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      }
     ],
     "kwonlyargs": [],
     "name": "dir",
     "returns": "list[str]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "divmod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsDivMod[_T_contra, _T_co]",
       "arg": "__x"
      },
      {
       "annotation": "_T_contra",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "divmod",
     "returns": "_T_co"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_T_contra",
       "arg": "__x"
      },
      {
       "annotation": "SupportsRDivMod[_T_contra, _T_co]",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "divmod",
     "returns": "_T_co"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "eval",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer | CodeType)",
       "arg": "__source"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "__globals"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "__locals"
      }
     ],
     "kwonlyargs": [],
     "name": "eval",
     "returns": "Any"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "exec",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | ReadableBuffer | CodeType)",
       "arg": "__source"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "__globals"
      },
      {
       "annotation": "(Mapping[str, object] | None)",
       "arg": "__locals"
      }
     ],
     "kwonlyargs": [],
     "name": "exec",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "exit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "exit",
     "returns": "NoReturn"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__status"
      }
     ],
     "kwonlyargs": [],
     "name": "exit",
     "returns": "NoReturn"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "Any"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "__name"
      },
      {
       "annotation": "None",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "(Any | None)"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "__name"
      },
      {
       "annotation": "bool",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "(Any | bool)"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "list[Any]",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "(Any | list[Any])"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "dict[Any, Any]",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "(Any | dict[Any, Any])"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__o"
      },
      {
       "annotation": "str",
       "arg": "__name"
      },
      {
       "annotation": "_T",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "getattr",
     "returns": "(Any | _T)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "globals",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "globals",
     "returns": "dict[str, Any]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "hasattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      },
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "hasattr",
     "returns": "bool"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "hash",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "hash",
     "returns": "int"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "help",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "request"
      }
     ],
     "kwonlyargs": [],
     "name": "help",
     "returns": "None"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "help",
     "returns": "None"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "hex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | SupportsIndex)",
       "arg": "__number"
      }
     ],
     "kwonlyargs": [],
     "name": "hex",
     "returns": "str"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "id",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "id",
     "returns": "int"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "input",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__prompt"
      }
     ],
     "kwonlyargs": [],
     "name": "input",
     "returns": "str"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | Iterable[StrOrBytesPath] | None)",
       "arg": "files"
      },
      {
       "annotation": "bool",
       "arg": "inplace"
      },
      {
       "annotation": "str",
       "arg": "backup"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "Callable[[StrOrBytesPath, str], IO[AnyStr]]",
       "arg": "openhook"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "input",
     "returns": "FileInput[AnyStr]"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "iter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsIter[_SupportsNextT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "iter",
     "returns": "_SupportsNextT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], _T | None]",
       "arg": "__function"
      },
      {
       "annotation": "None",
       "arg": "__sentinel"
      }
     ],
     "kwonlyargs": [],
     "name": "iter",
     "returns": "Iterator[_T]"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], _T]",
       "arg": "__function"
      },
      {
       "annotation": "object",
       "arg": "__sentinel"
      }
     ],
     "kwonlyargs": [],
     "name": "iter",
     "returns": "Iterator[_T]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "isinstance",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      },
      {
       "annotation": "(type | types.UnionType | tuple[type | types.UnionType | tuple[Any, ...], ...])",
       "arg": "__class_or_tuple"
      }
     ],
     "kwonlyargs": [],
     "name": "isinstance",
     "returns": "bool"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "issubclass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type",
       "arg": "__cls"
      },
      {
       "annotation": "(type | types.UnionType | tuple[type | types.UnionType | tuple[Any, ...], ...])",
       "arg": "__class_or_tuple"
      }
     ],
     "kwonlyargs": [],
     "name": "issubclass",
     "returns": "bool"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "len",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sized",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "len",
     "returns": "int"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "license",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "license",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "locals",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "locals",
     "returns": "dict[str, Any]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "min",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRichComparisonT",
       "arg": "__arg1"
      },
      {
       "annotation": "SupportsRichComparisonT",
       "arg": "__arg2"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      }
     ],
     "name": "min",
     "returns": "SupportsRichComparisonT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "__arg1"
      },
      {
       "annotation": "_T",
       "arg": "__arg2"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T], SupportsRichComparison]",
       "arg": "key"
      }
     ],
     "name": "min",
     "returns": "_T"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      }
     ],
     "name": "min",
     "returns": "SupportsRichComparisonT"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T], SupportsRichComparison]",
       "arg": "key"
      }
     ],
     "name": "min",
     "returns": "_T"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      },
      {
       "annotation": "_T",
       "arg": "default"
      }
     ],
     "name": "min",
     "returns": "(SupportsRichComparisonT | _T)"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T1]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T1], SupportsRichComparison]",
       "arg": "key"
      },
      {
       "annotation": "_T2",
       "arg": "default"
      }
     ],
     "name": "min",
     "returns": "(_T1 | _T2)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "next",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsNext[_T]",
       "arg": "__i"
      }
     ],
     "kwonlyargs": [],
     "name": "next",
     "returns": "_T"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsNext[_T]",
       "arg": "__i"
      },
      {
       "annotation": "_VT",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "next",
     "returns": "(_T | _VT)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "oct",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | SupportsIndex)",
       "arg": "__number"
      }
     ],
     "kwonlyargs": [],
     "name": "oct",
     "returns": "str"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "ord",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes | bytearray)",
       "arg": "__c"
      }
     ],
     "kwonlyargs": [],
     "name": "ord",
     "returns": "int"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "print",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "sep"
      },
      {
       "annotation": "(str | None)",
       "arg": "end"
      },
      {
       "annotation": "(SupportsWrite[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "Literal[False]",
       "arg": "flush"
      }
     ],
     "name": "print",
     "returns": "None"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "sep"
      },
      {
       "annotation": "(str | None)",
       "arg": "end"
      },
      {
       "annotation": "(_SupportsWriteAndFlush[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "flush"
      }
     ],
     "name": "print",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "pow",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "int",
       "arg": "exp"
      },
      {
       "annotation": "Literal[0]",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "NoReturn"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "int",
       "arg": "exp"
      },
      {
       "annotation": "int",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "int"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "Literal[0]",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "Literal[1]"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "_PositiveInteger",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "int"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "_NegativeInteger",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "float"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "base"
      },
      {
       "annotation": "int",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "Any"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "base"
      },
      {
       "annotation": "int",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "float"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "base"
      },
      {
       "annotation": "(complex | _SupportsSomeKindOfPow)",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "Any"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "complex",
       "arg": "base"
      },
      {
       "annotation": "(complex | _SupportsSomeKindOfPow)",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "complex"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsPow2[_E, _T_co]",
       "arg": "base"
      },
      {
       "annotation": "_E",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "_T_co"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsPow3NoneOnly[_E, _T_co]",
       "arg": "base"
      },
      {
       "annotation": "_E",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "_T_co"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsPow3[_E, _M, _T_co]",
       "arg": "base"
      },
      {
       "annotation": "_E",
       "arg": "exp"
      },
      {
       "annotation": "_M",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "_T_co"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsSomeKindOfPow",
       "arg": "base"
      },
      {
       "annotation": "float",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "Any"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsSomeKindOfPow",
       "arg": "base"
      },
      {
       "annotation": "complex",
       "arg": "exp"
      },
      {
       "annotation": "None",
       "arg": "mod"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "complex"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "pow",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "quit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "quit",
     "returns": "NoReturn"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "repr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "repr",
     "returns": "str"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "repr",
     "returns": "str"
    },
    "module": "reprlib"
   }
  ]
 },
 {
  "name": "round",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRound[Any]",
       "arg": "number"
      }
     ],
     "kwonlyargs": [],
     "name": "round",
     "returns": "int"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRound[Any]",
       "arg": "number"
      },
      {
       "annotation": "None",
       "arg": "ndigits"
      }
     ],
     "kwonlyargs": [],
     "name": "round",
     "returns": "int"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRound[_T]",
       "arg": "number"
      },
      {
       "annotation": "SupportsIndex",
       "arg": "ndigits"
      }
     ],
     "kwonlyargs": [],
     "name": "round",
     "returns": "_T"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "setattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__obj"
      },
      {
       "annotation": "str",
       "arg": "__name"
      },
      {
       "annotation": "Any",
       "arg": "__value"
      }
     ],
     "kwonlyargs": [],
     "name": "setattr",
     "returns": "None"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "sorted",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsRichComparisonT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "None",
       "arg": "key"
      },
      {
       "annotation": "bool",
       "arg": "reverse"
      }
     ],
     "name": "sorted",
     "returns": "list[SupportsRichComparisonT]"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_T]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[_T], SupportsRichComparison]",
       "arg": "key"
      },
      {
       "annotation": "bool",
       "arg": "reverse"
      }
     ],
     "name": "sorted",
     "returns": "list[_T]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "sum",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_SumT]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "sum",
     "returns": "(_SumT | Literal[0])"
    },
    "module": "builtins"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_SumT]",
       "arg": "__iterable"
      },
      {
       "annotation": "_SumS",
       "arg": "start"
      }
     ],
     "kwonlyargs": [],
     "name": "sum",
     "returns": "(_SumT | _SumS)"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "vars",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__object"
      }
     ],
     "kwonlyargs": [],
     "name": "vars",
     "returns": "dict[str, Any]"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "__build_class__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], _Cell | Any]",
       "arg": "__func"
      },
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Any",
       "arg": "metaclass"
      }
     ],
     "name": "__build_class__",
     "returns": "Any"
    },
    "module": "builtins"
   }
  ]
 },
 {
  "name": "findmatch",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Mapping[str, list[_Cap]]",
       "arg": "caps"
      },
      {
       "annotation": "str",
       "arg": "MIMEtype"
      },
      {
       "annotation": "str",
       "arg": "key"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "plist"
      }
     ],
     "kwonlyargs": [],
     "name": "findmatch",
     "returns": "tuple[str | None, _Cap | None]"
    },
    "module": "mailcap"
   }
  ]
 },
 {
  "name": "getcaps",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getcaps",
     "returns": "dict[str, list[_Cap]]"
    },
    "module": "mailcap"
   }
  ]
 },
 {
  "name": "symtable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "code"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "compile_type"
      }
     ],
     "kwonlyargs": [],
     "name": "symtable",
     "returns": "SymbolTable"
    },
    "module": "symtable"
   }
  ]
 },
 {
  "name": "runctx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "globals"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "locals"
      },
      {
       "annotation": "(str | None)",
       "arg": "filename"
      },
      {
       "annotation": "(str | int)",
       "arg": "sort"
      }
     ],
     "kwonlyargs": [],
     "name": "runctx",
     "returns": "None"
    },
    "module": "cProfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "globals"
      },
      {
       "annotation": "Mapping[str, Any]",
       "arg": "locals"
      }
     ],
     "kwonlyargs": [],
     "name": "runctx",
     "returns": "None"
    },
    "module": "pdb"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "statement"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "globals"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "locals"
      },
      {
       "annotation": "(str | None)",
       "arg": "filename"
      },
      {
       "annotation": "(str | int)",
       "arg": "sort"
      }
     ],
     "kwonlyargs": [],
     "name": "runctx",
     "returns": "None"
    },
    "module": "profile"
   }
  ]
 },
 {
  "name": "label",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | CodeType)",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "label",
     "returns": "_Label"
    },
    "module": "cProfile"
   }
  ]
 },
 {
  "name": "acos",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "acos",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "acos",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "acosh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "acosh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "acosh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "asin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "asin",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "asin",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "asinh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "asinh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "asinh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "atan",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "atan",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "atan",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "atan2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "atan2",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "atanh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "atanh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "atanh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "ceil",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "ceil",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "comb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsIndex",
       "arg": "__n"
      },
      {
       "annotation": "SupportsIndex",
       "arg": "__k"
      }
     ],
     "kwonlyargs": [],
     "name": "comb",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "copysign",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "copysign",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "cos",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "cos",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "cos",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "cosh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "cosh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "cosh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "degrees",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "degrees",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "fullcircle"
      }
     ],
     "kwonlyargs": [],
     "name": "degrees",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "dist",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_SupportsFloatOrIndex]",
       "arg": "__p"
      },
      {
       "annotation": "Iterable[_SupportsFloatOrIndex]",
       "arg": "__q"
      }
     ],
     "kwonlyargs": [],
     "name": "dist",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "erf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "erf",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "erfc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "erfc",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "exp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "exp",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "exp",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "expm1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "expm1",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "fabs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "fabs",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "factorial",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "factorial",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "floor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "floor",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "fmod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "fmod",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "frexp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "frexp",
     "returns": "tuple[float, int]"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "fsum",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_SupportsFloatOrIndex]",
       "arg": "__seq"
      }
     ],
     "kwonlyargs": [],
     "name": "fsum",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "gamma",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "gamma",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "gcd",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gcd",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "hypot",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "hypot",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "isclose",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "a"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "b"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "rel_tol"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "abs_tol"
      }
     ],
     "name": "isclose",
     "returns": "bool"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "a"
      },
      {
       "annotation": "_C",
       "arg": "b"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "SupportsFloat",
       "arg": "rel_tol"
      },
      {
       "annotation": "SupportsFloat",
       "arg": "abs_tol"
      }
     ],
     "name": "isclose",
     "returns": "bool"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "isinf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "isinf",
     "returns": "bool"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "isinf",
     "returns": "bool"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "isfinite",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "isfinite",
     "returns": "bool"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "isfinite",
     "returns": "bool"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "isnan",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "isnan",
     "returns": "bool"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "isnan",
     "returns": "bool"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "isqrt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsIndex",
       "arg": "__n"
      }
     ],
     "kwonlyargs": [],
     "name": "isqrt",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "lcm",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "lcm",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "ldexp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "int",
       "arg": "__i"
      }
     ],
     "kwonlyargs": [],
     "name": "ldexp",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "lgamma",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "lgamma",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "log10",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "log10",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "log10",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "log1p",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "log1p",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "log2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "log2",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "modf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "modf",
     "returns": "tuple[float, float]"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "nextafter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "nextafter",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "perm",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsIndex",
       "arg": "__n"
      },
      {
       "annotation": "(SupportsIndex | None)",
       "arg": "__k"
      }
     ],
     "kwonlyargs": [],
     "name": "perm",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "prod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[SupportsIndex]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "SupportsIndex",
       "arg": "start"
      }
     ],
     "name": "prod",
     "returns": "int"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_SupportsFloatOrIndex]",
       "arg": "__iterable"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "start"
      }
     ],
     "name": "prod",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "radians",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "radians",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "radians",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "remainder",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      },
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__y"
      }
     ],
     "kwonlyargs": [],
     "name": "remainder",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "sin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "sin",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "sin",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "sinh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "sinh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "sinh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "sqrt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "sqrt",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "sqrt",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "tan",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "tan",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "tan",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "tanh",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "tanh",
     "returns": "float"
    },
    "module": "math"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "tanh",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "trunc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsTrunc",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "trunc",
     "returns": "int"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "ulp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_SupportsFloatOrIndex",
       "arg": "__x"
      }
     ],
     "kwonlyargs": [],
     "name": "ulp",
     "returns": "float"
    },
    "module": "math"
   }
  ]
 },
 {
  "name": "call_tracing",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., _T]",
       "arg": "__func"
      },
      {
       "annotation": "Any",
       "arg": "__args"
      }
     ],
     "kwonlyargs": [],
     "name": "call_tracing",
     "returns": "_T"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "_clear_type_cache",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_clear_type_cache",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "_current_frames",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_current_frames",
     "returns": "dict[int, FrameType]"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "_getframe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__depth"
      }
     ],
     "kwonlyargs": [],
     "name": "_getframe",
     "returns": "FrameType"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "_debugmallocstats",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_debugmallocstats",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "__displayhook__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "__value"
      }
     ],
     "kwonlyargs": [],
     "name": "__displayhook__",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "__excepthook__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[BaseException]",
       "arg": "__exctype"
      },
      {
       "annotation": "BaseException",
       "arg": "__value"
      },
      {
       "annotation": "(TracebackType | None)",
       "arg": "__traceback"
      }
     ],
     "kwonlyargs": [],
     "name": "__excepthook__",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "exc_info",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "exc_info",
     "returns": "OptExcInfo"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getallocatedblocks",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getallocatedblocks",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getdefaultencoding",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getdefaultencoding",
     "returns": "str"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getdlopenflags",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getdlopenflags",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getfilesystemencoding",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getfilesystemencoding",
     "returns": "str"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getfilesystemencodeerrors",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getfilesystemencodeerrors",
     "returns": "str"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getrefcount",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__object"
      }
     ],
     "kwonlyargs": [],
     "name": "getrefcount",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getrecursionlimit",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getrecursionlimit",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getsizeof",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "getsizeof",
     "returns": "int"
    },
    "module": "sys"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      },
      {
       "annotation": "int",
       "arg": "default"
      }
     ],
     "kwonlyargs": [],
     "name": "getsizeof",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getswitchinterval",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getswitchinterval",
     "returns": "float"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "getprofile",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getprofile",
     "returns": "(_ProfileFunc | None)"
    },
    "module": "sys"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getprofile",
     "returns": "(_PF | None)"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "setprofile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_ProfileFunc | None)",
       "arg": "profilefunc"
      }
     ],
     "kwonlyargs": [],
     "name": "setprofile",
     "returns": "None"
    },
    "module": "sys"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(_PF | None)",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "setprofile",
     "returns": "None"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "gettrace",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettrace",
     "returns": "(_TraceFunc | None)"
    },
    "module": "sys"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettrace",
     "returns": "(_TF | None)"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "settrace",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_TraceFunc | None)",
       "arg": "tracefunc"
      }
     ],
     "kwonlyargs": [],
     "name": "settrace",
     "returns": "None"
    },
    "module": "sys"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_TF",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "settrace",
     "returns": "None"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "intern",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "intern",
     "returns": "str"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "is_finalizing",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "is_finalizing",
     "returns": "bool"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "breakpointhook",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "breakpointhook",
     "returns": "Any"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "setdlopenflags",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "setdlopenflags",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "setrecursionlimit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__limit"
      }
     ],
     "kwonlyargs": [],
     "name": "setrecursionlimit",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "setswitchinterval",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "__interval"
      }
     ],
     "kwonlyargs": [],
     "name": "setswitchinterval",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "gettotalrefcount",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettotalrefcount",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "__unraisablehook__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnraisableHookArgs",
       "arg": "__unraisable"
      }
     ],
     "kwonlyargs": [],
     "name": "__unraisablehook__",
     "returns": "Any"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "addaudithook",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[str, tuple[Any, ...]], Any]",
       "arg": "hook"
      }
     ],
     "kwonlyargs": [],
     "name": "addaudithook",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "audit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__event"
      }
     ],
     "kwonlyargs": [],
     "name": "audit",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "get_asyncgen_hooks",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_asyncgen_hooks",
     "returns": "_asyncgen_hooks"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "set_asyncgen_hooks",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_AsyncgenHook",
       "arg": "firstiter"
      },
      {
       "annotation": "_AsyncgenHook",
       "arg": "finalizer"
      }
     ],
     "kwonlyargs": [],
     "name": "set_asyncgen_hooks",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "get_coroutine_origin_tracking_depth",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_coroutine_origin_tracking_depth",
     "returns": "int"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "set_coroutine_origin_tracking_depth",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "depth"
      }
     ],
     "kwonlyargs": [],
     "name": "set_coroutine_origin_tracking_depth",
     "returns": "None"
    },
    "module": "sys"
   }
  ]
 },
 {
  "name": "isleap",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "year"
      }
     ],
     "kwonlyargs": [],
     "name": "isleap",
     "returns": "bool"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "leapdays",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "y1"
      },
      {
       "annotation": "int",
       "arg": "y2"
      }
     ],
     "kwonlyargs": [],
     "name": "leapdays",
     "returns": "int"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "weekday",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "year"
      },
      {
       "annotation": "int",
       "arg": "month"
      },
      {
       "annotation": "int",
       "arg": "day"
      }
     ],
     "kwonlyargs": [],
     "name": "weekday",
     "returns": "int"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "monthrange",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "year"
      },
      {
       "annotation": "int",
       "arg": "month"
      }
     ],
     "kwonlyargs": [],
     "name": "monthrange",
     "returns": "tuple[int, int]"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "firstweekday",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "firstweekday",
     "returns": "int"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "monthcalendar",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "year"
      },
      {
       "annotation": "int",
       "arg": "month"
      }
     ],
     "kwonlyargs": [],
     "name": "monthcalendar",
     "returns": "list[list[int]]"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "prweek",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theweek"
      },
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [],
     "name": "prweek",
     "returns": "None"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "week",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theweek"
      },
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [],
     "name": "week",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "weekheader",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [],
     "name": "weekheader",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "prmonth",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theyear"
      },
      {
       "annotation": "int",
       "arg": "themonth"
      },
      {
       "annotation": "int",
       "arg": "w"
      },
      {
       "annotation": "int",
       "arg": "l"
      }
     ],
     "kwonlyargs": [],
     "name": "prmonth",
     "returns": "None"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "month",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theyear"
      },
      {
       "annotation": "int",
       "arg": "themonth"
      },
      {
       "annotation": "int",
       "arg": "w"
      },
      {
       "annotation": "int",
       "arg": "l"
      }
     ],
     "kwonlyargs": [],
     "name": "month",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "calendar",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theyear"
      },
      {
       "annotation": "int",
       "arg": "w"
      },
      {
       "annotation": "int",
       "arg": "l"
      },
      {
       "annotation": "int",
       "arg": "c"
      },
      {
       "annotation": "int",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "calendar",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "prcal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "theyear"
      },
      {
       "annotation": "int",
       "arg": "w"
      },
      {
       "annotation": "int",
       "arg": "l"
      },
      {
       "annotation": "int",
       "arg": "c"
      },
      {
       "annotation": "int",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "prcal",
     "returns": "None"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "setfirstweekday",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "firstweekday"
      }
     ],
     "kwonlyargs": [],
     "name": "setfirstweekday",
     "returns": "None"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "formatstring",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "cols"
      },
      {
       "annotation": "int",
       "arg": "colwidth"
      },
      {
       "annotation": "int",
       "arg": "spacing"
      }
     ],
     "kwonlyargs": [],
     "name": "formatstring",
     "returns": "str"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "timegm",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(tuple[int, ...] | struct_time)",
       "arg": "tuple"
      }
     ],
     "kwonlyargs": [],
     "name": "timegm",
     "returns": "int"
    },
    "module": "calendar"
   }
  ]
 },
 {
  "name": "guess_type",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "url"
      },
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "kwonlyargs": [],
     "name": "guess_type",
     "returns": "tuple[str | None, str | None]"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "guess_all_extensions",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "type"
      },
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "kwonlyargs": [],
     "name": "guess_all_extensions",
     "returns": "list[str]"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "guess_extension",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "type"
      },
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "kwonlyargs": [],
     "name": "guess_extension",
     "returns": "(str | None)"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "init",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "files"
      }
     ],
     "kwonlyargs": [],
     "name": "init",
     "returns": "None"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "read_mime_types",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "read_mime_types",
     "returns": "(dict[str, str] | None)"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "add_type",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "type"
      },
      {
       "annotation": "str",
       "arg": "ext"
      },
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "kwonlyargs": [],
     "name": "add_type",
     "returns": "None"
    },
    "module": "mimetypes"
   }
  ]
 },
 {
  "name": "get_config_var",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "get_config_var",
     "returns": "(str | None)"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_config_vars",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_config_vars",
     "returns": "dict[str, Any]"
    },
    "module": "sysconfig"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "arg"
      }
     ],
     "kwonlyargs": [],
     "name": "get_config_vars",
     "returns": "list[Any]"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_scheme_names",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_scheme_names",
     "returns": "tuple[str, ...]"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_path_names",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_path_names",
     "returns": "tuple[str, ...]"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_path",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "str",
       "arg": "scheme"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "vars"
      },
      {
       "annotation": "bool",
       "arg": "expand"
      }
     ],
     "kwonlyargs": [],
     "name": "get_path",
     "returns": "str"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_paths",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "scheme"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "vars"
      },
      {
       "annotation": "bool",
       "arg": "expand"
      }
     ],
     "kwonlyargs": [],
     "name": "get_paths",
     "returns": "dict[str, str]"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_python_version",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_python_version",
     "returns": "str"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_platform",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_platform",
     "returns": "str"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "is_python_build",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "check_home"
      }
     ],
     "kwonlyargs": [],
     "name": "is_python_build",
     "returns": "bool"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "parse_config_h",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[Any]",
       "arg": "fp"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "vars"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_config_h",
     "returns": "dict[str, Any]"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_config_h_filename",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_config_h_filename",
     "returns": "str"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "get_makefile_filename",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_makefile_filename",
     "returns": "str"
    },
    "module": "sysconfig"
   }
  ]
 },
 {
  "name": "parse_multipart",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[Any]",
       "arg": "fp"
      },
      {
       "annotation": "SupportsGetItem[str, bytes]",
       "arg": "pdict"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      },
      {
       "annotation": "str",
       "arg": "separator"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_multipart",
     "returns": "dict[str, list[Any]]"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "parse_header",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "line"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_header",
     "returns": "tuple[str, dict[str, str]]"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "test",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Environ",
       "arg": "environ"
      }
     ],
     "kwonlyargs": [],
     "name": "test",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "print_environ",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Environ",
       "arg": "environ"
      }
     ],
     "kwonlyargs": [],
     "name": "print_environ",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "print_form",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "dict[str, Any]",
       "arg": "form"
      }
     ],
     "kwonlyargs": [],
     "name": "print_form",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "print_directory",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "print_directory",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "print_environ_usage",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "print_environ_usage",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "print_exception",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(type[BaseException] | None)",
       "arg": "type"
      },
      {
       "annotation": "(BaseException | None)",
       "arg": "value"
      },
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      }
     ],
     "kwonlyargs": [],
     "name": "print_exception",
     "returns": "None"
    },
    "module": "cgi"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(type[BaseException] | None)",
       "arg": "__exc"
      },
      {
       "annotation": "(BaseException | None)",
       "arg": "value"
      },
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "print_exception",
     "returns": "None"
    },
    "module": "traceback"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BaseException",
       "arg": "__exc"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "name": "print_exception",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "print_arguments",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "print_arguments",
     "returns": "None"
    },
    "module": "cgi"
   }
  ]
 },
 {
  "name": "LOG_MASK",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "a"
      }
     ],
     "kwonlyargs": [],
     "name": "LOG_MASK",
     "returns": "int"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "LOG_UPTO",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "a"
      }
     ],
     "kwonlyargs": [],
     "name": "LOG_UPTO",
     "returns": "int"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "closelog",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "closelog",
     "returns": "None"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "openlog",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "ident"
      },
      {
       "annotation": "int",
       "arg": "logoption"
      },
      {
       "annotation": "int",
       "arg": "facility"
      }
     ],
     "kwonlyargs": [],
     "name": "openlog",
     "returns": "None"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "setlogmask",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "setlogmask",
     "returns": "int"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "syslog",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "priority"
      },
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "syslog",
     "returns": "None"
    },
    "module": "syslog"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "message"
      }
     ],
     "kwonlyargs": [],
     "name": "syslog",
     "returns": "None"
    },
    "module": "syslog"
   }
  ]
 },
 {
  "name": "reset",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "reset",
     "returns": "str"
    },
    "module": "cgitb"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "reset",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "small",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "small",
     "returns": "str"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "strong",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "strong",
     "returns": "str"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "grey",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "grey",
     "returns": "str"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "lookup",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "FrameType",
       "arg": "frame"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "locals"
      }
     ],
     "kwonlyargs": [],
     "name": "lookup",
     "returns": "tuple[str | None, Any]"
    },
    "module": "cgitb"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "lookup",
     "returns": "CodecInfo"
    },
    "module": "codecs"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "lookup",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "scanvars",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], bytes]",
       "arg": "reader"
      },
      {
       "annotation": "FrameType",
       "arg": "frame"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "locals"
      }
     ],
     "kwonlyargs": [],
     "name": "scanvars",
     "returns": "list[tuple[str, str | None, Any]]"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "html",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "OptExcInfo",
       "arg": "einfo"
      },
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "html",
     "returns": "str"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "text",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "OptExcInfo",
       "arg": "einfo"
      },
      {
       "annotation": "int",
       "arg": "context"
      }
     ],
     "kwonlyargs": [],
     "name": "text",
     "returns": "str"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "handler",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(OptExcInfo | None)",
       "arg": "info"
      }
     ],
     "kwonlyargs": [],
     "name": "handler",
     "returns": "None"
    },
    "module": "cgitb"
   }
  ]
 },
 {
  "name": "enable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "display"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "logdir"
      },
      {
       "annotation": "int",
       "arg": "context"
      },
      {
       "annotation": "str",
       "arg": "format"
      }
     ],
     "kwonlyargs": [],
     "name": "enable",
     "returns": "None"
    },
    "module": "cgitb"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "all_threads"
      }
     ],
     "kwonlyargs": [],
     "name": "enable",
     "returns": "None"
    },
    "module": "faulthandler"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "enable",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "AddPackagePath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "packagename"
      },
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "AddPackagePath",
     "returns": "None"
    },
    "module": "modulefinder"
   }
  ]
 },
 {
  "name": "ReplacePackage",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "oldname"
      },
      {
       "annotation": "str",
       "arg": "newname"
      }
     ],
     "kwonlyargs": [],
     "name": "ReplacePackage",
     "returns": "None"
    },
    "module": "modulefinder"
   }
  ]
 },
 {
  "name": "check",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "check",
     "returns": "None"
    },
    "module": "tabnanny"
   }
  ]
 },
 {
  "name": "process_tokens",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[tuple[int, str, tuple[int, int], tuple[int, int], str]]",
       "arg": "tokens"
      }
     ],
     "kwonlyargs": [],
     "name": "process_tokens",
     "returns": "None"
    },
    "module": "tabnanny"
   }
  ]
 },
 {
  "name": "Barrier",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "parties"
      },
      {
       "annotation": "(Callable[..., Any] | None)",
       "arg": "action"
      },
      {
       "annotation": "(float | None)",
       "arg": "timeout"
      }
     ],
     "kwonlyargs": [],
     "name": "Barrier",
     "returns": "_BarrierType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "BoundedSemaphore",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "BoundedSemaphore",
     "returns": "_BoundedSemaphoreType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Condition",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_LockLike | None)",
       "arg": "lock"
      }
     ],
     "kwonlyargs": [],
     "name": "Condition",
     "returns": "_ConditionType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Event",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "Event",
     "returns": "_EventType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Lock",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "Lock",
     "returns": "_LockType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "RLock",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "RLock",
     "returns": "_RLockType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Semaphore",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "Semaphore",
     "returns": "_SemaphoreType"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Pipe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "duplex"
      }
     ],
     "kwonlyargs": [],
     "name": "Pipe",
     "returns": "tuple[connection.Connection, connection.Connection]"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Pool",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "processes"
      },
      {
       "annotation": "(Callable[..., Any] | None)",
       "arg": "initializer"
      },
      {
       "annotation": "Iterable[Any]",
       "arg": "initargs"
      },
      {
       "annotation": "(int | None)",
       "arg": "maxtasksperchild"
      }
     ],
     "kwonlyargs": [],
     "name": "Pool",
     "returns": "pool.Pool"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "allow_connection_pickling",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "allow_connection_pickling",
     "returns": "None"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "cpu_count",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "cpu_count",
     "returns": "int"
    },
    "module": "multiprocessing"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "cpu_count",
     "returns": "(int | None)"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "get_logger",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_logger",
     "returns": "Logger"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "log_to_stderr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | int | None)",
       "arg": "level"
      }
     ],
     "kwonlyargs": [],
     "name": "log_to_stderr",
     "returns": "Logger"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "Manager",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "Manager",
     "returns": "SyncManager"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "set_executable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "executable"
      }
     ],
     "kwonlyargs": [],
     "name": "set_executable",
     "returns": "None"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "set_forkserver_preload",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[str]",
       "arg": "module_names"
      }
     ],
     "kwonlyargs": [],
     "name": "set_forkserver_preload",
     "returns": "None"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "get_all_start_methods",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_all_start_methods",
     "returns": "list[str]"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "get_start_method",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "allow_none"
      }
     ],
     "kwonlyargs": [],
     "name": "get_start_method",
     "returns": "(str | None)"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "set_start_method",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "method"
      },
      {
       "annotation": "(bool | None)",
       "arg": "force"
      }
     ],
     "kwonlyargs": [],
     "name": "set_start_method",
     "returns": "None"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "get_context",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "method"
      }
     ],
     "kwonlyargs": [],
     "name": "get_context",
     "returns": "DefaultContext"
    },
    "module": "multiprocessing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['spawn']",
       "arg": "method"
      }
     ],
     "kwonlyargs": [],
     "name": "get_context",
     "returns": "SpawnContext"
    },
    "module": "multiprocessing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['fork']",
       "arg": "method"
      }
     ],
     "kwonlyargs": [],
     "name": "get_context",
     "returns": "ForkContext"
    },
    "module": "multiprocessing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['forkserver']",
       "arg": "method"
      }
     ],
     "kwonlyargs": [],
     "name": "get_context",
     "returns": "ForkServerContext"
    },
    "module": "multiprocessing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "method"
      }
     ],
     "kwonlyargs": [],
     "name": "get_context",
     "returns": "BaseContext"
    },
    "module": "multiprocessing"
   }
  ]
 },
 {
  "name": "is_tarfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | IO[bytes])",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "is_tarfile",
     "returns": "bool"
    },
    "module": "tarfile"
   }
  ]
 },
 {
  "name": "phase",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "phase",
     "returns": "float"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "polar",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_C",
       "arg": "__z"
      }
     ],
     "kwonlyargs": [],
     "name": "polar",
     "returns": "tuple[float, float]"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "rect",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "__r"
      },
      {
       "annotation": "float",
       "arg": "__phi"
      }
     ],
     "kwonlyargs": [],
     "name": "rect",
     "returns": "complex"
    },
    "module": "cmath"
   }
  ]
 },
 {
  "name": "cat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "map"
      },
      {
       "annotation": "str",
       "arg": "domain"
      }
     ],
     "kwonlyargs": [],
     "name": "cat",
     "returns": "dict[str, str]"
    },
    "module": "nis"
   }
  ]
 },
 {
  "name": "get_default_domain",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_default_domain",
     "returns": "str"
    },
    "module": "nis"
   }
  ]
 },
 {
  "name": "maps",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "domain"
      }
     ],
     "kwonlyargs": [],
     "name": "maps",
     "returns": "list[str]"
    },
    "module": "nis"
   }
  ]
 },
 {
  "name": "match",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "key"
      },
      {
       "annotation": "str",
       "arg": "map"
      },
      {
       "annotation": "str",
       "arg": "domain"
      }
     ],
     "kwonlyargs": [],
     "name": "match",
     "returns": "str"
    },
    "module": "nis"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "match",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "match",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "NamedTemporaryFile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['r', 'w', 'a', 'x', 'r+', 'w+', 'a+', 'x+', 'rt', 'wt', 'at', 'xt',\n    'r+t', 'w+t', 'a+t', 'x+t']",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      },
      {
       "annotation": "bool",
       "arg": "delete"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "NamedTemporaryFile",
     "returns": "_TemporaryFileWrapper[str]"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['rb', 'wb', 'ab', 'xb', 'r+b', 'w+b', 'a+b', 'x+b']",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      },
      {
       "annotation": "bool",
       "arg": "delete"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "NamedTemporaryFile",
     "returns": "_TemporaryFileWrapper[bytes]"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      },
      {
       "annotation": "bool",
       "arg": "delete"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "NamedTemporaryFile",
     "returns": "_TemporaryFileWrapper[Any]"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "TemporaryFile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['r', 'w', 'a', 'x', 'r+', 'w+', 'a+', 'x+', 'rt', 'wt', 'at', 'xt',\n    'r+t', 'w+t', 'a+t', 'x+t']",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "TemporaryFile",
     "returns": "IO[str]"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['rb', 'wb', 'ab', 'xb', 'r+b', 'w+b', 'a+b', 'x+b']",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "TemporaryFile",
     "returns": "IO[bytes]"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "TemporaryFile",
     "returns": "IO[Any]"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "mkstemp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "mkstemp",
     "returns": "tuple[int, str]"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      },
      {
       "annotation": "bool",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "mkstemp",
     "returns": "tuple[int, AnyStr]"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "mkdtemp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "mkdtemp",
     "returns": "str"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      }
     ],
     "kwonlyargs": [],
     "name": "mkdtemp",
     "returns": "AnyStr"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "mktemp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "mktemp",
     "returns": "str"
    },
    "module": "tempfile"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | None)",
       "arg": "suffix"
      },
      {
       "annotation": "(AnyStr | None)",
       "arg": "prefix"
      },
      {
       "annotation": "(_DirT[AnyStr] | None)",
       "arg": "dir"
      }
     ],
     "kwonlyargs": [],
     "name": "mktemp",
     "returns": "AnyStr"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "gettempdirb",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettempdirb",
     "returns": "bytes"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "gettempprefixb",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettempprefixb",
     "returns": "bytes"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "gettempdir",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettempdir",
     "returns": "str"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "gettempprefix",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "gettempprefix",
     "returns": "str"
    },
    "module": "tempfile"
   }
  ]
 },
 {
  "name": "interact",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "banner"
      },
      {
       "annotation": "(Callable[[str], str] | None)",
       "arg": "readfunc"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "local"
      },
      {
       "annotation": "(str | None)",
       "arg": "exitmsg"
      }
     ],
     "kwonlyargs": [],
     "name": "interact",
     "returns": "None"
    },
    "module": "code"
   }
  ]
 },
 {
  "name": "compile_command",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "source"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "symbol"
      }
     ],
     "kwonlyargs": [],
     "name": "compile_command",
     "returns": "(CodeType | None)"
    },
    "module": "code"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "source"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "symbol"
      }
     ],
     "kwonlyargs": [],
     "name": "compile_command",
     "returns": "(CodeType | None)"
    },
    "module": "codeop"
   }
  ]
 },
 {
  "name": "decode_header",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "header_str"
      }
     ],
     "kwonlyargs": [],
     "name": "decode_header",
     "returns": "str"
    },
    "module": "nntplib"
   }
  ]
 },
 {
  "name": "tcgetattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "tcgetattr",
     "returns": "list[Any]"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "tcsetattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__when"
      },
      {
       "annotation": "_Attr",
       "arg": "__attributes"
      }
     ],
     "kwonlyargs": [],
     "name": "tcsetattr",
     "returns": "None"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "tcsendbreak",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__duration"
      }
     ],
     "kwonlyargs": [],
     "name": "tcsendbreak",
     "returns": "None"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "tcdrain",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "tcdrain",
     "returns": "None"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "tcflush",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__queue"
      }
     ],
     "kwonlyargs": [],
     "name": "tcflush",
     "returns": "None"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "tcflow",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__action"
      }
     ],
     "kwonlyargs": [],
     "name": "tcflow",
     "returns": "None"
    },
    "module": "termios"
   }
  ]
 },
 {
  "name": "utf_16_be_decode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "(str | None)",
       "arg": "__errors"
      },
      {
       "annotation": "bool",
       "arg": "__final"
      }
     ],
     "kwonlyargs": [],
     "name": "utf_16_be_decode",
     "returns": "tuple[str, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "utf_16_be_encode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__str"
      },
      {
       "annotation": "(str | None)",
       "arg": "__errors"
      }
     ],
     "kwonlyargs": [],
     "name": "utf_16_be_encode",
     "returns": "tuple[bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getencoder",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getencoder",
     "returns": "_Encoder"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getdecoder",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getdecoder",
     "returns": "_Decoder"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getincrementalencoder",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getincrementalencoder",
     "returns": "_IncrementalEncoder"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getincrementaldecoder",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getincrementaldecoder",
     "returns": "_IncrementalDecoder"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getreader",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getreader",
     "returns": "_StreamReader"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "getwriter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "getwriter",
     "returns": "_StreamWriter"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "EncodedFile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "file"
      },
      {
       "annotation": "str",
       "arg": "data_encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "file_encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "EncodedFile",
     "returns": "StreamRecoder"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "iterencode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[str]",
       "arg": "iterator"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "iterencode",
     "returns": "Generator[bytes, None, None]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "iterdecode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[bytes]",
       "arg": "iterator"
      },
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "str",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "iterdecode",
     "returns": "Generator[str, None, None]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "register_error",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__errors"
      },
      {
       "annotation": "Callable[[UnicodeError], tuple[str | bytes, int]]",
       "arg": "__handler"
      }
     ],
     "kwonlyargs": [],
     "name": "register_error",
     "returns": "None"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "lookup_error",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "lookup_error",
     "returns": "Callable[[UnicodeError], tuple[str | bytes, int]]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "strict_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "strict_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "replace_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "replace_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "ignore_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "ignore_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "xmlcharrefreplace_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "xmlcharrefreplace_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "backslashreplace_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "backslashreplace_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "namereplace_errors",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UnicodeError",
       "arg": "exception"
      }
     ],
     "kwonlyargs": [],
     "name": "namereplace_errors",
     "returns": "tuple[str | bytes, int]"
    },
    "module": "codecs"
   }
  ]
 },
 {
  "name": "url2pathname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "url"
      }
     ],
     "kwonlyargs": [],
     "name": "url2pathname",
     "returns": "str"
    },
    "module": "nturl2path"
   }
  ]
 },
 {
  "name": "pathname2url",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "pathname2url",
     "returns": "str"
    },
    "module": "nturl2path"
   }
  ]
 },
 {
  "name": "wrap",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "str",
       "arg": "initial_indent"
      },
      {
       "annotation": "str",
       "arg": "subsequent_indent"
      },
      {
       "annotation": "bool",
       "arg": "expand_tabs"
      },
      {
       "annotation": "int",
       "arg": "tabsize"
      },
      {
       "annotation": "bool",
       "arg": "replace_whitespace"
      },
      {
       "annotation": "bool",
       "arg": "fix_sentence_endings"
      },
      {
       "annotation": "bool",
       "arg": "break_long_words"
      },
      {
       "annotation": "bool",
       "arg": "break_on_hyphens"
      },
      {
       "annotation": "bool",
       "arg": "drop_whitespace"
      },
      {
       "annotation": "int",
       "arg": "max_lines"
      },
      {
       "annotation": "str",
       "arg": "placeholder"
      }
     ],
     "name": "wrap",
     "returns": "list[str]"
    },
    "module": "textwrap"
   }
  ]
 },
 {
  "name": "fill",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "str",
       "arg": "initial_indent"
      },
      {
       "annotation": "str",
       "arg": "subsequent_indent"
      },
      {
       "annotation": "bool",
       "arg": "expand_tabs"
      },
      {
       "annotation": "int",
       "arg": "tabsize"
      },
      {
       "annotation": "bool",
       "arg": "replace_whitespace"
      },
      {
       "annotation": "bool",
       "arg": "fix_sentence_endings"
      },
      {
       "annotation": "bool",
       "arg": "break_long_words"
      },
      {
       "annotation": "bool",
       "arg": "break_on_hyphens"
      },
      {
       "annotation": "bool",
       "arg": "drop_whitespace"
      },
      {
       "annotation": "int",
       "arg": "max_lines"
      },
      {
       "annotation": "str",
       "arg": "placeholder"
      }
     ],
     "name": "fill",
     "returns": "str"
    },
    "module": "textwrap"
   }
  ]
 },
 {
  "name": "shorten",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "str",
       "arg": "initial_indent"
      },
      {
       "annotation": "str",
       "arg": "subsequent_indent"
      },
      {
       "annotation": "bool",
       "arg": "expand_tabs"
      },
      {
       "annotation": "int",
       "arg": "tabsize"
      },
      {
       "annotation": "bool",
       "arg": "replace_whitespace"
      },
      {
       "annotation": "bool",
       "arg": "fix_sentence_endings"
      },
      {
       "annotation": "bool",
       "arg": "break_long_words"
      },
      {
       "annotation": "bool",
       "arg": "break_on_hyphens"
      },
      {
       "annotation": "bool",
       "arg": "drop_whitespace"
      },
      {
       "annotation": "str",
       "arg": "placeholder"
      }
     ],
     "name": "shorten",
     "returns": "str"
    },
    "module": "textwrap"
   }
  ]
 },
 {
  "name": "dedent",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "dedent",
     "returns": "str"
    },
    "module": "textwrap"
   }
  ]
 },
 {
  "name": "indent",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "str",
       "arg": "prefix"
      },
      {
       "annotation": "(Callable[[str], bool] | None)",
       "arg": "predicate"
      }
     ],
     "kwonlyargs": [],
     "name": "indent",
     "returns": "str"
    },
    "module": "textwrap"
   }
  ]
 },
 {
  "name": "namedtuple",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "typename"
      },
      {
       "annotation": "(str | Iterable[str])",
       "arg": "field_names"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "rename"
      },
      {
       "annotation": "(str | None)",
       "arg": "module"
      },
      {
       "annotation": "(Iterable[Any] | None)",
       "arg": "defaults"
      }
     ],
     "name": "namedtuple",
     "returns": "type[tuple[Any, ...]]"
    },
    "module": "collections"
   }
  ]
 },
 {
  "name": "rgb_to_yiq",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "rgb_to_yiq",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "yiq_to_rgb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "y"
      },
      {
       "annotation": "float",
       "arg": "i"
      },
      {
       "annotation": "float",
       "arg": "q"
      }
     ],
     "kwonlyargs": [],
     "name": "yiq_to_rgb",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "rgb_to_hls",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "rgb_to_hls",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "hls_to_rgb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "h"
      },
      {
       "annotation": "float",
       "arg": "l"
      },
      {
       "annotation": "float",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "hls_to_rgb",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "rgb_to_hsv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "rgb_to_hsv",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "hsv_to_rgb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "h"
      },
      {
       "annotation": "float",
       "arg": "s"
      },
      {
       "annotation": "float",
       "arg": "v"
      }
     ],
     "kwonlyargs": [],
     "name": "hsv_to_rgb",
     "returns": "tuple[float, float, float]"
    },
    "module": "colorsys"
   }
  ]
 },
 {
  "name": "stack_effect",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__opcode"
      },
      {
       "annotation": "(int | None)",
       "arg": "__oparg"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(bool | None)",
       "arg": "jump"
      }
     ],
     "name": "stack_effect",
     "returns": "int"
    },
    "module": "opcode"
   }
  ]
 },
 {
  "name": "active_count",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "active_count",
     "returns": "int"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "activeCount",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "activeCount",
     "returns": "int"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "current_thread",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "current_thread",
     "returns": "Thread"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "currentThread",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "currentThread",
     "returns": "Thread"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "get_ident",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_ident",
     "returns": "int"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "enumerate",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "enumerate",
     "returns": "list[Thread]"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "main_thread",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "main_thread",
     "returns": "Thread"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "stack_size",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "stack_size",
     "returns": "int"
    },
    "module": "threading"
   }
  ]
 },
 {
  "name": "compile_dir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "dir"
      },
      {
       "annotation": "(int | None)",
       "arg": "maxlevels"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "ddir"
      },
      {
       "annotation": "bool",
       "arg": "force"
      },
      {
       "annotation": "(_SupportsSearch | None)",
       "arg": "rx"
      },
      {
       "annotation": "int",
       "arg": "quiet"
      },
      {
       "annotation": "bool",
       "arg": "legacy"
      },
      {
       "annotation": "int",
       "arg": "optimize"
      },
      {
       "annotation": "int",
       "arg": "workers"
      },
      {
       "annotation": "(PycInvalidationMode | None)",
       "arg": "invalidation_mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "stripdir"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "prependdir"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "limit_sl_dest"
      },
      {
       "annotation": "bool",
       "arg": "hardlink_dupes"
      }
     ],
     "name": "compile_dir",
     "returns": "int"
    },
    "module": "compileall"
   }
  ]
 },
 {
  "name": "compile_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "fullname"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "ddir"
      },
      {
       "annotation": "bool",
       "arg": "force"
      },
      {
       "annotation": "(_SupportsSearch | None)",
       "arg": "rx"
      },
      {
       "annotation": "int",
       "arg": "quiet"
      },
      {
       "annotation": "bool",
       "arg": "legacy"
      },
      {
       "annotation": "int",
       "arg": "optimize"
      },
      {
       "annotation": "(PycInvalidationMode | None)",
       "arg": "invalidation_mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "stripdir"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "prependdir"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "limit_sl_dest"
      },
      {
       "annotation": "bool",
       "arg": "hardlink_dupes"
      }
     ],
     "name": "compile_file",
     "returns": "int"
    },
    "module": "compileall"
   }
  ]
 },
 {
  "name": "compile_path",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "skip_curdir"
      },
      {
       "annotation": "int",
       "arg": "maxlevels"
      },
      {
       "annotation": "bool",
       "arg": "force"
      },
      {
       "annotation": "int",
       "arg": "quiet"
      },
      {
       "annotation": "bool",
       "arg": "legacy"
      },
      {
       "annotation": "int",
       "arg": "optimize"
      },
      {
       "annotation": "(PycInvalidationMode | None)",
       "arg": "invalidation_mode"
      }
     ],
     "kwonlyargs": [],
     "name": "compile_path",
     "returns": "int"
    },
    "module": "compileall"
   }
  ]
 },
 {
  "name": "asctime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_TimeTuple | struct_time)",
       "arg": "t"
      }
     ],
     "kwonlyargs": [],
     "name": "asctime",
     "returns": "str"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "ctime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "secs"
      }
     ],
     "kwonlyargs": [],
     "name": "ctime",
     "returns": "str"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "gmtime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "secs"
      }
     ],
     "kwonlyargs": [],
     "name": "gmtime",
     "returns": "struct_time"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "localtime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "secs"
      }
     ],
     "kwonlyargs": [],
     "name": "localtime",
     "returns": "struct_time"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "mktime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_TimeTuple | struct_time)",
       "arg": "t"
      }
     ],
     "kwonlyargs": [],
     "name": "mktime",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "sleep",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "secs"
      }
     ],
     "kwonlyargs": [],
     "name": "sleep",
     "returns": "None"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "strftime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "format"
      },
      {
       "annotation": "(_TimeTuple | struct_time)",
       "arg": "t"
      }
     ],
     "kwonlyargs": [],
     "name": "strftime",
     "returns": "str"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "strptime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "string"
      },
      {
       "annotation": "str",
       "arg": "format"
      }
     ],
     "kwonlyargs": [],
     "name": "strptime",
     "returns": "struct_time"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "time",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "time",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "tzset",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "tzset",
     "returns": "None"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "get_clock_info",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Literal['monotonic', 'perf_counter', 'process_time', 'time', 'thread_time']",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "get_clock_info",
     "returns": "_ClockInfo"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "monotonic",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "monotonic",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "perf_counter",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "perf_counter",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "process_time",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "process_time",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "clock_getres",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "clk_id"
      }
     ],
     "kwonlyargs": [],
     "name": "clock_getres",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "clock_gettime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "clk_id"
      }
     ],
     "kwonlyargs": [],
     "name": "clock_gettime",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "clock_settime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "clk_id"
      },
      {
       "annotation": "float",
       "arg": "time"
      }
     ],
     "kwonlyargs": [],
     "name": "clock_settime",
     "returns": "None"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "clock_gettime_ns",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "clock_id"
      }
     ],
     "kwonlyargs": [],
     "name": "clock_gettime_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "clock_settime_ns",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "clock_id"
      },
      {
       "annotation": "int",
       "arg": "time"
      }
     ],
     "kwonlyargs": [],
     "name": "clock_settime_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "pthread_getcpuclockid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "thread_id"
      }
     ],
     "kwonlyargs": [],
     "name": "pthread_getcpuclockid",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "monotonic_ns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "monotonic_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "perf_counter_ns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "perf_counter_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "process_time_ns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "process_time_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "time_ns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "time_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "thread_time",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "thread_time",
     "returns": "float"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "thread_time_ns",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "thread_time_ns",
     "returns": "int"
    },
    "module": "time"
   }
  ]
 },
 {
  "name": "check_builtin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Option",
       "arg": "option"
      },
      {
       "annotation": "Any",
       "arg": "opt"
      },
      {
       "annotation": "str",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "check_builtin",
     "returns": "Any"
    },
    "module": "optparse"
   }
  ]
 },
 {
  "name": "check_choice",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Option",
       "arg": "option"
      },
      {
       "annotation": "Any",
       "arg": "opt"
      },
      {
       "annotation": "str",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "check_choice",
     "returns": "str"
    },
    "module": "optparse"
   }
  ]
 },
 {
  "name": "timeit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Stmt",
       "arg": "stmt"
      },
      {
       "annotation": "_Stmt",
       "arg": "setup"
      },
      {
       "annotation": "_Timer",
       "arg": "timer"
      },
      {
       "annotation": "int",
       "arg": "number"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globals"
      }
     ],
     "kwonlyargs": [],
     "name": "timeit",
     "returns": "float"
    },
    "module": "timeit"
   }
  ]
 },
 {
  "name": "repeat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Stmt",
       "arg": "stmt"
      },
      {
       "annotation": "_Stmt",
       "arg": "setup"
      },
      {
       "annotation": "_Timer",
       "arg": "timer"
      },
      {
       "annotation": "int",
       "arg": "repeat"
      },
      {
       "annotation": "int",
       "arg": "number"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globals"
      }
     ],
     "kwonlyargs": [],
     "name": "repeat",
     "returns": "list[float]"
    },
    "module": "timeit"
   }
  ]
 },
 {
  "name": "listdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrPath | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "listdir",
     "returns": "list[str]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "listdir",
     "returns": "list[bytes]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "listdir",
     "returns": "list[str]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fsencode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "fsencode",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fsdecode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "fsdecode",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fspath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "fspath",
     "returns": "str"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "fspath",
     "returns": "bytes"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "fspath",
     "returns": "AnyStr"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "get_exec_path",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Mapping[str, str] | None)",
       "arg": "env"
      }
     ],
     "kwonlyargs": [],
     "name": "get_exec_path",
     "returns": "list[str]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getlogin",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getlogin",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getpid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getpid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getppid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getppid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "strerror",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__code"
      }
     ],
     "kwonlyargs": [],
     "name": "strerror",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "umask",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__mask"
      }
     ],
     "kwonlyargs": [],
     "name": "umask",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "ctermid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "ctermid",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getegid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getegid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "geteuid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "geteuid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getgid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getgid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getgrouplist",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__user"
      },
      {
       "annotation": "int",
       "arg": "__group"
      }
     ],
     "kwonlyargs": [],
     "name": "getgrouplist",
     "returns": "list[int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getgroups",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getgroups",
     "returns": "list[int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "initgroups",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__username"
      },
      {
       "annotation": "int",
       "arg": "__gid"
      }
     ],
     "kwonlyargs": [],
     "name": "initgroups",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getpgid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      }
     ],
     "kwonlyargs": [],
     "name": "getpgid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getpgrp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getpgrp",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getpriority",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "which"
      },
      {
       "annotation": "int",
       "arg": "who"
      }
     ],
     "kwonlyargs": [],
     "name": "getpriority",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setpriority",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "which"
      },
      {
       "annotation": "int",
       "arg": "who"
      },
      {
       "annotation": "int",
       "arg": "priority"
      }
     ],
     "kwonlyargs": [],
     "name": "setpriority",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getresuid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getresuid",
     "returns": "tuple[int, int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getresgid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getresgid",
     "returns": "tuple[int, int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getuid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getuid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setegid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__egid"
      }
     ],
     "kwonlyargs": [],
     "name": "setegid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "seteuid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__euid"
      }
     ],
     "kwonlyargs": [],
     "name": "seteuid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setgid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__gid"
      }
     ],
     "kwonlyargs": [],
     "name": "setgid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setgroups",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[int]",
       "arg": "__groups"
      }
     ],
     "kwonlyargs": [],
     "name": "setgroups",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setpgrp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "setpgrp",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setpgid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pid"
      },
      {
       "annotation": "int",
       "arg": "__pgrp"
      }
     ],
     "kwonlyargs": [],
     "name": "setpgid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setregid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__rgid"
      },
      {
       "annotation": "int",
       "arg": "__egid"
      }
     ],
     "kwonlyargs": [],
     "name": "setregid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setresgid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "rgid"
      },
      {
       "annotation": "int",
       "arg": "egid"
      },
      {
       "annotation": "int",
       "arg": "sgid"
      }
     ],
     "kwonlyargs": [],
     "name": "setresgid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setresuid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "ruid"
      },
      {
       "annotation": "int",
       "arg": "euid"
      },
      {
       "annotation": "int",
       "arg": "suid"
      }
     ],
     "kwonlyargs": [],
     "name": "setresuid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setreuid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__ruid"
      },
      {
       "annotation": "int",
       "arg": "__euid"
      }
     ],
     "kwonlyargs": [],
     "name": "setreuid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getsid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pid"
      }
     ],
     "kwonlyargs": [],
     "name": "getsid",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setsid",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "setsid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setuid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__uid"
      }
     ],
     "kwonlyargs": [],
     "name": "setuid",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "uname",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "uname",
     "returns": "uname_result"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "uname",
     "returns": "uname_result"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "getenv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "getenv",
     "returns": "(str | None)"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "key"
      },
      {
       "annotation": "_T",
       "arg": "default"
      }
     ],
     "kwonlyargs": [],
     "name": "getenv",
     "returns": "(str | _T)"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getenvb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "getenvb",
     "returns": "(bytes | None)"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "key"
      },
      {
       "annotation": "_T",
       "arg": "default"
      }
     ],
     "kwonlyargs": [],
     "name": "getenvb",
     "returns": "(bytes | _T)"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "putenv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | str)",
       "arg": "__name"
      },
      {
       "annotation": "(bytes | str)",
       "arg": "__value"
      }
     ],
     "kwonlyargs": [],
     "name": "putenv",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "unsetenv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | str)",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "unsetenv",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fdopen",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenTextMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "_TextIOWrapper"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "Literal[0]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "FileIO"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenBinaryModeUpdating",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "BufferedRandom"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenBinaryModeWriting",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "BufferedWriter"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenBinaryModeReading",
       "arg": "mode"
      },
      {
       "annotation": "Literal[-1, 1]",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "BufferedReader"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "OpenBinaryMode",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "None",
       "arg": "encoding"
      },
      {
       "annotation": "None",
       "arg": "errors"
      },
      {
       "annotation": "None",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "BinaryIO"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      },
      {
       "annotation": "(str | None)",
       "arg": "newline"
      },
      {
       "annotation": "bool",
       "arg": "closefd"
      },
      {
       "annotation": "(_Opener | None)",
       "arg": "opener"
      }
     ],
     "kwonlyargs": [],
     "name": "fdopen",
     "returns": "IO[Any]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "close",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "close",
     "returns": "None"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "close",
     "returns": "None"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "closerange",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd_low"
      },
      {
       "annotation": "int",
       "arg": "__fd_high"
      }
     ],
     "kwonlyargs": [],
     "name": "closerange",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "device_encoding",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "device_encoding",
     "returns": "(str | None)"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "dup",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "dup",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "dup2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "fd2"
      },
      {
       "annotation": "bool",
       "arg": "inheritable"
      }
     ],
     "kwonlyargs": [],
     "name": "dup2",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fstat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "fstat",
     "returns": "stat_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "ftruncate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__length"
      }
     ],
     "kwonlyargs": [],
     "name": "ftruncate",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fsync",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "fsync",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "isatty",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "isatty",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "lseek",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__position"
      },
      {
       "annotation": "int",
       "arg": "__how"
      }
     ],
     "kwonlyargs": [],
     "name": "lseek",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pipe",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pipe",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fchmod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [],
     "name": "fchmod",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fchown",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "uid"
      },
      {
       "annotation": "int",
       "arg": "gid"
      }
     ],
     "kwonlyargs": [],
     "name": "fchown",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fpathconf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "(str | int)",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "fpathconf",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fstatvfs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "fstatvfs",
     "returns": "statvfs_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "get_blocking",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "get_blocking",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "set_blocking",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "bool",
       "arg": "__blocking"
      }
     ],
     "kwonlyargs": [],
     "name": "set_blocking",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "lockf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__command"
      },
      {
       "annotation": "int",
       "arg": "__length"
      }
     ],
     "kwonlyargs": [],
     "name": "lockf",
     "returns": "None"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__cmd"
      },
      {
       "annotation": "int",
       "arg": "__len"
      },
      {
       "annotation": "int",
       "arg": "__start"
      },
      {
       "annotation": "int",
       "arg": "__whence"
      }
     ],
     "kwonlyargs": [],
     "name": "lockf",
     "returns": "Any"
    },
    "module": "fcntl"
   }
  ]
 },
 {
  "name": "openpty",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "openpty",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "openpty",
     "returns": "tuple[int, int]"
    },
    "module": "pty"
   }
  ]
 },
 {
  "name": "fdatasync",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "fdatasync",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pipe2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "pipe2",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "posix_fallocate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "offset"
      },
      {
       "annotation": "int",
       "arg": "length"
      }
     ],
     "kwonlyargs": [],
     "name": "posix_fallocate",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "posix_fadvise",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "offset"
      },
      {
       "annotation": "int",
       "arg": "length"
      },
      {
       "annotation": "int",
       "arg": "advice"
      }
     ],
     "kwonlyargs": [],
     "name": "posix_fadvise",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pread",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__length"
      },
      {
       "annotation": "int",
       "arg": "__offset"
      }
     ],
     "kwonlyargs": [],
     "name": "pread",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pwrite",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "bytes",
       "arg": "__buffer"
      },
      {
       "annotation": "int",
       "arg": "__offset"
      }
     ],
     "kwonlyargs": [],
     "name": "pwrite",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "preadv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "Iterable[bytes]",
       "arg": "__buffers"
      },
      {
       "annotation": "int",
       "arg": "__offset"
      },
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "preadv",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pwritev",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "Iterable[bytes]",
       "arg": "__buffers"
      },
      {
       "annotation": "int",
       "arg": "__offset"
      },
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "pwritev",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sendfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "out_fd"
      },
      {
       "annotation": "int",
       "arg": "in_fd"
      },
      {
       "annotation": "(int | None)",
       "arg": "offset"
      },
      {
       "annotation": "int",
       "arg": "count"
      }
     ],
     "kwonlyargs": [],
     "name": "sendfile",
     "returns": "int"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "out_fd"
      },
      {
       "annotation": "int",
       "arg": "in_fd"
      },
      {
       "annotation": "int",
       "arg": "offset"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "Sequence[bytes]",
       "arg": "headers"
      },
      {
       "annotation": "Sequence[bytes]",
       "arg": "trailers"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "sendfile",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "readv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "Sequence[bytearray]",
       "arg": "__buffers"
      }
     ],
     "kwonlyargs": [],
     "name": "readv",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "writev",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "Sequence[bytes]",
       "arg": "__buffers"
      }
     ],
     "kwonlyargs": [],
     "name": "writev",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "get_inheritable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "get_inheritable",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "set_inheritable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "bool",
       "arg": "__inheritable"
      }
     ],
     "kwonlyargs": [],
     "name": "set_inheritable",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "tcgetpgrp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "tcgetpgrp",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "tcsetpgrp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__pgid"
      }
     ],
     "kwonlyargs": [],
     "name": "tcsetpgrp",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "ttyname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__fd"
      }
     ],
     "kwonlyargs": [],
     "name": "ttyname",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "access",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "effective_ids"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "access",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "chdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "chdir",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fchdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "fd"
      }
     ],
     "kwonlyargs": [],
     "name": "fchdir",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getcwd",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getcwd",
     "returns": "str"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getcwdb",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getcwdb",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "chmod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "chmod",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "chroot",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "chroot",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "lchown",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "uid"
      },
      {
       "annotation": "int",
       "arg": "gid"
      }
     ],
     "kwonlyargs": [],
     "name": "lchown",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "link",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "src_dir_fd"
      },
      {
       "annotation": "(int | None)",
       "arg": "dst_dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "link",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "lstat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "lstat",
     "returns": "stat_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "mkdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "mkdir",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "mkfifo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "mkfifo",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "makedirs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "name"
      },
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "bool",
       "arg": "exist_ok"
      }
     ],
     "kwonlyargs": [],
     "name": "makedirs",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "mknod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "device"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "mknod",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "major",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__device"
      }
     ],
     "kwonlyargs": [],
     "name": "major",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "minor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__device"
      }
     ],
     "kwonlyargs": [],
     "name": "minor",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "makedev",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__major"
      },
      {
       "annotation": "int",
       "arg": "__minor"
      }
     ],
     "kwonlyargs": [],
     "name": "makedev",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pathconf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "(str | int)",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "pathconf",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "readlink",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | PathLike[AnyStr])",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "readlink",
     "returns": "AnyStr"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "remove",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "remove",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "removedirs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "removedirs",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "rename",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "src_dir_fd"
      },
      {
       "annotation": "(int | None)",
       "arg": "dst_dir_fd"
      }
     ],
     "name": "rename",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "renames",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "old"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "new"
      }
     ],
     "kwonlyargs": [],
     "name": "renames",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "replace",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "src_dir_fd"
      },
      {
       "annotation": "(int | None)",
       "arg": "dst_dir_fd"
      }
     ],
     "name": "replace",
     "returns": "None"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "replace",
     "returns": "_T"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "replace",
     "returns": "AnyStr"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "rmdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "rmdir",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "scandir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "scandir",
     "returns": "_ScandirIterator[str]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "scandir",
     "returns": "_ScandirIterator[str]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | PathLike[AnyStr])",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "scandir",
     "returns": "_ScandirIterator[AnyStr]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "stat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "stat",
     "returns": "stat_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "statvfs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "statvfs",
     "returns": "statvfs_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "symlink",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "src"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "dst"
      },
      {
       "annotation": "bool",
       "arg": "target_is_directory"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "symlink",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sync",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "sync",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "truncate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "int",
       "arg": "length"
      }
     ],
     "kwonlyargs": [],
     "name": "truncate",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "unlink",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "unlink",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "utime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "(tuple[int, int] | tuple[float, float] | None)",
       "arg": "times"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "tuple[int, int]",
       "arg": "ns"
      },
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      },
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "utime",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fwalk",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "top"
      },
      {
       "annotation": "bool",
       "arg": "topdown"
      },
      {
       "annotation": "(_OnError | None)",
       "arg": "onerror"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      },
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "fwalk",
     "returns": "Iterator[tuple[str, list[str], list[str], int]]"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "top"
      },
      {
       "annotation": "bool",
       "arg": "topdown"
      },
      {
       "annotation": "(_OnError | None)",
       "arg": "onerror"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      },
      {
       "annotation": "(int | None)",
       "arg": "dir_fd"
      }
     ],
     "name": "fwalk",
     "returns": "Iterator[tuple[bytes, list[bytes], list[bytes], int]]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getxattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "attribute"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "getxattr",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "listxattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_FdOrAnyPath | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "listxattr",
     "returns": "list[str]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "removexattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "attribute"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "removexattr",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "setxattr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "attribute"
      },
      {
       "annotation": "bytes",
       "arg": "value"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "follow_symlinks"
      }
     ],
     "name": "setxattr",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "abort",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "abort",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "__arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "execl",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execlp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "__arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "execlp",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "__arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "execle",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execlpe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "__arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "execlpe",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "__path"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "__argv"
      }
     ],
     "kwonlyargs": [],
     "name": "execv",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execve",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FdOrAnyPath",
       "arg": "path"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "argv"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [],
     "name": "execve",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execvp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      }
     ],
     "kwonlyargs": [],
     "name": "execvp",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "execvpe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [],
     "name": "execvpe",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "_exit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "_exit",
     "returns": "NoReturn"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "kill",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pid"
      },
      {
       "annotation": "int",
       "arg": "__signal"
      }
     ],
     "kwonlyargs": [],
     "name": "kill",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "fork",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "fork",
     "returns": "int"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "fork",
     "returns": "tuple[int, int]"
    },
    "module": "pty"
   }
  ]
 },
 {
  "name": "forkpty",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "forkpty",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "killpg",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pgid"
      },
      {
       "annotation": "int",
       "arg": "__signal"
      }
     ],
     "kwonlyargs": [],
     "name": "killpg",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "nice",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__increment"
      }
     ],
     "kwonlyargs": [],
     "name": "nice",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "plock",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "op"
      }
     ],
     "kwonlyargs": [],
     "name": "plock",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "popen",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "cmd"
      },
      {
       "annotation": "str",
       "arg": "mode"
      },
      {
       "annotation": "int",
       "arg": "buffering"
      }
     ],
     "kwonlyargs": [],
     "name": "popen",
     "returns": "_wrap_close"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnl",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnle",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnv",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnv",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnve",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnve",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "system",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "command"
      }
     ],
     "kwonlyargs": [],
     "name": "system",
     "returns": "int"
    },
    "module": "os"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "system",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "times",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "times",
     "returns": "times_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "waitpid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pid"
      },
      {
       "annotation": "int",
       "arg": "__options"
      }
     ],
     "kwonlyargs": [],
     "name": "waitpid",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnlp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnlp",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnlpe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "arg0"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnlpe",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnvp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnvp",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "spawnvpe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "mode"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "file"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "args"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [],
     "name": "spawnvpe",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "wait",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "wait",
     "returns": "tuple[int, int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "waitid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "idtype"
      },
      {
       "annotation": "int",
       "arg": "ident"
      },
      {
       "annotation": "int",
       "arg": "options"
      }
     ],
     "kwonlyargs": [],
     "name": "waitid",
     "returns": "waitid_result"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "wait3",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "options"
      }
     ],
     "kwonlyargs": [],
     "name": "wait3",
     "returns": "tuple[int, int, Any]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "wait4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "int",
       "arg": "options"
      }
     ],
     "kwonlyargs": [],
     "name": "wait4",
     "returns": "tuple[int, int, Any]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WCOREDUMP",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__status"
      }
     ],
     "kwonlyargs": [],
     "name": "WCOREDUMP",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WIFCONTINUED",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WIFCONTINUED",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WIFSTOPPED",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WIFSTOPPED",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WIFSIGNALED",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WIFSIGNALED",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WIFEXITED",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WIFEXITED",
     "returns": "bool"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WEXITSTATUS",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WEXITSTATUS",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WSTOPSIG",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WSTOPSIG",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "WTERMSIG",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "WTERMSIG",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "posix_spawn",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "argv"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(Sequence[tuple[Any, ...]] | None)",
       "arg": "file_actions"
      },
      {
       "annotation": "(int | None)",
       "arg": "setpgroup"
      },
      {
       "annotation": "bool",
       "arg": "resetids"
      },
      {
       "annotation": "bool",
       "arg": "setsid"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "setsigmask"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "setsigdef"
      },
      {
       "annotation": "(tuple[Any, sched_param] | None)",
       "arg": "scheduler"
      }
     ],
     "name": "posix_spawn",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "posix_spawnp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "path"
      },
      {
       "annotation": "_ExecVArgs",
       "arg": "argv"
      },
      {
       "annotation": "_ExecEnv",
       "arg": "env"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(Sequence[tuple[Any, ...]] | None)",
       "arg": "file_actions"
      },
      {
       "annotation": "(int | None)",
       "arg": "setpgroup"
      },
      {
       "annotation": "bool",
       "arg": "resetids"
      },
      {
       "annotation": "bool",
       "arg": "setsid"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "setsigmask"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "setsigdef"
      },
      {
       "annotation": "(tuple[Any, sched_param] | None)",
       "arg": "scheduler"
      }
     ],
     "name": "posix_spawnp",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_get_priority_min",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "policy"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_get_priority_min",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_get_priority_max",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "policy"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_get_priority_max",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_yield",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "sched_yield",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_setscheduler",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "int",
       "arg": "policy"
      },
      {
       "annotation": "sched_param",
       "arg": "param"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_setscheduler",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_getscheduler",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_getscheduler",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_rr_get_interval",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_rr_get_interval",
     "returns": "float"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_setparam",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "sched_param",
       "arg": "param"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_setparam",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_getparam",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_getparam",
     "returns": "sched_param"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_setaffinity",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "Iterable[int]",
       "arg": "mask"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_setaffinity",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sched_getaffinity",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      }
     ],
     "kwonlyargs": [],
     "name": "sched_getaffinity",
     "returns": "set[int]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "confstr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | int)",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "confstr",
     "returns": "(str | None)"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getloadavg",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getloadavg",
     "returns": "tuple[float, float, float]"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "sysconf",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | int)",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "sysconf",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "getrandom",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "size"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "getrandom",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "urandom",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__size"
      }
     ],
     "kwonlyargs": [],
     "name": "urandom",
     "returns": "bytes"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "register_at_fork",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(Callable[..., Any] | None)",
       "arg": "before"
      },
      {
       "annotation": "(Callable[..., Any] | None)",
       "arg": "after_in_parent"
      },
      {
       "annotation": "(Callable[..., Any] | None)",
       "arg": "after_in_child"
      }
     ],
     "name": "register_at_fork",
     "returns": "None"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "memfd_create",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "memfd_create",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "copy_file_range",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "src"
      },
      {
       "annotation": "int",
       "arg": "dst"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "(int | None)",
       "arg": "offset_src"
      },
      {
       "annotation": "(int | None)",
       "arg": "offset_dst"
      }
     ],
     "kwonlyargs": [],
     "name": "copy_file_range",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "waitstatus_to_exitcode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "status"
      }
     ],
     "kwonlyargs": [],
     "name": "waitstatus_to_exitcode",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "pidfd_open",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "pidfd_open",
     "returns": "int"
    },
    "module": "os"
   }
  ]
 },
 {
  "name": "NoDefaultRoot",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "NoDefaultRoot",
     "returns": "None"
    },
    "module": "tkinter"
   }
  ]
 },
 {
  "name": "mainloop",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "mainloop",
     "returns": "None"
    },
    "module": "tkinter"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "mainloop",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "getboolean",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "null",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "getboolean",
     "returns": "null"
    },
    "module": "tkinter"
   }
  ]
 },
 {
  "name": "Tcl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "screenName"
      },
      {
       "annotation": "(str | None)",
       "arg": "baseName"
      },
      {
       "annotation": "str",
       "arg": "className"
      },
      {
       "annotation": "bool",
       "arg": "useTk"
      }
     ],
     "kwonlyargs": [],
     "name": "Tcl",
     "returns": "Tk"
    },
    "module": "tkinter"
   }
  ]
 },
 {
  "name": "image_names",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "image_names",
     "returns": "tuple[str, ...]"
    },
    "module": "tkinter"
   }
  ]
 },
 {
  "name": "image_types",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "image_types",
     "returns": "tuple[str, ...]"
    },
    "module": "tkinter"
   }
  ]
 },
 {
  "name": "contextmanager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, Iterator[_T_co]]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "contextmanager",
     "returns": "Callable[_P, _GeneratorContextManager[_T_co]]"
    },
    "module": "contextlib"
   }
  ]
 },
 {
  "name": "asynccontextmanager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, AsyncIterator[_T_co]]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "asynccontextmanager",
     "returns": "Callable[_P, _AsyncGeneratorContextManager[_T_co]]"
    },
    "module": "contextlib"
   }
  ]
 },
 {
  "name": "openmixer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "device"
      }
     ],
     "kwonlyargs": [],
     "name": "openmixer",
     "returns": "Any"
    },
    "module": "ossaudiodev"
   }
  ]
 },
 {
  "name": "ISTERMINAL",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "ISTERMINAL",
     "returns": "bool"
    },
    "module": "token"
   }
  ]
 },
 {
  "name": "ISNONTERMINAL",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "ISNONTERMINAL",
     "returns": "bool"
    },
    "module": "token"
   }
  ]
 },
 {
  "name": "ISEOF",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "ISEOF",
     "returns": "bool"
    },
    "module": "token"
   }
  ]
 },
 {
  "name": "copy_context",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "copy_context",
     "returns": "Context"
    },
    "module": "contextvars"
   }
  ]
 },
 {
  "name": "untokenize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[_Token]",
       "arg": "iterable"
      }
     ],
     "kwonlyargs": [],
     "name": "untokenize",
     "returns": "Any"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "tokenize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], bytes]",
       "arg": "readline"
      }
     ],
     "kwonlyargs": [],
     "name": "tokenize",
     "returns": "Generator[TokenInfo, None, None]"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "generate_tokens",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], str]",
       "arg": "readline"
      }
     ],
     "kwonlyargs": [],
     "name": "generate_tokens",
     "returns": "Generator[TokenInfo, None, None]"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "group",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "group",
     "returns": "str"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "maybe",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "maybe",
     "returns": "str"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "_all_string_prefixes",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_all_string_prefixes",
     "returns": "set[str]"
    },
    "module": "tokenize"
   }
  ]
 },
 {
  "name": "deepcopy",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "x"
      },
      {
       "annotation": "(dict[int, Any] | None)",
       "arg": "memo"
      },
      {
       "annotation": "Any",
       "arg": "_nil"
      }
     ],
     "kwonlyargs": [],
     "name": "deepcopy",
     "returns": "_T"
    },
    "module": "copy"
   }
  ]
 },
 {
  "name": "runeval",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "expression"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globals"
      },
      {
       "annotation": "(Mapping[str, Any] | None)",
       "arg": "locals"
      }
     ],
     "kwonlyargs": [],
     "name": "runeval",
     "returns": "Any"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "runcall",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, _T]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "runcall",
     "returns": "(_T | None)"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "post_mortem",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TracebackType | None)",
       "arg": "t"
      }
     ],
     "kwonlyargs": [],
     "name": "post_mortem",
     "returns": "None"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "pm",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pm",
     "returns": "None"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "find_function",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "funcname"
      },
      {
       "annotation": "str",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "find_function",
     "returns": "(tuple[str, str, int] | None)"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "lasti2lineno",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "CodeType",
       "arg": "code"
      },
      {
       "annotation": "int",
       "arg": "lasti"
      }
     ],
     "kwonlyargs": [],
     "name": "lasti2lineno",
     "returns": "int"
    },
    "module": "pdb"
   }
  ]
 },
 {
  "name": "pickle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[_T]",
       "arg": "ob_type"
      },
      {
       "annotation": "Callable[[_T], str | _Reduce[_T]]",
       "arg": "pickle_function"
      },
      {
       "annotation": "(Callable[[_Reduce[_T]], _T] | None)",
       "arg": "constructor_ob"
      }
     ],
     "kwonlyargs": [],
     "name": "pickle",
     "returns": "None"
    },
    "module": "copyreg"
   }
  ]
 },
 {
  "name": "constructor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[_Reduce[_T]], _T]",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "constructor",
     "returns": "None"
    },
    "module": "copyreg"
   }
  ]
 },
 {
  "name": "add_extension",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Hashable",
       "arg": "module"
      },
      {
       "annotation": "Hashable",
       "arg": "name"
      },
      {
       "annotation": "SupportsInt",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "add_extension",
     "returns": "None"
    },
    "module": "copyreg"
   }
  ]
 },
 {
  "name": "remove_extension",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Hashable",
       "arg": "module"
      },
      {
       "annotation": "Hashable",
       "arg": "name"
      },
      {
       "annotation": "int",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "remove_extension",
     "returns": "None"
    },
    "module": "copyreg"
   }
  ]
 },
 {
  "name": "clear_extension_cache",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clear_extension_cache",
     "returns": "None"
    },
    "module": "copyreg"
   }
  ]
 },
 {
  "name": "encode_long",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "encode_long",
     "returns": "bytes"
    },
    "module": "pickle"
   }
  ]
 },
 {
  "name": "decode_long",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "data"
      }
     ],
     "kwonlyargs": [],
     "name": "decode_long",
     "returns": "int"
    },
    "module": "pickle"
   }
  ]
 },
 {
  "name": "print_tb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "print_tb",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_exception",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(type[BaseException] | None)",
       "arg": "__exc"
      },
      {
       "annotation": "(BaseException | None)",
       "arg": "value"
      },
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "format_exception",
     "returns": "list[str]"
    },
    "module": "traceback"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "BaseException",
       "arg": "__exc"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "name": "format_exception",
     "returns": "list[str]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "print_exc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "print_exc",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "print_last",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "print_last",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "print_stack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(FrameType | None)",
       "arg": "f"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "print_stack",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "extract_tb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      }
     ],
     "kwonlyargs": [],
     "name": "extract_tb",
     "returns": "StackSummary"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "extract_stack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(FrameType | None)",
       "arg": "f"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      }
     ],
     "kwonlyargs": [],
     "name": "extract_stack",
     "returns": "StackSummary"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_list",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[FrameSummary]",
       "arg": "extracted_list"
      }
     ],
     "kwonlyargs": [],
     "name": "format_list",
     "returns": "list[str]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "print_list",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[FrameSummary]",
       "arg": "extracted_list"
      },
      {
       "annotation": "(SupportsWrite[str] | None)",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "print_list",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_exception_only",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(type[BaseException] | None)",
       "arg": "__exc"
      },
      {
       "annotation": "(BaseException | None)",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "format_exception_only",
     "returns": "list[str]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_exc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "limit"
      },
      {
       "annotation": "bool",
       "arg": "chain"
      }
     ],
     "kwonlyargs": [],
     "name": "format_exc",
     "returns": "str"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_tb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      }
     ],
     "kwonlyargs": [],
     "name": "format_tb",
     "returns": "list[str]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "format_stack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(FrameType | None)",
       "arg": "f"
      },
      {
       "annotation": "(int | None)",
       "arg": "limit"
      }
     ],
     "kwonlyargs": [],
     "name": "format_stack",
     "returns": "list[str]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "clear_frames",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "TracebackType",
       "arg": "tb"
      }
     ],
     "kwonlyargs": [],
     "name": "clear_frames",
     "returns": "None"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "walk_stack",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(FrameType | None)",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "walk_stack",
     "returns": "Iterator[tuple[FrameType, int]]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "walk_tb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TracebackType | None)",
       "arg": "tb"
      }
     ],
     "kwonlyargs": [],
     "name": "walk_tb",
     "returns": "Iterator[tuple[FrameType, int]]"
    },
    "module": "traceback"
   }
  ]
 },
 {
  "name": "mksalt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_Method | None)",
       "arg": "method"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "rounds"
      }
     ],
     "name": "mksalt",
     "returns": "str"
    },
    "module": "crypt"
   }
  ]
 },
 {
  "name": "crypt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "word"
      },
      {
       "annotation": "(str | _Method | None)",
       "arg": "salt"
      }
     ],
     "kwonlyargs": [],
     "name": "crypt",
     "returns": "str"
    },
    "module": "crypt"
   }
  ]
 },
 {
  "name": "read_uint1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_uint1",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_uint2",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_uint2",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_int4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_int4",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_uint4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_uint4",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_uint8",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_uint8",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_stringnl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      },
      {
       "annotation": "bool",
       "arg": "decode"
      },
      {
       "annotation": "bool",
       "arg": "stripquotes"
      }
     ],
     "kwonlyargs": [],
     "name": "read_stringnl",
     "returns": "(bytes | str)"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_stringnl_noescape",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_stringnl_noescape",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_stringnl_noescape_pair",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_stringnl_noescape_pair",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_string1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_string1",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_string4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_string4",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_bytes1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_bytes1",
     "returns": "bytes"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_bytes4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_bytes4",
     "returns": "bytes"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_bytes8",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_bytes8",
     "returns": "bytes"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_unicodestringnl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_unicodestringnl",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_unicodestring1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_unicodestring1",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_unicodestring4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_unicodestring4",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_unicodestring8",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_unicodestring8",
     "returns": "str"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_decimalnl_short",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_decimalnl_short",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_decimalnl_long",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_decimalnl_long",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_floatnl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_floatnl",
     "returns": "float"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_float8",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_float8",
     "returns": "float"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_long1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_long1",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "read_long4",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "read_long4",
     "returns": "int"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "genops",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | IO[bytes])",
       "arg": "pickle"
      }
     ],
     "kwonlyargs": [],
     "name": "genops",
     "returns": "Iterator[tuple[OpcodeInfo, Any | None, int | None]]"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "optimize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(bytes | IO[bytes])",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "optimize",
     "returns": "bytes"
    },
    "module": "pickletools"
   }
  ]
 },
 {
  "name": "get_object_traceback",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "get_object_traceback",
     "returns": "(Traceback | None)"
    },
    "module": "tracemalloc"
   }
  ]
 },
 {
  "name": "take_snapshot",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "take_snapshot",
     "returns": "Snapshot"
    },
    "module": "tracemalloc"
   }
  ]
 },
 {
  "name": "setraw",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FD",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "when"
      }
     ],
     "kwonlyargs": [],
     "name": "setraw",
     "returns": "None"
    },
    "module": "tty"
   }
  ]
 },
 {
  "name": "setcbreak",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_FD",
       "arg": "fd"
      },
      {
       "annotation": "int",
       "arg": "when"
      }
     ],
     "kwonlyargs": [],
     "name": "setcbreak",
     "returns": "None"
    },
    "module": "tty"
   }
  ]
 },
 {
  "name": "CFUNCTYPE",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(type[_CData] | None)",
       "arg": "restype"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "use_errno"
      },
      {
       "annotation": "bool",
       "arg": "use_last_error"
      }
     ],
     "name": "CFUNCTYPE",
     "returns": "type[_FuncPointer]"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "PYFUNCTYPE",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(type[_CData] | None)",
       "arg": "restype"
      }
     ],
     "kwonlyargs": [],
     "name": "PYFUNCTYPE",
     "returns": "type[_FuncPointer]"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "addressof",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CData",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "addressof",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "alignment",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_CData | type[_CData])",
       "arg": "obj_or_type"
      }
     ],
     "kwonlyargs": [],
     "name": "alignment",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "byref",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CData",
       "arg": "obj"
      },
      {
       "annotation": "int",
       "arg": "offset"
      }
     ],
     "kwonlyargs": [],
     "name": "byref",
     "returns": "_CArgObject"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "cast",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_CData | _CArgObject | int)",
       "arg": "obj"
      },
      {
       "annotation": "type[_CastT]",
       "arg": "typ"
      }
     ],
     "kwonlyargs": [],
     "name": "cast",
     "returns": "_CastT"
    },
    "module": "ctypes"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Type[_T]",
       "arg": "typ"
      },
      {
       "annotation": "Any",
       "arg": "val"
      }
     ],
     "kwonlyargs": [],
     "name": "cast",
     "returns": "_T"
    },
    "module": "typing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "typ"
      },
      {
       "annotation": "Any",
       "arg": "val"
      }
     ],
     "kwonlyargs": [],
     "name": "cast",
     "returns": "Any"
    },
    "module": "typing"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "typ"
      },
      {
       "annotation": "Any",
       "arg": "val"
      }
     ],
     "kwonlyargs": [],
     "name": "cast",
     "returns": "Any"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "create_string_buffer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | bytes)",
       "arg": "init"
      },
      {
       "annotation": "(int | None)",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "create_string_buffer",
     "returns": "Array[c_char]"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "create_unicode_buffer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | str)",
       "arg": "init"
      },
      {
       "annotation": "(int | None)",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "create_unicode_buffer",
     "returns": "Array[c_wchar]"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "get_errno",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_errno",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "memmove",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CVoidPLike",
       "arg": "dst"
      },
      {
       "annotation": "_CVoidConstPLike",
       "arg": "src"
      },
      {
       "annotation": "int",
       "arg": "count"
      }
     ],
     "kwonlyargs": [],
     "name": "memmove",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "memset",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CVoidPLike",
       "arg": "dst"
      },
      {
       "annotation": "int",
       "arg": "c"
      },
      {
       "annotation": "int",
       "arg": "count"
      }
     ],
     "kwonlyargs": [],
     "name": "memset",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "POINTER",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[_CT]",
       "arg": "type"
      }
     ],
     "kwonlyargs": [],
     "name": "POINTER",
     "returns": "type[pointer[_CT]]"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "resize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CData",
       "arg": "obj"
      },
      {
       "annotation": "int",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "resize",
     "returns": "None"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "set_errno",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "value"
      }
     ],
     "kwonlyargs": [],
     "name": "set_errno",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "sizeof",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_CData | type[_CData])",
       "arg": "obj_or_type"
      }
     ],
     "kwonlyargs": [],
     "name": "sizeof",
     "returns": "int"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "string_at",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CVoidConstPLike",
       "arg": "address"
      },
      {
       "annotation": "int",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "string_at",
     "returns": "bytes"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "wstring_at",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_CVoidConstPLike",
       "arg": "address"
      },
      {
       "annotation": "int",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "wstring_at",
     "returns": "str"
    },
    "module": "ctypes"
   }
  ]
 },
 {
  "name": "write_docstringdict",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "write_docstringdict",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "textinput",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "title"
      },
      {
       "annotation": "str",
       "arg": "prompt"
      }
     ],
     "kwonlyargs": [],
     "name": "textinput",
     "returns": "(str | None)"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "numinput",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "title"
      },
      {
       "annotation": "str",
       "arg": "prompt"
      },
      {
       "annotation": "(float | None)",
       "arg": "default"
      },
      {
       "annotation": "(float | None)",
       "arg": "minval"
      },
      {
       "annotation": "(float | None)",
       "arg": "maxval"
      }
     ],
     "kwonlyargs": [],
     "name": "numinput",
     "returns": "(float | None)"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "clear",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clear",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "setworldcoordinates",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "llx"
      },
      {
       "annotation": "float",
       "arg": "lly"
      },
      {
       "annotation": "float",
       "arg": "urx"
      },
      {
       "annotation": "float",
       "arg": "ury"
      }
     ],
     "kwonlyargs": [],
     "name": "setworldcoordinates",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "register_shape",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(_PolygonCoords | Shape | None)",
       "arg": "shape"
      }
     ],
     "kwonlyargs": [],
     "name": "register_shape",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "colormode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "cmode"
      }
     ],
     "kwonlyargs": [],
     "name": "colormode",
     "returns": "float"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "cmode"
      }
     ],
     "kwonlyargs": [],
     "name": "colormode",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "turtles",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "turtles",
     "returns": "list[Turtle]"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "bgcolor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "bgcolor",
     "returns": "_AnyColor"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Color",
       "arg": "color"
      }
     ],
     "kwonlyargs": [],
     "name": "bgcolor",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "bgcolor",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "tracer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "tracer",
     "returns": "int"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "(int | None)",
       "arg": "delay"
      }
     ],
     "kwonlyargs": [],
     "name": "tracer",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "delay",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "delay"
      }
     ],
     "kwonlyargs": [],
     "name": "delay",
     "returns": "int"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "delay"
      }
     ],
     "kwonlyargs": [],
     "name": "delay",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "update",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "update",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "window_width",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "window_width",
     "returns": "int"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "window_height",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "window_height",
     "returns": "int"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "getcanvas",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getcanvas",
     "returns": "Canvas"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "getshapes",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getshapes",
     "returns": "list[str]"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "onclick",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[float, float], Any]",
       "arg": "fun"
      },
      {
       "annotation": "int",
       "arg": "btn"
      },
      {
       "annotation": "(Any | None)",
       "arg": "add"
      }
     ],
     "kwonlyargs": [],
     "name": "onclick",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "onkey",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], Any]",
       "arg": "fun"
      },
      {
       "annotation": "str",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "onkey",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "listen",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "xdummy"
      },
      {
       "annotation": "(float | None)",
       "arg": "ydummy"
      }
     ],
     "kwonlyargs": [],
     "name": "listen",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "ontimer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], Any]",
       "arg": "fun"
      },
      {
       "annotation": "int",
       "arg": "t"
      }
     ],
     "kwonlyargs": [],
     "name": "ontimer",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "bgpic",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "picname"
      }
     ],
     "kwonlyargs": [],
     "name": "bgpic",
     "returns": "str"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "picname"
      }
     ],
     "kwonlyargs": [],
     "name": "bgpic",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "screensize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "canvwidth"
      },
      {
       "annotation": "None",
       "arg": "canvheight"
      },
      {
       "annotation": "None",
       "arg": "bg"
      }
     ],
     "kwonlyargs": [],
     "name": "screensize",
     "returns": "tuple[int, int]"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "canvwidth"
      },
      {
       "annotation": "int",
       "arg": "canvheight"
      },
      {
       "annotation": "(_Color | None)",
       "arg": "bg"
      }
     ],
     "kwonlyargs": [],
     "name": "screensize",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "onkeypress",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[], Any]",
       "arg": "fun"
      },
      {
       "annotation": "(str | None)",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "onkeypress",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "setup",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "width"
      },
      {
       "annotation": "float",
       "arg": "height"
      },
      {
       "annotation": "(int | None)",
       "arg": "startx"
      },
      {
       "annotation": "(int | None)",
       "arg": "starty"
      }
     ],
     "kwonlyargs": [],
     "name": "setup",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "title",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "titlestring"
      }
     ],
     "kwonlyargs": [],
     "name": "title",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "bye",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "bye",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "exitonclick",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "exitonclick",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "Screen",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "Screen",
     "returns": "_Screen"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "forward",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "distance"
      }
     ],
     "kwonlyargs": [],
     "name": "forward",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "back",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "distance"
      }
     ],
     "kwonlyargs": [],
     "name": "back",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "right",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "right",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "left",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "left",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "pos",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pos",
     "returns": "Vec2D"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "xcor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "xcor",
     "returns": "float"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "ycor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "ycor",
     "returns": "float"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "goto",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[float, float]",
       "arg": "x"
      },
      {
       "annotation": "None",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "goto",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "x"
      },
      {
       "annotation": "float",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "goto",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "home",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "home",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "setx",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "setx",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "sety",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "sety",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "distance",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TNavigator | tuple[float, float])",
       "arg": "x"
      },
      {
       "annotation": "None",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "distance",
     "returns": "float"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "x"
      },
      {
       "annotation": "float",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "distance",
     "returns": "float"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "towards",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(TNavigator | tuple[float, float])",
       "arg": "x"
      },
      {
       "annotation": "None",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "towards",
     "returns": "float"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "x"
      },
      {
       "annotation": "float",
       "arg": "y"
      }
     ],
     "kwonlyargs": [],
     "name": "towards",
     "returns": "float"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "heading",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "heading",
     "returns": "float"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "setheading",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "to_angle"
      }
     ],
     "kwonlyargs": [],
     "name": "setheading",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "circle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "radius"
      },
      {
       "annotation": "(float | None)",
       "arg": "extent"
      },
      {
       "annotation": "(int | None)",
       "arg": "steps"
      }
     ],
     "kwonlyargs": [],
     "name": "circle",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "resizemode",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "rmode"
      }
     ],
     "kwonlyargs": [],
     "name": "resizemode",
     "returns": "str"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "rmode"
      }
     ],
     "kwonlyargs": [],
     "name": "resizemode",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "pensize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "width"
      }
     ],
     "kwonlyargs": [],
     "name": "pensize",
     "returns": "int"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "width"
      }
     ],
     "kwonlyargs": [],
     "name": "pensize",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "penup",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "penup",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "pendown",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pendown",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "isdown",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "isdown",
     "returns": "bool"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "speed",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "speed"
      }
     ],
     "kwonlyargs": [],
     "name": "speed",
     "returns": "int"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Speed",
       "arg": "speed"
      }
     ],
     "kwonlyargs": [],
     "name": "speed",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "pencolor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pencolor",
     "returns": "_AnyColor"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Color",
       "arg": "color"
      }
     ],
     "kwonlyargs": [],
     "name": "pencolor",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "pencolor",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "fillcolor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "fillcolor",
     "returns": "_AnyColor"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Color",
       "arg": "color"
      }
     ],
     "kwonlyargs": [],
     "name": "fillcolor",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "fillcolor",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "color",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "color",
     "returns": "tuple[_AnyColor, _AnyColor]"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Color",
       "arg": "color"
      }
     ],
     "kwonlyargs": [],
     "name": "color",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "r"
      },
      {
       "annotation": "float",
       "arg": "g"
      },
      {
       "annotation": "float",
       "arg": "b"
      }
     ],
     "kwonlyargs": [],
     "name": "color",
     "returns": "None"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Color",
       "arg": "color1"
      },
      {
       "annotation": "_Color",
       "arg": "color2"
      }
     ],
     "kwonlyargs": [],
     "name": "color",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "showturtle",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "showturtle",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "hideturtle",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "hideturtle",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "isvisible",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "isvisible",
     "returns": "bool"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "pen",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pen",
     "returns": "_PenState"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(_PenState | None)",
       "arg": "pen"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "shown"
      },
      {
       "annotation": "bool",
       "arg": "pendown"
      },
      {
       "annotation": "_Color",
       "arg": "pencolor"
      },
      {
       "annotation": "_Color",
       "arg": "fillcolor"
      },
      {
       "annotation": "int",
       "arg": "pensize"
      },
      {
       "annotation": "int",
       "arg": "speed"
      },
      {
       "annotation": "str",
       "arg": "resizemode"
      },
      {
       "annotation": "tuple[float, float]",
       "arg": "stretchfactor"
      },
      {
       "annotation": "int",
       "arg": "outline"
      },
      {
       "annotation": "float",
       "arg": "tilt"
      }
     ],
     "name": "pen",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "setundobuffer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "setundobuffer",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "undobufferentries",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "undobufferentries",
     "returns": "int"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "shape",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "shape",
     "returns": "str"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "shape",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "shapesize",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "shapesize",
     "returns": "tuple[float, float, float]"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "stretch_wid"
      },
      {
       "annotation": "(float | None)",
       "arg": "stretch_len"
      },
      {
       "annotation": "(float | None)",
       "arg": "outline"
      }
     ],
     "kwonlyargs": [],
     "name": "shapesize",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "shearfactor",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "shear"
      }
     ],
     "kwonlyargs": [],
     "name": "shearfactor",
     "returns": "float"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "shear"
      }
     ],
     "kwonlyargs": [],
     "name": "shearfactor",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "shapetransform",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "shapetransform",
     "returns": "tuple[float, float, float, float]"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "(float | None)",
       "arg": "t11"
      },
      {
       "annotation": "(float | None)",
       "arg": "t12"
      },
      {
       "annotation": "(float | None)",
       "arg": "t21"
      },
      {
       "annotation": "(float | None)",
       "arg": "t22"
      }
     ],
     "kwonlyargs": [],
     "name": "shapetransform",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "get_shapepoly",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_shapepoly",
     "returns": "(_PolygonCoords | None)"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "settiltangle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "settiltangle",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "tiltangle",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "tiltangle",
     "returns": "float"
    },
    "module": "turtle"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "tiltangle",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "tilt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "angle"
      }
     ],
     "kwonlyargs": [],
     "name": "tilt",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "stamp",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "stamp",
     "returns": "Any"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "clearstamp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | tuple[int, ...])",
       "arg": "stampid"
      }
     ],
     "kwonlyargs": [],
     "name": "clearstamp",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "clearstamps",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "n"
      }
     ],
     "kwonlyargs": [],
     "name": "clearstamps",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "filling",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "filling",
     "returns": "bool"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "begin_fill",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "begin_fill",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "end_fill",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "end_fill",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "dot",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "size"
      }
     ],
     "kwonlyargs": [],
     "name": "dot",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "begin_poly",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "begin_poly",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "end_poly",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "end_poly",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "get_poly",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_poly",
     "returns": "(_PolygonCoords | None)"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "getscreen",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getscreen",
     "returns": "TurtleScreen"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "getturtle",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getturtle",
     "returns": "Turtle"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "onrelease",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[float, float], Any]",
       "arg": "fun"
      },
      {
       "annotation": "int",
       "arg": "btn"
      },
      {
       "annotation": "(Any | None)",
       "arg": "add"
      }
     ],
     "kwonlyargs": [],
     "name": "onrelease",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "ondrag",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[float, float], Any]",
       "arg": "fun"
      },
      {
       "annotation": "int",
       "arg": "btn"
      },
      {
       "annotation": "(Any | None)",
       "arg": "add"
      }
     ],
     "kwonlyargs": [],
     "name": "ondrag",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "undo",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "undo",
     "returns": "None"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "clone",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clone",
     "returns": "Turtle"
    },
    "module": "turtle"
   }
  ]
 },
 {
  "name": "wrapper",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., _T]",
       "arg": "__func"
      }
     ],
     "kwonlyargs": [],
     "name": "wrapper",
     "returns": "_T"
    },
    "module": "curses"
   }
  ]
 },
 {
  "name": "asdict",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "asdict",
     "returns": "dict[str, Any]"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[list[tuple[str, Any]]], _T]",
       "arg": "dict_factory"
      }
     ],
     "name": "asdict",
     "returns": "_T"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "astuple",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "astuple",
     "returns": "tuple[Any, ...]"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Callable[[list[Any]], _T]",
       "arg": "tuple_factory"
      }
     ],
     "name": "astuple",
     "returns": "_T"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "dataclass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[_T]",
       "arg": "__cls"
      }
     ],
     "kwonlyargs": [],
     "name": "dataclass",
     "returns": "type[_T]"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "None",
       "arg": "__cls"
      }
     ],
     "kwonlyargs": [],
     "name": "dataclass",
     "returns": "Callable[[type[_T]], type[_T]]"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "init"
      },
      {
       "annotation": "bool",
       "arg": "repr"
      },
      {
       "annotation": "bool",
       "arg": "eq"
      },
      {
       "annotation": "bool",
       "arg": "order"
      },
      {
       "annotation": "bool",
       "arg": "unsafe_hash"
      },
      {
       "annotation": "bool",
       "arg": "frozen"
      },
      {
       "annotation": "bool",
       "arg": "match_args"
      },
      {
       "annotation": "bool",
       "arg": "kw_only"
      },
      {
       "annotation": "bool",
       "arg": "slots"
      }
     ],
     "name": "dataclass",
     "returns": "Callable[[type[_T]], type[_T]]"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "field",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "_T",
       "arg": "default"
      },
      {
       "annotation": "bool",
       "arg": "init"
      },
      {
       "annotation": "bool",
       "arg": "repr"
      },
      {
       "annotation": "(bool | None)",
       "arg": "hash"
      },
      {
       "annotation": "bool",
       "arg": "compare"
      },
      {
       "annotation": "(Mapping[Any, Any] | None)",
       "arg": "metadata"
      },
      {
       "annotation": "bool",
       "arg": "kw_only"
      }
     ],
     "name": "field",
     "returns": "_T"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "Callable[[], _T]",
       "arg": "default_factory"
      },
      {
       "annotation": "bool",
       "arg": "init"
      },
      {
       "annotation": "bool",
       "arg": "repr"
      },
      {
       "annotation": "(bool | None)",
       "arg": "hash"
      },
      {
       "annotation": "bool",
       "arg": "compare"
      },
      {
       "annotation": "(Mapping[Any, Any] | None)",
       "arg": "metadata"
      },
      {
       "annotation": "bool",
       "arg": "kw_only"
      }
     ],
     "name": "field",
     "returns": "_T"
    },
    "module": "dataclasses"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "init"
      },
      {
       "annotation": "bool",
       "arg": "repr"
      },
      {
       "annotation": "(bool | None)",
       "arg": "hash"
      },
      {
       "annotation": "bool",
       "arg": "compare"
      },
      {
       "annotation": "(Mapping[Any, Any] | None)",
       "arg": "metadata"
      },
      {
       "annotation": "bool",
       "arg": "kw_only"
      }
     ],
     "name": "field",
     "returns": "Any"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "fields",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "class_or_instance"
      }
     ],
     "kwonlyargs": [],
     "name": "fields",
     "returns": "tuple[Field[Any], ...]"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "is_dataclass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "is_dataclass",
     "returns": "bool"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "make_dataclass",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "cls_name"
      },
      {
       "annotation": "Iterable[str | tuple[str, type] | tuple[str, type, Field[Any]]]",
       "arg": "fields"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "tuple[type, ...]",
       "arg": "bases"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "namespace"
      },
      {
       "annotation": "bool",
       "arg": "init"
      },
      {
       "annotation": "bool",
       "arg": "repr"
      },
      {
       "annotation": "bool",
       "arg": "eq"
      },
      {
       "annotation": "bool",
       "arg": "order"
      },
      {
       "annotation": "bool",
       "arg": "unsafe_hash"
      },
      {
       "annotation": "bool",
       "arg": "frozen"
      },
      {
       "annotation": "bool",
       "arg": "match_args"
      },
      {
       "annotation": "bool",
       "arg": "kw_only"
      },
      {
       "annotation": "bool",
       "arg": "slots"
      }
     ],
     "name": "make_dataclass",
     "returns": "type"
    },
    "module": "dataclasses"
   }
  ]
 },
 {
  "name": "extend_path",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_PathT",
       "arg": "path"
      },
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "extend_path",
     "returns": "_PathT"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "get_importer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path_item"
      }
     ],
     "kwonlyargs": [],
     "name": "get_importer",
     "returns": "(PathEntryFinder | None)"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "get_loader",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "module_or_name"
      }
     ],
     "kwonlyargs": [],
     "name": "get_loader",
     "returns": "(Loader | None)"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "iter_importers",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "fullname"
      }
     ],
     "kwonlyargs": [],
     "name": "iter_importers",
     "returns": "Iterator[MetaPathFinder | PathEntryFinder]"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "iter_modules",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "path"
      },
      {
       "annotation": "str",
       "arg": "prefix"
      }
     ],
     "kwonlyargs": [],
     "name": "iter_modules",
     "returns": "Iterator[ModuleInfo]"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "read_code",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "SupportsRead[bytes]",
       "arg": "stream"
      }
     ],
     "kwonlyargs": [],
     "name": "read_code",
     "returns": "Any"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "walk_packages",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Iterable[str] | None)",
       "arg": "path"
      },
      {
       "annotation": "str",
       "arg": "prefix"
      },
      {
       "annotation": "(Callable[[str], None] | None)",
       "arg": "onerror"
      }
     ],
     "kwonlyargs": [],
     "name": "walk_packages",
     "returns": "Iterator[ModuleInfo]"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "get_data",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "package"
      },
      {
       "annotation": "str",
       "arg": "resource"
      }
     ],
     "kwonlyargs": [],
     "name": "get_data",
     "returns": "(bytes | None)"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "resolve_name",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "resolve_name",
     "returns": "Any"
    },
    "module": "pkgutil"
   }
  ]
 },
 {
  "name": "new_class",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "Iterable[object]",
       "arg": "bases"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "kwds"
      },
      {
       "annotation": "(Callable[[dict[str, Any]], None] | None)",
       "arg": "exec_body"
      }
     ],
     "kwonlyargs": [],
     "name": "new_class",
     "returns": "type"
    },
    "module": "types"
   }
  ]
 },
 {
  "name": "resolve_bases",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[object]",
       "arg": "bases"
      }
     ],
     "kwonlyargs": [],
     "name": "resolve_bases",
     "returns": "tuple[Any, ...]"
    },
    "module": "types"
   }
  ]
 },
 {
  "name": "prepare_class",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "tuple[type, ...]",
       "arg": "bases"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "kwds"
      }
     ],
     "kwonlyargs": [],
     "name": "prepare_class",
     "returns": "tuple[type, dict[str, Any], dict[str, Any]]"
    },
    "module": "types"
   }
  ]
 },
 {
  "name": "coroutine",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, Generator[_R, Any, Any]]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "coroutine",
     "returns": "Callable[_P, Awaitable[_R]]"
    },
    "module": "types"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "_Fn",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "coroutine",
     "returns": "_Fn"
    },
    "module": "types"
   }
  ]
 },
 {
  "name": "libc_ver",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "executable"
      },
      {
       "annotation": "str",
       "arg": "lib"
      },
      {
       "annotation": "str",
       "arg": "version"
      },
      {
       "annotation": "int",
       "arg": "chunksize"
      }
     ],
     "kwonlyargs": [],
     "name": "libc_ver",
     "returns": "tuple[str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "win32_ver",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "release"
      },
      {
       "annotation": "str",
       "arg": "version"
      },
      {
       "annotation": "str",
       "arg": "csd"
      },
      {
       "annotation": "str",
       "arg": "ptype"
      }
     ],
     "kwonlyargs": [],
     "name": "win32_ver",
     "returns": "tuple[str, str, str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "win32_edition",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "win32_edition",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "win32_is_iot",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "win32_is_iot",
     "returns": "bool"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "mac_ver",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "release"
      },
      {
       "annotation": "tuple[str, str, str]",
       "arg": "versioninfo"
      },
      {
       "annotation": "str",
       "arg": "machine"
      }
     ],
     "kwonlyargs": [],
     "name": "mac_ver",
     "returns": "tuple[str, tuple[str, str, str], str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "java_ver",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "release"
      },
      {
       "annotation": "str",
       "arg": "vendor"
      },
      {
       "annotation": "tuple[str, str, str]",
       "arg": "vminfo"
      },
      {
       "annotation": "tuple[str, str, str]",
       "arg": "osinfo"
      }
     ],
     "kwonlyargs": [],
     "name": "java_ver",
     "returns": "tuple[str, str, tuple[str, str, str], tuple[str, str, str]]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "system_alias",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "system"
      },
      {
       "annotation": "str",
       "arg": "release"
      },
      {
       "annotation": "str",
       "arg": "version"
      }
     ],
     "kwonlyargs": [],
     "name": "system_alias",
     "returns": "tuple[str, str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "architecture",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "executable"
      },
      {
       "annotation": "str",
       "arg": "bits"
      },
      {
       "annotation": "str",
       "arg": "linkage"
      }
     ],
     "kwonlyargs": [],
     "name": "architecture",
     "returns": "tuple[str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "node",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "node",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "release",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "release",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "version",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "version",
     "returns": "str"
    },
    "module": "platform"
   },
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "version",
     "returns": "str"
    },
    "module": "ensurepip"
   }
  ]
 },
 {
  "name": "machine",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "machine",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "processor",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "processor",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_implementation",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_implementation",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_version",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_version",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_version_tuple",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_version_tuple",
     "returns": "tuple[str, str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_branch",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_branch",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_revision",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_revision",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_build",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_build",
     "returns": "tuple[str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "python_compiler",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "python_compiler",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "platform",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "aliased"
      },
      {
       "annotation": "bool",
       "arg": "terse"
      }
     ],
     "kwonlyargs": [],
     "name": "platform",
     "returns": "str"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "freedesktop_os_release",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "freedesktop_os_release",
     "returns": "dict[str, str]"
    },
    "module": "platform"
   }
  ]
 },
 {
  "name": "overload",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_F",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "overload",
     "returns": "_F"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "final",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "f"
      }
     ],
     "kwonlyargs": [],
     "name": "final",
     "returns": "_T"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "no_type_check",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_F",
       "arg": "arg"
      }
     ],
     "kwonlyargs": [],
     "name": "no_type_check",
     "returns": "_F"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "no_type_check_decorator",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[_P, _T]",
       "arg": "decorator"
      }
     ],
     "kwonlyargs": [],
     "name": "no_type_check_decorator",
     "returns": "Callable[_P, _T]"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "runtime_checkable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_TC",
       "arg": "cls"
      }
     ],
     "kwonlyargs": [],
     "name": "runtime_checkable",
     "returns": "_TC"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "get_type_hints",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_get_type_hints_obj_allowed_types",
       "arg": "obj"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globalns"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "localns"
      },
      {
       "annotation": "bool",
       "arg": "include_extras"
      }
     ],
     "kwonlyargs": [],
     "name": "get_type_hints",
     "returns": "dict[str, Any]"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "get_origin",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "tp"
      }
     ],
     "kwonlyargs": [],
     "name": "get_origin",
     "returns": "(Any | None)"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "get_args",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "tp"
      }
     ],
     "kwonlyargs": [],
     "name": "get_args",
     "returns": "tuple[Any, ...]"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "type_check_only",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_F",
       "arg": "func_or_cls"
      }
     ],
     "kwonlyargs": [],
     "name": "type_check_only",
     "returns": "_F"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "is_typeddict",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "tp"
      }
     ],
     "kwonlyargs": [],
     "name": "is_typeddict",
     "returns": "bool"
    },
    "module": "typing"
   }
  ]
 },
 {
  "name": "whichdb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "whichdb",
     "returns": "str"
    },
    "module": "dbm"
   }
  ]
 },
 {
  "name": "bidirectional",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "bidirectional",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "category",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "category",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "combining",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "combining",
     "returns": "int"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "decimal",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      },
      {
       "annotation": "_T",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "decimal",
     "returns": "(int | _T)"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "decomposition",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "decomposition",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "digit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      },
      {
       "annotation": "_T",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "digit",
     "returns": "(int | _T)"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "east_asian_width",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "east_asian_width",
     "returns": "str"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "is_normalized",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__form"
      },
      {
       "annotation": "str",
       "arg": "__unistr"
      }
     ],
     "kwonlyargs": [],
     "name": "is_normalized",
     "returns": "bool"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "mirrored",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      }
     ],
     "kwonlyargs": [],
     "name": "mirrored",
     "returns": "int"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "name",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      },
      {
       "annotation": "_T",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "name",
     "returns": "(str | _T)"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "numeric",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__chr"
      },
      {
       "annotation": "_T",
       "arg": "__default"
      }
     ],
     "kwonlyargs": [],
     "name": "numeric",
     "returns": "(float | _T)"
    },
    "module": "unicodedata"
   }
  ]
 },
 {
  "name": "load_tests",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "TestLoader",
       "arg": "loader"
      },
      {
       "annotation": "TestSuite",
       "arg": "tests"
      },
      {
       "annotation": "(str | None)",
       "arg": "pattern"
      }
     ],
     "kwonlyargs": [],
     "name": "load_tests",
     "returns": "TestSuite"
    },
    "module": "unittest"
   }
  ]
 },
 {
  "name": "get_close_matches",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "word"
      },
      {
       "annotation": "Iterable[AnyStr]",
       "arg": "possibilities"
      },
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "float",
       "arg": "cutoff"
      }
     ],
     "kwonlyargs": [],
     "name": "get_close_matches",
     "returns": "list[AnyStr]"
    },
    "module": "difflib"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[_T]",
       "arg": "word"
      },
      {
       "annotation": "Iterable[Sequence[_T]]",
       "arg": "possibilities"
      },
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "float",
       "arg": "cutoff"
      }
     ],
     "kwonlyargs": [],
     "name": "get_close_matches",
     "returns": "list[Sequence[_T]]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "IS_LINE_JUNK",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "line"
      },
      {
       "annotation": "Any",
       "arg": "pat"
      }
     ],
     "kwonlyargs": [],
     "name": "IS_LINE_JUNK",
     "returns": "bool"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "IS_CHARACTER_JUNK",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "ch"
      },
      {
       "annotation": "str",
       "arg": "ws"
      }
     ],
     "kwonlyargs": [],
     "name": "IS_CHARACTER_JUNK",
     "returns": "bool"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "unified_diff",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[str]",
       "arg": "a"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "b"
      },
      {
       "annotation": "str",
       "arg": "fromfile"
      },
      {
       "annotation": "str",
       "arg": "tofile"
      },
      {
       "annotation": "str",
       "arg": "fromfiledate"
      },
      {
       "annotation": "str",
       "arg": "tofiledate"
      },
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "str",
       "arg": "lineterm"
      }
     ],
     "kwonlyargs": [],
     "name": "unified_diff",
     "returns": "Iterator[str]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "context_diff",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[str]",
       "arg": "a"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "b"
      },
      {
       "annotation": "str",
       "arg": "fromfile"
      },
      {
       "annotation": "str",
       "arg": "tofile"
      },
      {
       "annotation": "str",
       "arg": "fromfiledate"
      },
      {
       "annotation": "str",
       "arg": "tofiledate"
      },
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "str",
       "arg": "lineterm"
      }
     ],
     "kwonlyargs": [],
     "name": "context_diff",
     "returns": "Iterator[str]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "ndiff",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[str]",
       "arg": "a"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "b"
      },
      {
       "annotation": "(Callable[[str], bool] | None)",
       "arg": "linejunk"
      },
      {
       "annotation": "(Callable[[str], bool] | None)",
       "arg": "charjunk"
      }
     ],
     "kwonlyargs": [],
     "name": "ndiff",
     "returns": "Iterator[str]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "restore",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[str]",
       "arg": "delta"
      },
      {
       "annotation": "int",
       "arg": "which"
      }
     ],
     "kwonlyargs": [],
     "name": "restore",
     "returns": "Iterator[str]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "diff_bytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[Sequence[str], Sequence[str], str, str, str, str, int, str],\n    Iterator[str]]",
       "arg": "dfunc"
      },
      {
       "annotation": "Sequence[bytes]",
       "arg": "a"
      },
      {
       "annotation": "Sequence[bytes]",
       "arg": "b"
      },
      {
       "annotation": "bytes",
       "arg": "fromfile"
      },
      {
       "annotation": "bytes",
       "arg": "tofile"
      },
      {
       "annotation": "bytes",
       "arg": "fromfiledate"
      },
      {
       "annotation": "bytes",
       "arg": "tofiledate"
      },
      {
       "annotation": "int",
       "arg": "n"
      },
      {
       "annotation": "bytes",
       "arg": "lineterm"
      }
     ],
     "kwonlyargs": [],
     "name": "diff_bytes",
     "returns": "Iterator[bytes]"
    },
    "module": "difflib"
   }
  ]
 },
 {
  "name": "findlabels",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "findlabels",
     "returns": "list[int]"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "findlinestarts",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "code"
      }
     ],
     "kwonlyargs": [],
     "name": "findlinestarts",
     "returns": "Iterator[tuple[int, int]]"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "pretty_flags",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "pretty_flags",
     "returns": "str"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "code_info",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeOrStringType",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "code_info",
     "returns": "str"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "disassemble",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "co"
      },
      {
       "annotation": "int",
       "arg": "lasti"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "name": "disassemble",
     "returns": "None"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "disco",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "co"
      },
      {
       "annotation": "int",
       "arg": "lasti"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "name": "disco",
     "returns": "None"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "distb",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(types.TracebackType | None)",
       "arg": "tb"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "name": "distb",
     "returns": "None"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "get_instructions",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "x"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(int | None)",
       "arg": "first_line"
      }
     ],
     "name": "get_instructions",
     "returns": "Iterator[Instruction]"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "show_code",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_HaveCodeType",
       "arg": "co"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(IO[str] | None)",
       "arg": "file"
      }
     ],
     "name": "show_code",
     "returns": "None"
    },
    "module": "dis"
   }
  ]
 },
 {
  "name": "abspath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "abspath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "abspath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "basename",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "basename",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "basename",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "dirname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "dirname",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "dirname",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "expanduser",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "expanduser",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "expanduser",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "expandvars",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "expandvars",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "expandvars",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "normcase",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "normcase",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "normcase",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "normpath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "normpath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "normpath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "commonpath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[StrPath]",
       "arg": "paths"
      }
     ],
     "kwonlyargs": [],
     "name": "commonpath",
     "returns": "str"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[BytesPath]",
       "arg": "paths"
      }
     ],
     "kwonlyargs": [],
     "name": "commonpath",
     "returns": "bytes"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "realpath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "name": "realpath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "strict"
      }
     ],
     "name": "realpath",
     "returns": "AnyStr"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "relpath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "BytesPath",
       "arg": "path"
      },
      {
       "annotation": "(BytesPath | None)",
       "arg": "start"
      }
     ],
     "kwonlyargs": [],
     "name": "relpath",
     "returns": "bytes"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "StrPath",
       "arg": "path"
      },
      {
       "annotation": "(StrPath | None)",
       "arg": "start"
      }
     ],
     "kwonlyargs": [],
     "name": "relpath",
     "returns": "str"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "splitdrive",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "splitdrive",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "splitdrive",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "splitext",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "PathLike[AnyStr]",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "splitext",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "p"
      }
     ],
     "kwonlyargs": [],
     "name": "splitext",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "isabs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "isabs",
     "returns": "bool"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "islink",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "islink",
     "returns": "bool"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "ismount",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "ismount",
     "returns": "bool"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "lexists",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "lexists",
     "returns": "bool"
    },
    "module": "posixpath"
   }
  ]
 },
 {
  "name": "pformat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "int",
       "arg": "indent"
      },
      {
       "annotation": "int",
       "arg": "width"
      },
      {
       "annotation": "(int | None)",
       "arg": "depth"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "compact"
      },
      {
       "annotation": "bool",
       "arg": "sort_dicts"
      },
      {
       "annotation": "bool",
       "arg": "underscore_numbers"
      }
     ],
     "name": "pformat",
     "returns": "str"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "pp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "stream"
      },
      {
       "annotation": "int",
       "arg": "indent"
      },
      {
       "annotation": "int",
       "arg": "width"
      },
      {
       "annotation": "(int | None)",
       "arg": "depth"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "compact"
      },
      {
       "annotation": "bool",
       "arg": "sort_dicts"
      },
      {
       "annotation": "bool",
       "arg": "underscore_numbers"
      }
     ],
     "name": "pp",
     "returns": "None"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "pprint",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "(IO[str] | None)",
       "arg": "stream"
      },
      {
       "annotation": "int",
       "arg": "indent"
      },
      {
       "annotation": "int",
       "arg": "width"
      },
      {
       "annotation": "(int | None)",
       "arg": "depth"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "bool",
       "arg": "compact"
      },
      {
       "annotation": "bool",
       "arg": "sort_dicts"
      },
      {
       "annotation": "bool",
       "arg": "underscore_numbers"
      }
     ],
     "name": "pprint",
     "returns": "None"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "isreadable",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isreadable",
     "returns": "bool"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "isrecursive",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isrecursive",
     "returns": "bool"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "saferepr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "saferepr",
     "returns": "str"
    },
    "module": "pprint"
   }
  ]
 },
 {
  "name": "getnode",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getnode",
     "returns": "int"
    },
    "module": "uuid"
   }
  ]
 },
 {
  "name": "uuid1",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_Int | None)",
       "arg": "node"
      },
      {
       "annotation": "(_Int | None)",
       "arg": "clock_seq"
      }
     ],
     "kwonlyargs": [],
     "name": "uuid1",
     "returns": "UUID"
    },
    "module": "uuid"
   }
  ]
 },
 {
  "name": "uuid3",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UUID",
       "arg": "namespace"
      },
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "uuid3",
     "returns": "UUID"
    },
    "module": "uuid"
   }
  ]
 },
 {
  "name": "uuid4",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "uuid4",
     "returns": "UUID"
    },
    "module": "uuid"
   }
  ]
 },
 {
  "name": "uuid5",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "UUID",
       "arg": "namespace"
      },
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "uuid5",
     "returns": "UUID"
    },
    "module": "uuid"
   }
  ]
 },
 {
  "name": "register_optionflag",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "register_optionflag",
     "returns": "int"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "testmod",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(types.ModuleType | None)",
       "arg": "m"
      },
      {
       "annotation": "(str | None)",
       "arg": "name"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      },
      {
       "annotation": "(bool | None)",
       "arg": "verbose"
      },
      {
       "annotation": "bool",
       "arg": "report"
      },
      {
       "annotation": "int",
       "arg": "optionflags"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "extraglobs"
      },
      {
       "annotation": "bool",
       "arg": "raise_on_error"
      },
      {
       "annotation": "bool",
       "arg": "exclude_empty"
      }
     ],
     "kwonlyargs": [],
     "name": "testmod",
     "returns": "TestResults"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "testfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "bool",
       "arg": "module_relative"
      },
      {
       "annotation": "(str | None)",
       "arg": "name"
      },
      {
       "annotation": "(None | str | types.ModuleType)",
       "arg": "package"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      },
      {
       "annotation": "(bool | None)",
       "arg": "verbose"
      },
      {
       "annotation": "bool",
       "arg": "report"
      },
      {
       "annotation": "int",
       "arg": "optionflags"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "extraglobs"
      },
      {
       "annotation": "bool",
       "arg": "raise_on_error"
      },
      {
       "annotation": "DocTestParser",
       "arg": "parser"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "testfile",
     "returns": "TestResults"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "run_docstring_examples",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "f"
      },
      {
       "annotation": "dict[str, Any]",
       "arg": "globs"
      },
      {
       "annotation": "bool",
       "arg": "verbose"
      },
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(int | None)",
       "arg": "compileflags"
      },
      {
       "annotation": "int",
       "arg": "optionflags"
      }
     ],
     "kwonlyargs": [],
     "name": "run_docstring_examples",
     "returns": "None"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "set_unittest_reportflags",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "set_unittest_reportflags",
     "returns": "int"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "DocTestSuite",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(None | str | types.ModuleType)",
       "arg": "module"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "extraglobs"
      },
      {
       "annotation": "(DocTestFinder | None)",
       "arg": "test_finder"
      }
     ],
     "kwonlyargs": [],
     "name": "DocTestSuite",
     "returns": "_DocTestSuite"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "DocFileTest",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      },
      {
       "annotation": "bool",
       "arg": "module_relative"
      },
      {
       "annotation": "(None | str | types.ModuleType)",
       "arg": "package"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      },
      {
       "annotation": "DocTestParser",
       "arg": "parser"
      },
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "DocFileTest",
     "returns": "DocFileCase"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "DocFileSuite",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "DocFileSuite",
     "returns": "_DocTestSuite"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "script_from_examples",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "script_from_examples",
     "returns": "str"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "testsource",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(None | str | types.ModuleType)",
       "arg": "module"
      },
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "testsource",
     "returns": "str"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "debug_src",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "src"
      },
      {
       "annotation": "bool",
       "arg": "pm"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      }
     ],
     "kwonlyargs": [],
     "name": "debug_src",
     "returns": "None"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "debug_script",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "src"
      },
      {
       "annotation": "bool",
       "arg": "pm"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "globs"
      }
     ],
     "kwonlyargs": [],
     "name": "debug_script",
     "returns": "None"
    },
    "module": "doctest"
   }
  ]
 },
 {
  "name": "create",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "env_dir"
      },
      {
       "annotation": "bool",
       "arg": "system_site_packages"
      },
      {
       "annotation": "bool",
       "arg": "clear"
      },
      {
       "annotation": "bool",
       "arg": "symlinks"
      },
      {
       "annotation": "bool",
       "arg": "with_pip"
      },
      {
       "annotation": "(str | None)",
       "arg": "prompt"
      },
      {
       "annotation": "bool",
       "arg": "upgrade_deps"
      }
     ],
     "kwonlyargs": [],
     "name": "create",
     "returns": "None"
    },
    "module": "venv"
   }
  ]
 },
 {
  "name": "message_from_string",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "s"
      },
      {
       "annotation": "Callable[[], Message]",
       "arg": "_class"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Policy",
       "arg": "policy"
      }
     ],
     "name": "message_from_string",
     "returns": "Message"
    },
    "module": "email"
   }
  ]
 },
 {
  "name": "message_from_bytes",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "s"
      },
      {
       "annotation": "Callable[[], Message]",
       "arg": "_class"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Policy",
       "arg": "policy"
      }
     ],
     "name": "message_from_bytes",
     "returns": "Message"
    },
    "module": "email"
   }
  ]
 },
 {
  "name": "message_from_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[str]",
       "arg": "fp"
      },
      {
       "annotation": "Callable[[], Message]",
       "arg": "_class"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Policy",
       "arg": "policy"
      }
     ],
     "name": "message_from_file",
     "returns": "Message"
    },
    "module": "email"
   }
  ]
 },
 {
  "name": "message_from_binary_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[bytes]",
       "arg": "fp"
      },
      {
       "annotation": "Callable[[], Message]",
       "arg": "_class"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "Policy",
       "arg": "policy"
      }
     ],
     "name": "message_from_binary_file",
     "returns": "Message"
    },
    "module": "email"
   }
  ]
 },
 {
  "name": "showwarning",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Warning | str)",
       "arg": "message"
      },
      {
       "annotation": "type[Warning]",
       "arg": "category"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "int",
       "arg": "lineno"
      },
      {
       "annotation": "(TextIO | None)",
       "arg": "file"
      },
      {
       "annotation": "(str | None)",
       "arg": "line"
      }
     ],
     "kwonlyargs": [],
     "name": "showwarning",
     "returns": "None"
    },
    "module": "warnings"
   }
  ]
 },
 {
  "name": "formatwarning",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Warning | str)",
       "arg": "message"
      },
      {
       "annotation": "type[Warning]",
       "arg": "category"
      },
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "int",
       "arg": "lineno"
      },
      {
       "annotation": "(str | None)",
       "arg": "line"
      }
     ],
     "kwonlyargs": [],
     "name": "formatwarning",
     "returns": "str"
    },
    "module": "warnings"
   }
  ]
 },
 {
  "name": "filterwarnings",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_ActionKind",
       "arg": "action"
      },
      {
       "annotation": "str",
       "arg": "message"
      },
      {
       "annotation": "type[Warning]",
       "arg": "category"
      },
      {
       "annotation": "str",
       "arg": "module"
      },
      {
       "annotation": "int",
       "arg": "lineno"
      },
      {
       "annotation": "bool",
       "arg": "append"
      }
     ],
     "kwonlyargs": [],
     "name": "filterwarnings",
     "returns": "None"
    },
    "module": "warnings"
   }
  ]
 },
 {
  "name": "simplefilter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_ActionKind",
       "arg": "action"
      },
      {
       "annotation": "type[Warning]",
       "arg": "category"
      },
      {
       "annotation": "int",
       "arg": "lineno"
      },
      {
       "annotation": "bool",
       "arg": "append"
      }
     ],
     "kwonlyargs": [],
     "name": "simplefilter",
     "returns": "None"
    },
    "module": "warnings"
   }
  ]
 },
 {
  "name": "resetwarnings",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "resetwarnings",
     "returns": "None"
    },
    "module": "warnings"
   }
  ]
 },
 {
  "name": "normalize_encoding",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | bytes)",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "normalize_encoding",
     "returns": "str"
    },
    "module": "encodings"
   }
  ]
 },
 {
  "name": "search_function",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      }
     ],
     "kwonlyargs": [],
     "name": "search_function",
     "returns": "(CodecInfo | None)"
    },
    "module": "encodings"
   }
  ]
 },
 {
  "name": "__getattr__",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      }
     ],
     "kwonlyargs": [],
     "name": "__getattr__",
     "returns": "Any"
    },
    "module": "encodings"
   }
  ]
 },
 {
  "name": "master_open",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "master_open",
     "returns": "tuple[int, str]"
    },
    "module": "pty"
   }
  ]
 },
 {
  "name": "slave_open",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "tty_name"
      }
     ],
     "kwonlyargs": [],
     "name": "slave_open",
     "returns": "int"
    },
    "module": "pty"
   }
  ]
 },
 {
  "name": "spawn",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | Iterable[str])",
       "arg": "argv"
      },
      {
       "annotation": "_Reader",
       "arg": "master_read"
      },
      {
       "annotation": "_Reader",
       "arg": "stdin_read"
      }
     ],
     "kwonlyargs": [],
     "name": "spawn",
     "returns": "int"
    },
    "module": "pty"
   }
  ]
 },
 {
  "name": "bootstrap",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "root"
      },
      {
       "annotation": "bool",
       "arg": "upgrade"
      },
      {
       "annotation": "bool",
       "arg": "user"
      },
      {
       "annotation": "bool",
       "arg": "altinstall"
      },
      {
       "annotation": "bool",
       "arg": "default_pip"
      },
      {
       "annotation": "int",
       "arg": "verbosity"
      }
     ],
     "name": "bootstrap",
     "returns": "None"
    },
    "module": "ensurepip"
   }
  ]
 },
 {
  "name": "getpwall",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getpwall",
     "returns": "list[struct_passwd]"
    },
    "module": "pwd"
   }
  ]
 },
 {
  "name": "getpwuid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__uid"
      }
     ],
     "kwonlyargs": [],
     "name": "getpwuid",
     "returns": "struct_passwd"
    },
    "module": "pwd"
   }
  ]
 },
 {
  "name": "getpwnam",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__name"
      }
     ],
     "kwonlyargs": [],
     "name": "getpwnam",
     "returns": "struct_passwd"
    },
    "module": "pwd"
   }
  ]
 },
 {
  "name": "unique",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_EnumerationT",
       "arg": "enumeration"
      }
     ],
     "kwonlyargs": [],
     "name": "unique",
     "returns": "_EnumerationT"
    },
    "module": "enum"
   }
  ]
 },
 {
  "name": "_get_default_invalidation_mode",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "_get_default_invalidation_mode",
     "returns": "PycInvalidationMode"
    },
    "module": "py_compile"
   }
  ]
 },
 {
  "name": "get",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "using"
      }
     ],
     "kwonlyargs": [],
     "name": "get",
     "returns": "BaseBrowser"
    },
    "module": "webbrowser"
   }
  ]
 },
 {
  "name": "open_new",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "url"
      }
     ],
     "kwonlyargs": [],
     "name": "open_new",
     "returns": "bool"
    },
    "module": "webbrowser"
   }
  ]
 },
 {
  "name": "open_new_tab",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "url"
      }
     ],
     "kwonlyargs": [],
     "name": "open_new_tab",
     "returns": "bool"
    },
    "module": "webbrowser"
   }
  ]
 },
 {
  "name": "readmodule",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "module"
      },
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "readmodule",
     "returns": "dict[str, Class]"
    },
    "module": "pyclbr"
   }
  ]
 },
 {
  "name": "readmodule_ex",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "module"
      },
      {
       "annotation": "(Sequence[str] | None)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "readmodule_ex",
     "returns": "dict[str, Class | Function | list[str]]"
    },
    "module": "pyclbr"
   }
  ]
 },
 {
  "name": "cancel_dump_traceback_later",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "cancel_dump_traceback_later",
     "returns": "None"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "dump_traceback",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "all_threads"
      }
     ],
     "kwonlyargs": [],
     "name": "dump_traceback",
     "returns": "None"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "dump_traceback_later",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "float",
       "arg": "timeout"
      },
      {
       "annotation": "bool",
       "arg": "repeat"
      },
      {
       "annotation": "FileDescriptorLike",
       "arg": "file"
      },
      {
       "annotation": "bool",
       "arg": "exit"
      }
     ],
     "kwonlyargs": [],
     "name": "dump_traceback_later",
     "returns": "None"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "is_enabled",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "is_enabled",
     "returns": "bool"
    },
    "module": "faulthandler"
   }
  ]
 },
 {
  "name": "pathdirs",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "pathdirs",
     "returns": "list[str]"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "splitdoc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "doc"
      }
     ],
     "kwonlyargs": [],
     "name": "splitdoc",
     "returns": "tuple[AnyStr, AnyStr]"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "classname",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      },
      {
       "annotation": "str",
       "arg": "modname"
      }
     ],
     "kwonlyargs": [],
     "name": "classname",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "isdata",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "object",
       "arg": "object"
      }
     ],
     "kwonlyargs": [],
     "name": "isdata",
     "returns": "bool"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "cram",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "int",
       "arg": "maxlen"
      }
     ],
     "kwonlyargs": [],
     "name": "cram",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "stripid",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "stripid",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "allmethods",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type",
       "arg": "cl"
      }
     ],
     "kwonlyargs": [],
     "name": "allmethods",
     "returns": "MutableMapping[str, MethodType]"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "visiblename",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "name"
      },
      {
       "annotation": "(Container[str] | None)",
       "arg": "all"
      },
      {
       "annotation": "(object | None)",
       "arg": "obj"
      }
     ],
     "kwonlyargs": [],
     "name": "visiblename",
     "returns": "bool"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "ispackage",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "ispackage",
     "returns": "bool"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "source_synopsis",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "IO[AnyStr]",
       "arg": "file"
      }
     ],
     "kwonlyargs": [],
     "name": "source_synopsis",
     "returns": "(AnyStr | None)"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "synopsis",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "filename"
      },
      {
       "annotation": "MutableMapping[str, tuple[int, str]]",
       "arg": "cache"
      }
     ],
     "kwonlyargs": [],
     "name": "synopsis",
     "returns": "(str | None)"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "importfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "importfile",
     "returns": "ModuleType"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "safeimport",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      },
      {
       "annotation": "MutableMapping[str, ModuleType]",
       "arg": "cache"
      }
     ],
     "kwonlyargs": [],
     "name": "safeimport",
     "returns": "ModuleType"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "pager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "pager",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "getpager",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getpager",
     "returns": "Callable[[str], None]"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "plain",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "plain",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "pipepager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "str",
       "arg": "cmd"
      }
     ],
     "kwonlyargs": [],
     "name": "pipepager",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "tempfilepager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      },
      {
       "annotation": "str",
       "arg": "cmd"
      }
     ],
     "kwonlyargs": [],
     "name": "tempfilepager",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "ttypager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "ttypager",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "plainpager",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "text"
      }
     ],
     "kwonlyargs": [],
     "name": "plainpager",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "describe",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "thing"
      }
     ],
     "kwonlyargs": [],
     "name": "describe",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "locate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "path"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      }
     ],
     "kwonlyargs": [],
     "name": "locate",
     "returns": "object"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "resolve",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | object)",
       "arg": "thing"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      }
     ],
     "kwonlyargs": [],
     "name": "resolve",
     "returns": "(tuple[object, str] | None)"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "render_doc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | object)",
       "arg": "thing"
      },
      {
       "annotation": "str",
       "arg": "title"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      },
      {
       "annotation": "(Doc | None)",
       "arg": "renderer"
      }
     ],
     "kwonlyargs": [],
     "name": "render_doc",
     "returns": "str"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "doc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | object)",
       "arg": "thing"
      },
      {
       "annotation": "str",
       "arg": "title"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      },
      {
       "annotation": "(SupportsWrite[str] | None)",
       "arg": "output"
      }
     ],
     "kwonlyargs": [],
     "name": "doc",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "writedoc",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | object)",
       "arg": "thing"
      },
      {
       "annotation": "bool",
       "arg": "forceload"
      }
     ],
     "kwonlyargs": [],
     "name": "writedoc",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "writedocs",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "dir"
      },
      {
       "annotation": "str",
       "arg": "pkgpath"
      },
      {
       "annotation": "(Any | None)",
       "arg": "done"
      }
     ],
     "kwonlyargs": [],
     "name": "writedocs",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "apropos",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "key"
      }
     ],
     "kwonlyargs": [],
     "name": "apropos",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "ispath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "x"
      }
     ],
     "kwonlyargs": [],
     "name": "ispath",
     "returns": "bool"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "cli",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "cli",
     "returns": "None"
    },
    "module": "pydoc"
   }
  ]
 },
 {
  "name": "fcntl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__cmd"
      },
      {
       "annotation": "int",
       "arg": "__arg"
      }
     ],
     "kwonlyargs": [],
     "name": "fcntl",
     "returns": "int"
    },
    "module": "fcntl"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__cmd"
      },
      {
       "annotation": "bytes",
       "arg": "__arg"
      }
     ],
     "kwonlyargs": [],
     "name": "fcntl",
     "returns": "bytes"
    },
    "module": "fcntl"
   }
  ]
 },
 {
  "name": "ioctl",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__request"
      },
      {
       "annotation": "int",
       "arg": "__arg"
      },
      {
       "annotation": "bool",
       "arg": "__mutate_flag"
      }
     ],
     "kwonlyargs": [],
     "name": "ioctl",
     "returns": "int"
    },
    "module": "fcntl"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__request"
      },
      {
       "annotation": "WriteableBuffer",
       "arg": "__arg"
      },
      {
       "annotation": "Literal[True]",
       "arg": "__mutate_flag"
      }
     ],
     "kwonlyargs": [],
     "name": "ioctl",
     "returns": "int"
    },
    "module": "fcntl"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__request"
      },
      {
       "annotation": "WriteableBuffer",
       "arg": "__arg"
      },
      {
       "annotation": "Literal[False]",
       "arg": "__mutate_flag"
      }
     ],
     "kwonlyargs": [],
     "name": "ioctl",
     "returns": "bytes"
    },
    "module": "fcntl"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__request"
      },
      {
       "annotation": "ReadOnlyBuffer",
       "arg": "__arg"
      },
      {
       "annotation": "bool",
       "arg": "__mutate_flag"
      }
     ],
     "kwonlyargs": [],
     "name": "ioctl",
     "returns": "bytes"
    },
    "module": "fcntl"
   }
  ]
 },
 {
  "name": "flock",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FileDescriptorLike",
       "arg": "__fd"
      },
      {
       "annotation": "int",
       "arg": "__operation"
      }
     ],
     "kwonlyargs": [],
     "name": "flock",
     "returns": "None"
    },
    "module": "fcntl"
   }
  ]
 },
 {
  "name": "cmp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "f1"
      },
      {
       "annotation": "StrOrBytesPath",
       "arg": "f2"
      },
      {
       "annotation": "(int | bool)",
       "arg": "shallow"
      }
     ],
     "kwonlyargs": [],
     "name": "cmp",
     "returns": "bool"
    },
    "module": "filecmp"
   }
  ]
 },
 {
  "name": "cmpfiles",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | PathLike[AnyStr])",
       "arg": "a"
      },
      {
       "annotation": "(AnyStr | PathLike[AnyStr])",
       "arg": "b"
      },
      {
       "annotation": "Iterable[AnyStr | PathLike[AnyStr]]",
       "arg": "common"
      },
      {
       "annotation": "(int | bool)",
       "arg": "shallow"
      }
     ],
     "kwonlyargs": [],
     "name": "cmpfiles",
     "returns": "tuple[list[AnyStr], list[AnyStr], list[AnyStr]]"
    },
    "module": "filecmp"
   }
  ]
 },
 {
  "name": "clear_cache",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clear_cache",
     "returns": "None"
    },
    "module": "filecmp"
   }
  ]
 },
 {
  "name": "ErrorString",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__code"
      }
     ],
     "kwonlyargs": [],
     "name": "ErrorString",
     "returns": "str"
    },
    "module": "pyexpat"
   }
  ]
 },
 {
  "name": "ParserCreate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "namespace_separator"
      },
      {
       "annotation": "(dict[str, Any] | None)",
       "arg": "intern"
      }
     ],
     "kwonlyargs": [],
     "name": "ParserCreate",
     "returns": "XMLParserType"
    },
    "module": "pyexpat"
   }
  ]
 },
 {
  "name": "nextfile",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "nextfile",
     "returns": "None"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "filename",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "filename",
     "returns": "str"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "lineno",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "lineno",
     "returns": "int"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "filelineno",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "filelineno",
     "returns": "int"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "fileno",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "fileno",
     "returns": "int"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "isfirstline",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "isfirstline",
     "returns": "bool"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "isstdin",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "isstdin",
     "returns": "bool"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "hook_compressed",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "StrOrBytesPath",
       "arg": "filename"
      },
      {
       "annotation": "str",
       "arg": "mode"
      }
     ],
     "kwonlyargs": [
      {
       "annotation": "(str | None)",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "name": "hook_compressed",
     "returns": "IO[Any]"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "hook_encoded",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "encoding"
      },
      {
       "annotation": "(str | None)",
       "arg": "errors"
      }
     ],
     "kwonlyargs": [],
     "name": "hook_encoded",
     "returns": "Callable[[StrOrBytesPath, str], IO[Any]]"
    },
    "module": "fileinput"
   }
  ]
 },
 {
  "name": "foo",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__i"
      },
      {
       "annotation": "int",
       "arg": "__j"
      }
     ],
     "kwonlyargs": [],
     "name": "foo",
     "returns": "Any"
    },
    "module": "xxlimited"
   }
  ]
 },
 {
  "name": "fnmatch",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "name"
      },
      {
       "annotation": "AnyStr",
       "arg": "pat"
      }
     ],
     "kwonlyargs": [],
     "name": "fnmatch",
     "returns": "bool"
    },
    "module": "fnmatch"
   }
  ]
 },
 {
  "name": "fnmatchcase",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "name"
      },
      {
       "annotation": "AnyStr",
       "arg": "pat"
      }
     ],
     "kwonlyargs": [],
     "name": "fnmatchcase",
     "returns": "bool"
    },
    "module": "fnmatch"
   }
  ]
 },
 {
  "name": "filter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Iterable[AnyStr]",
       "arg": "names"
      },
      {
       "annotation": "AnyStr",
       "arg": "pat"
      }
     ],
     "kwonlyargs": [],
     "name": "filter",
     "returns": "list[AnyStr]"
    },
    "module": "fnmatch"
   }
  ]
 },
 {
  "name": "translate",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "pat"
      }
     ],
     "kwonlyargs": [],
     "name": "translate",
     "returns": "str"
    },
    "module": "fnmatch"
   }
  ]
 },
 {
  "name": "encodestring",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "s"
      },
      {
       "annotation": "int",
       "arg": "quotetabs"
      },
      {
       "annotation": "int",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "encodestring",
     "returns": "bytes"
    },
    "module": "quopri"
   }
  ]
 },
 {
  "name": "decodestring",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "s"
      },
      {
       "annotation": "int",
       "arg": "header"
      }
     ],
     "kwonlyargs": [],
     "name": "decodestring",
     "returns": "bytes"
    },
    "module": "quopri"
   }
  ]
 },
 {
  "name": "parse150",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      }
     ],
     "kwonlyargs": [],
     "name": "parse150",
     "returns": "(int | None)"
    },
    "module": "ftplib"
   }
  ]
 },
 {
  "name": "parse227",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      }
     ],
     "kwonlyargs": [],
     "name": "parse227",
     "returns": "tuple[str, int]"
    },
    "module": "ftplib"
   }
  ]
 },
 {
  "name": "parse229",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      },
      {
       "annotation": "Any",
       "arg": "peer"
      }
     ],
     "kwonlyargs": [],
     "name": "parse229",
     "returns": "tuple[str, int]"
    },
    "module": "ftplib"
   }
  ]
 },
 {
  "name": "parse257",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "resp"
      }
     ],
     "kwonlyargs": [],
     "name": "parse257",
     "returns": "str"
    },
    "module": "ftplib"
   }
  ]
 },
 {
  "name": "ftpcp",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "FTP",
       "arg": "source"
      },
      {
       "annotation": "str",
       "arg": "sourcename"
      },
      {
       "annotation": "FTP",
       "arg": "target"
      },
      {
       "annotation": "str",
       "arg": "targetname"
      },
      {
       "annotation": "Literal['A', 'I']",
       "arg": "type"
      }
     ],
     "kwonlyargs": [],
     "name": "ftpcp",
     "returns": "None"
    },
    "module": "ftplib"
   }
  ]
 },
 {
  "name": "search",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "search",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "search",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "fullmatch",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "fullmatch",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "fullmatch",
     "returns": "(Match[AnyStr] | None)"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "findall",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "findall",
     "returns": "list[Any]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "findall",
     "returns": "list[Any]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "finditer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "finditer",
     "returns": "Iterator[Match[AnyStr]]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "finditer",
     "returns": "Iterator[Match[AnyStr]]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "sub",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "sub",
     "returns": "AnyStr"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "Callable[[Match[AnyStr]], AnyStr]",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "sub",
     "returns": "AnyStr"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "sub",
     "returns": "AnyStr"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "Callable[[Match[AnyStr]], AnyStr]",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "sub",
     "returns": "AnyStr"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "subn",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "subn",
     "returns": "tuple[AnyStr, int]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "AnyStr",
       "arg": "pattern"
      },
      {
       "annotation": "Callable[[Match[AnyStr]], AnyStr]",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "subn",
     "returns": "tuple[AnyStr, int]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "AnyStr",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "subn",
     "returns": "tuple[AnyStr, int]"
    },
    "module": "re"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Pattern[AnyStr]",
       "arg": "pattern"
      },
      {
       "annotation": "Callable[[Match[AnyStr]], AnyStr]",
       "arg": "repl"
      },
      {
       "annotation": "AnyStr",
       "arg": "string"
      },
      {
       "annotation": "int",
       "arg": "count"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "subn",
     "returns": "tuple[AnyStr, int]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "purge",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "purge",
     "returns": "None"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "template",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(AnyStr | Pattern[AnyStr])",
       "arg": "pattern"
      },
      {
       "annotation": "_FlagsType",
       "arg": "flags"
      }
     ],
     "kwonlyargs": [],
     "name": "template",
     "returns": "Pattern[AnyStr]"
    },
    "module": "re"
   }
  ]
 },
 {
  "name": "create_archive",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Path",
       "arg": "source"
      },
      {
       "annotation": "(_Path | None)",
       "arg": "target"
      },
      {
       "annotation": "(str | None)",
       "arg": "interpreter"
      },
      {
       "annotation": "(str | None)",
       "arg": "main"
      },
      {
       "annotation": "(Callable[[Path], bool] | None)",
       "arg": "filter"
      },
      {
       "annotation": "bool",
       "arg": "compressed"
      }
     ],
     "kwonlyargs": [],
     "name": "create_archive",
     "returns": "None"
    },
    "module": "zipapp"
   }
  ]
 },
 {
  "name": "get_interpreter",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_Path",
       "arg": "archive"
      }
     ],
     "kwonlyargs": [],
     "name": "get_interpreter",
     "returns": "str"
    },
    "module": "zipapp"
   }
  ]
 },
 {
  "name": "reduce",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[_T, _S], _T]",
       "arg": "function"
      },
      {
       "annotation": "Iterable[_S]",
       "arg": "sequence"
      },
      {
       "annotation": "_T",
       "arg": "initial"
      }
     ],
     "kwonlyargs": [],
     "name": "reduce",
     "returns": "_T"
    },
    "module": "functools"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[_T, _T], _T]",
       "arg": "function"
      },
      {
       "annotation": "Iterable[_T]",
       "arg": "sequence"
      }
     ],
     "kwonlyargs": [],
     "name": "reduce",
     "returns": "_T"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "lru_cache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "maxsize"
      },
      {
       "annotation": "bool",
       "arg": "typed"
      }
     ],
     "kwonlyargs": [],
     "name": "lru_cache",
     "returns": "Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]"
    },
    "module": "functools"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., _T]",
       "arg": "maxsize"
      },
      {
       "annotation": "bool",
       "arg": "typed"
      }
     ],
     "kwonlyargs": [],
     "name": "lru_cache",
     "returns": "_lru_cache_wrapper[_T]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "update_wrapper",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_T",
       "arg": "wrapper"
      },
      {
       "annotation": "_AnyCallable",
       "arg": "wrapped"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "assigned"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "updated"
      }
     ],
     "kwonlyargs": [],
     "name": "update_wrapper",
     "returns": "_T"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "wraps",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "_AnyCallable",
       "arg": "wrapped"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "assigned"
      },
      {
       "annotation": "Sequence[str]",
       "arg": "updated"
      }
     ],
     "kwonlyargs": [],
     "name": "wraps",
     "returns": "Callable[[_T], _T]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "total_ordering",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "type[_T]",
       "arg": "cls"
      }
     ],
     "kwonlyargs": [],
     "name": "total_ordering",
     "returns": "type[_T]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "cmp_to_key",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[[_T, _T], int]",
       "arg": "mycmp"
      }
     ],
     "kwonlyargs": [],
     "name": "cmp_to_key",
     "returns": "Callable[[_T], SupportsAllComparisons]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "singledispatch",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., _T]",
       "arg": "func"
      }
     ],
     "kwonlyargs": [],
     "name": "singledispatch",
     "returns": "_SingleDispatchCallable[_T]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "cache",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Callable[..., _T]",
       "arg": "__user_function"
      }
     ],
     "kwonlyargs": [],
     "name": "cache",
     "returns": "_lru_cache_wrapper[_T]"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "_make_key",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "tuple[Hashable, ...]",
       "arg": "args"
      },
      {
       "annotation": "SupportsItems[Any, Any]",
       "arg": "kwds"
      },
      {
       "annotation": "bool",
       "arg": "typed"
      },
      {
       "annotation": "tuple[object, ...]",
       "arg": "kwd_mark"
      },
      {
       "annotation": "set[type]",
       "arg": "fasttypes"
      },
      {
       "annotation": "type",
       "arg": "tuple"
      },
      {
       "annotation": "Any",
       "arg": "type"
      },
      {
       "annotation": "Callable[[Sized], int]",
       "arg": "len"
      }
     ],
     "kwonlyargs": [],
     "name": "_make_key",
     "returns": "Hashable"
    },
    "module": "functools"
   }
  ]
 },
 {
  "name": "parse_and_bind",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "parse_and_bind",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "read_init_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "__filename"
      }
     ],
     "kwonlyargs": [],
     "name": "read_init_file",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_line_buffer",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_line_buffer",
     "returns": "str"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "insert_text",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "insert_text",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "redisplay",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "redisplay",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "read_history_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "__filename"
      }
     ],
     "kwonlyargs": [],
     "name": "read_history_file",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "write_history_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "__filename"
      }
     ],
     "kwonlyargs": [],
     "name": "write_history_file",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "append_history_file",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__nelements"
      },
      {
       "annotation": "(StrOrBytesPath | None)",
       "arg": "__filename"
      }
     ],
     "kwonlyargs": [],
     "name": "append_history_file",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_history_length",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_history_length",
     "returns": "int"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_history_length",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__length"
      }
     ],
     "kwonlyargs": [],
     "name": "set_history_length",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "clear_history",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "clear_history",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_current_history_length",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_current_history_length",
     "returns": "int"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_history_item",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__index"
      }
     ],
     "kwonlyargs": [],
     "name": "get_history_item",
     "returns": "str"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "remove_history_item",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pos"
      }
     ],
     "kwonlyargs": [],
     "name": "remove_history_item",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "replace_history_item",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__pos"
      },
      {
       "annotation": "str",
       "arg": "__line"
      }
     ],
     "kwonlyargs": [],
     "name": "replace_history_item",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "add_history",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "add_history",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_auto_history",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bool",
       "arg": "__enabled"
      }
     ],
     "kwonlyargs": [],
     "name": "set_auto_history",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_startup_hook",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Callable[[], object] | None)",
       "arg": "__function"
      }
     ],
     "kwonlyargs": [],
     "name": "set_startup_hook",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_pre_input_hook",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Callable[[], object] | None)",
       "arg": "__function"
      }
     ],
     "kwonlyargs": [],
     "name": "set_pre_input_hook",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_completer",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_Completer | None)",
       "arg": "__function"
      }
     ],
     "kwonlyargs": [],
     "name": "set_completer",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_completer",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_completer",
     "returns": "(_Completer | None)"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_completion_type",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_completion_type",
     "returns": "int"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_begidx",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_begidx",
     "returns": "int"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_endidx",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_endidx",
     "returns": "int"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_completer_delims",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "__string"
      }
     ],
     "kwonlyargs": [],
     "name": "set_completer_delims",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "get_completer_delims",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_completer_delims",
     "returns": "str"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "set_completion_display_matches_hook",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(_CompDisp | None)",
       "arg": "__function"
      }
     ],
     "kwonlyargs": [],
     "name": "set_completion_display_matches_hook",
     "returns": "None"
    },
    "module": "readline"
   }
  ]
 },
 {
  "name": "is_zipfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | _SupportsReadSeekTell)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "is_zipfile",
     "returns": "bool"
    },
    "module": "zipfile"
   }
  ]
 },
 {
  "name": "collect",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "generation"
      }
     ],
     "kwonlyargs": [],
     "name": "collect",
     "returns": "int"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_count",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_count",
     "returns": "tuple[int, int, int]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_debug",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_debug",
     "returns": "int"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_objects",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(int | None)",
       "arg": "generation"
      }
     ],
     "kwonlyargs": [],
     "name": "get_objects",
     "returns": "list[Any]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "freeze",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "freeze",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "unfreeze",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "unfreeze",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_freeze_count",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_freeze_count",
     "returns": "int"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_referents",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_referents",
     "returns": "list[Any]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_referrers",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_referrers",
     "returns": "list[Any]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_stats",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_stats",
     "returns": "list[dict[str, Any]]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "get_threshold",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "get_threshold",
     "returns": "tuple[int, int, int]"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "is_tracked",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "is_tracked",
     "returns": "bool"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "is_finalized",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Any",
       "arg": "__obj"
      }
     ],
     "kwonlyargs": [],
     "name": "is_finalized",
     "returns": "bool"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "isenabled",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "isenabled",
     "returns": "bool"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "set_debug",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__flags"
      }
     ],
     "kwonlyargs": [],
     "name": "set_debug",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "set_threshold",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "threshold0"
      },
      {
       "annotation": "int",
       "arg": "threshold1"
      },
      {
       "annotation": "int",
       "arg": "threshold2"
      }
     ],
     "kwonlyargs": [],
     "name": "set_threshold",
     "returns": "None"
    },
    "module": "gc"
   }
  ]
 },
 {
  "name": "recursive_repr",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "str",
       "arg": "fillvalue"
      }
     ],
     "kwonlyargs": [],
     "name": "recursive_repr",
     "returns": "Callable[[_ReprFunc], _ReprFunc]"
    },
    "module": "reprlib"
   }
  ]
 },
 {
  "name": "commonprefix",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[StrPath]",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "commonprefix",
     "returns": "str"
    },
    "module": "genericpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[BytesPath]",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "commonprefix",
     "returns": "(bytes | Literal[''])"
    },
    "module": "genericpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[list[SupportsRichComparisonT]]",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "commonprefix",
     "returns": "Sequence[SupportsRichComparisonT]"
    },
    "module": "genericpath"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "Sequence[tuple[SupportsRichComparisonT, ...]]",
       "arg": "m"
      }
     ],
     "kwonlyargs": [],
     "name": "commonprefix",
     "returns": "Sequence[SupportsRichComparisonT]"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "exists",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "exists",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "getsize",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getsize",
     "returns": "int"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "isfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "path"
      }
     ],
     "kwonlyargs": [],
     "name": "isfile",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "isdir",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "s"
      }
     ],
     "kwonlyargs": [],
     "name": "isdir",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "getatime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getatime",
     "returns": "float"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "getmtime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getmtime",
     "returns": "float"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "getctime",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "filename"
      }
     ],
     "kwonlyargs": [],
     "name": "getctime",
     "returns": "float"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "samefile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "f1"
      },
      {
       "annotation": "(StrOrBytesPath | int)",
       "arg": "f2"
      }
     ],
     "kwonlyargs": [],
     "name": "samefile",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "sameopenfile",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "fp1"
      },
      {
       "annotation": "int",
       "arg": "fp2"
      }
     ],
     "kwonlyargs": [],
     "name": "sameopenfile",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "samestat",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "os.stat_result",
       "arg": "s1"
      },
      {
       "annotation": "os.stat_result",
       "arg": "s2"
      }
     ],
     "kwonlyargs": [],
     "name": "samestat",
     "returns": "bool"
    },
    "module": "genericpath"
   }
  ]
 },
 {
  "name": "getpagesize",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "getpagesize",
     "returns": "int"
    },
    "module": "resource"
   }
  ]
 },
 {
  "name": "getrlimit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__resource"
      }
     ],
     "kwonlyargs": [],
     "name": "getrlimit",
     "returns": "tuple[int, int]"
    },
    "module": "resource"
   }
  ]
 },
 {
  "name": "getrusage",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__who"
      }
     ],
     "kwonlyargs": [],
     "name": "getrusage",
     "returns": "struct_rusage"
    },
    "module": "resource"
   }
  ]
 },
 {
  "name": "setrlimit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "__resource"
      },
      {
       "annotation": "tuple[int, int]",
       "arg": "__limits"
      }
     ],
     "kwonlyargs": [],
     "name": "setrlimit",
     "returns": "None"
    },
    "module": "resource"
   }
  ]
 },
 {
  "name": "prlimit",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "int",
       "arg": "resource"
      },
      {
       "annotation": "tuple[int, int]",
       "arg": "limits"
      }
     ],
     "kwonlyargs": [],
     "name": "prlimit",
     "returns": "tuple[int, int]"
    },
    "module": "resource"
   },
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "pid"
      },
      {
       "annotation": "int",
       "arg": "resource"
      }
     ],
     "kwonlyargs": [],
     "name": "prlimit",
     "returns": "tuple[int, int]"
    },
    "module": "resource"
   }
  ]
 },
 {
  "name": "adler32",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "bytes",
       "arg": "__data"
      },
      {
       "annotation": "int",
       "arg": "__value"
      }
     ],
     "kwonlyargs": [],
     "name": "adler32",
     "returns": "int"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "compressobj",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "level"
      },
      {
       "annotation": "int",
       "arg": "method"
      },
      {
       "annotation": "int",
       "arg": "wbits"
      },
      {
       "annotation": "int",
       "arg": "memLevel"
      },
      {
       "annotation": "int",
       "arg": "strategy"
      },
      {
       "annotation": "(bytes | None)",
       "arg": "zdict"
      }
     ],
     "kwonlyargs": [],
     "name": "compressobj",
     "returns": "_Compress"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "decompressobj",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "int",
       "arg": "wbits"
      },
      {
       "annotation": "bytes",
       "arg": "zdict"
      }
     ],
     "kwonlyargs": [],
     "name": "decompressobj",
     "returns": "_Decompress"
    },
    "module": "zlib"
   }
  ]
 },
 {
  "name": "getopt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[str]",
       "arg": "args"
      },
      {
       "annotation": "str",
       "arg": "shortopts"
      },
      {
       "annotation": "list[str]",
       "arg": "longopts"
      }
     ],
     "kwonlyargs": [],
     "name": "getopt",
     "returns": "tuple[list[tuple[str, str]], list[str]]"
    },
    "module": "getopt"
   }
  ]
 },
 {
  "name": "gnu_getopt",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "list[str]",
       "arg": "args"
      },
      {
       "annotation": "str",
       "arg": "shortopts"
      },
      {
       "annotation": "list[str]",
       "arg": "longopts"
      }
     ],
     "kwonlyargs": [],
     "name": "gnu_getopt",
     "returns": "tuple[list[tuple[str, str]], list[str]]"
    },
    "module": "getopt"
   }
  ]
 },
 {
  "name": "reset_tzpath",
  "typeInfos": [
   {
    "function": {
     "args": [
      {
       "annotation": "(Sequence[StrPath] | None)",
       "arg": "to"
      }
     ],
     "kwonlyargs": [],
     "name": "reset_tzpath",
     "returns": "None"
    },
    "module": "zoneinfo"
   }
  ]
 },
 {
  "name": "available_timezones",
  "typeInfos": [
   {
    "function": {
     "args": [],
     "kwonlyargs": [],
     "name": "available_timezones",
     "returns": "set[str]"
    },
    "module": "zoneinfo"
   }
  ]
 }
]
