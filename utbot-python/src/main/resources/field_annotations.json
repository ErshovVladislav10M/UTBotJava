[
 {
  "definitions": [
   {
    "annotation": "Final[int]",
    "className": "gettext.GNUTranslations",
    "name": "LE_MAGIC"
   }
  ],
  "name": "LE_MAGIC"
 },
 {
  "definitions": [
   {
    "annotation": "Final[int]",
    "className": "gettext.GNUTranslations",
    "name": "BE_MAGIC"
   }
  ],
  "name": "BE_MAGIC"
 },
 {
  "definitions": [
   {
    "annotation": "Final[str]",
    "className": "gettext.GNUTranslations",
    "name": "CONTEXT"
   }
  ],
  "name": "CONTEXT"
 },
 {
  "definitions": [
   {
    "annotation": "Sequence[int]",
    "className": "gettext.GNUTranslations",
    "name": "VERSIONS"
   }
  ],
  "name": "VERSIONS"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "sched.Event",
    "name": "time"
   },
   {
    "annotation": "int",
    "className": "ssl.SSLSession",
    "name": "time"
   },
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "time"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "time",
    "returns": "_Int"
   }
  ],
  "name": "time"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "sched.Event",
    "name": "priority"
   }
  ],
  "name": "priority"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "sched.Event",
    "name": "sequence"
   }
  ],
  "name": "sequence"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[..., Any]",
    "className": "sched.Event",
    "name": "action"
   },
   {
    "annotation": "str",
    "className": "optparse.Option",
    "name": "action"
   }
  ],
  "name": "action"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[Any, ...]",
    "className": "sched.Event",
    "name": "argument"
   }
  ],
  "name": "argument"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "sched.Event",
    "name": "kwargs"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.BoundArguments",
    "kwonlyargs": [],
    "name": "kwargs",
    "returns": "dict[str, Any]"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.ParamSpec",
    "kwonlyargs": [],
    "name": "kwargs",
    "returns": "ParamSpecKwargs"
   }
  ],
  "name": "kwargs"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[[], float]",
    "className": "sched.scheduler",
    "name": "timefunc"
   }
  ],
  "name": "timefunc"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[[float], object]",
    "className": "sched.scheduler",
    "name": "delayfunc"
   }
  ],
  "name": "delayfunc"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "sched.scheduler",
    "kwonlyargs": [],
    "name": "queue",
    "returns": "list[Event]"
   },
   {
    "annotation": "Any",
    "className": "queue.Queue",
    "name": "queue"
   },
   {
    "annotation": "list[_T]",
    "className": "queue.PriorityQueue",
    "name": "queue"
   },
   {
    "annotation": "list[_T]",
    "className": "queue.LifoQueue",
    "name": "queue"
   }
  ],
  "name": "queue"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[tuple[str, ...]]",
    "className": "_ast.AST",
    "name": "_attributes"
   }
  ],
  "name": "_attributes"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[tuple[str, ...]]",
    "className": "_ast.AST",
    "name": "_fields"
   },
   {
    "annotation": "tuple[str, ...]",
    "className": "typing.NamedTuple",
    "name": "_fields"
   }
  ],
  "name": "_fields"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_ast.AST",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "shlex.shlex",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "inspect.Traceback",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "inspect.FrameInfo",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "sre_constants.error",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "logging.LogRecord",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "builtins.SyntaxError",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "netrc.NetrcParseError",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "_markupbase.ParserBase",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "configparser.DuplicateSectionError",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "configparser.DuplicateOptionError",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "configparser.MissingSectionHeaderError",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "pdb.Pdb",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "traceback.TracebackException",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "traceback.FrameSummary",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "tracemalloc.Filter",
    "name": "lineno"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Frame",
    "kwonlyargs": [],
    "name": "lineno",
    "returns": "int"
   },
   {
    "annotation": "int",
    "className": "doctest.Example",
    "name": "lineno"
   },
   {
    "annotation": "(int | None)",
    "className": "doctest.DocTest",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "warnings.WarningMessage",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "pyclbr.Class",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "pyclbr.Function",
    "name": "lineno"
   },
   {
    "annotation": "int",
    "className": "pyexpat.ExpatError",
    "name": "lineno"
   }
  ],
  "name": "lineno"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_ast.AST",
    "name": "col_offset"
   }
  ],
  "name": "col_offset"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "_ast.TypeIgnore",
    "name": "tag"
   }
  ],
  "name": "tag"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.FunctionType",
    "name": "argtypes"
   }
  ],
  "name": "argtypes"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.FunctionType",
    "name": "returns"
   },
   {
    "annotation": "(expr | None)",
    "className": "_ast.FunctionDef",
    "name": "returns"
   },
   {
    "annotation": "(expr | None)",
    "className": "_ast.AsyncFunctionDef",
    "name": "returns"
   }
  ],
  "name": "returns"
 },
 {
  "definitions": [
   {
    "annotation": "list[stmt]",
    "className": "_ast.Module",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.Interactive",
    "name": "body"
   },
   {
    "annotation": "expr",
    "className": "_ast.Expression",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.FunctionDef",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.AsyncFunctionDef",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.ClassDef",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.For",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.AsyncFor",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.While",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.If",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.With",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.AsyncWith",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.Try",
    "name": "body"
   },
   {
    "annotation": "expr",
    "className": "_ast.Lambda",
    "name": "body"
   },
   {
    "annotation": "expr",
    "className": "_ast.IfExp",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.ExceptHandler",
    "name": "body"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.match_case",
    "name": "body"
   }
  ],
  "name": "body"
 },
 {
  "definitions": [
   {
    "annotation": "_identifier",
    "className": "_ast.FunctionDef",
    "name": "name"
   },
   {
    "annotation": "_identifier",
    "className": "_ast.AsyncFunctionDef",
    "name": "name"
   },
   {
    "annotation": "_identifier",
    "className": "_ast.ClassDef",
    "name": "name"
   },
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.ExceptHandler",
    "name": "name"
   },
   {
    "annotation": "_identifier",
    "className": "_ast.alias",
    "name": "name"
   },
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.MatchStar",
    "name": "name"
   },
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.MatchAs",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "gzip.GzipFile",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "hmac.HMAC",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "socket.SocketIO",
    "kwonlyargs": [],
    "name": "name",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Parameter",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "inspect.Attribute",
    "name": "name"
   },
   {
    "annotation": "(StrOrBytesPath | int)",
    "className": "io.FileIO",
    "name": "name"
   },
   {
    "annotation": "Any",
    "className": "io.BytesIO",
    "name": "name"
   },
   {
    "annotation": "Any",
    "className": "io.StringIO",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "logging.Logger",
    "name": "name"
   },
   {
    "annotation": "(str | None)",
    "className": "logging.Handler",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "logging.Filter",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "logging.LoggerAdapter",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "annotation": "(str | None)",
    "className": "builtins.ImportError",
    "name": "name"
   },
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "name"
   },
   {
    "annotation": "(StrOrBytesPath | None)",
    "className": "tarfile.TarFile",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "tarfile.TarInfo",
    "name": "name"
   },
   {
    "annotation": "AnyStr",
    "className": "tempfile.TemporaryDirectory",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "codecs.CodecInfo",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "threading.Thread",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "configparser.SectionProxy",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.DirEntry",
    "kwonlyargs": [],
    "name": "name",
    "returns": "AnyStr"
   },
   {
    "annotation": "Any",
    "className": "tkinter.Image",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "contextvars.ContextVar",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "traceback.FrameSummary",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pickletools.ArgumentDescriptor",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pickletools.StackObject",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pickletools.OpcodeInfo",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "dataclasses.Field",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pkgutil.ModuleInfo",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.IO",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "doctest.DocTest",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "_sitebuiltins.Quitter",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "webbrowser.BaseBrowser",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pyclbr.Class",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "pyclbr.Function",
    "name": "name"
   },
   {
    "annotation": "str",
    "className": "zipfile.ZipExtFile",
    "name": "name"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "zipfile.Path",
    "kwonlyargs": [],
    "name": "name",
    "returns": "str"
   }
  ],
  "name": "name"
 },
 {
  "definitions": [
   {
    "annotation": "arguments",
    "className": "_ast.FunctionDef",
    "name": "args"
   },
   {
    "annotation": "arguments",
    "className": "_ast.AsyncFunctionDef",
    "name": "args"
   },
   {
    "annotation": "arguments",
    "className": "_ast.Lambda",
    "name": "args"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.Call",
    "name": "args"
   },
   {
    "annotation": "list[arg]",
    "className": "_ast.arguments",
    "name": "args"
   },
   {
    "annotation": "(tuple[int, bytes | str] | tuple[int, bytes, str])",
    "className": "smtplib.SMTPResponseException",
    "name": "args"
   },
   {
    "annotation": "tuple[int, bytes, str]",
    "className": "smtplib.SMTPSenderRefused",
    "name": "args"
   },
   {
    "annotation": "tuple[_SendErrs]",
    "className": "smtplib.SMTPRecipientsRefused",
    "name": "args"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.BoundArguments",
    "kwonlyargs": [],
    "name": "args",
    "returns": "tuple[Any, ...]"
   },
   {
    "annotation": "list[str]",
    "className": "inspect.Arguments",
    "name": "args"
   },
   {
    "annotation": "list[str]",
    "className": "inspect.ArgSpec",
    "name": "args"
   },
   {
    "annotation": "list[str]",
    "className": "inspect.FullArgSpec",
    "name": "args"
   },
   {
    "annotation": "list[str]",
    "className": "inspect.ArgInfo",
    "name": "args"
   },
   {
    "annotation": "(_ArgsType | None)",
    "className": "logging.LogRecord",
    "name": "args"
   },
   {
    "annotation": "Any",
    "className": "subprocess.CompletedProcess",
    "name": "args"
   },
   {
    "annotation": "_CMD",
    "className": "subprocess.Popen",
    "name": "args"
   },
   {
    "annotation": "tuple[Any, ...]",
    "className": "builtins.BaseException",
    "name": "args"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.ParamSpec",
    "kwonlyargs": [],
    "name": "args",
    "returns": "ParamSpecArgs"
   },
   {
    "annotation": "list[str]",
    "className": "webbrowser.BaseBrowser",
    "name": "args"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "functools.partial",
    "kwonlyargs": [],
    "name": "args",
    "returns": "tuple[Any, ...]"
   },
   {
    "annotation": "tuple[Any, ...]",
    "className": "functools.partialmethod",
    "name": "args"
   }
  ],
  "name": "args"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.FunctionDef",
    "name": "decorator_list"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.AsyncFunctionDef",
    "name": "decorator_list"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.ClassDef",
    "name": "decorator_list"
   }
  ],
  "name": "decorator_list"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.ClassDef",
    "name": "bases"
   }
  ],
  "name": "bases"
 },
 {
  "definitions": [
   {
    "annotation": "list[keyword]",
    "className": "_ast.ClassDef",
    "name": "keywords"
   },
   {
    "annotation": "list[keyword]",
    "className": "_ast.Call",
    "name": "keywords"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.ArgSpec",
    "name": "keywords"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.ArgInfo",
    "name": "keywords"
   },
   {
    "annotation": "dict[str, str | tuple[str, str]]",
    "className": "pydoc.Helper",
    "name": "keywords"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "functools.partial",
    "kwonlyargs": [],
    "name": "keywords",
    "returns": "dict[str, Any]"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "functools.partialmethod",
    "name": "keywords"
   }
  ],
  "name": "keywords"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Return",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Assign",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.AugAssign",
    "name": "value"
   },
   {
    "annotation": "(expr | None)",
    "className": "_ast.AnnAssign",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Expr",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.DictComp",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Await",
    "name": "value"
   },
   {
    "annotation": "(expr | None)",
    "className": "_ast.Yield",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.YieldFrom",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.FormattedValue",
    "name": "value"
   },
   {
    "annotation": "Any",
    "className": "_ast.Constant",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.NamedExpr",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Attribute",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Subscript",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.Starred",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.keyword",
    "name": "value"
   },
   {
    "annotation": "expr",
    "className": "_ast.MatchValue",
    "name": "value"
   },
   {
    "annotation": "Literal[True, False, None]",
    "className": "_ast.MatchSingleton",
    "name": "value"
   },
   {
    "annotation": "complex",
    "className": "ast.Num",
    "name": "value"
   },
   {
    "annotation": "str",
    "className": "ast.Str",
    "name": "value"
   },
   {
    "annotation": "bytes",
    "className": "ast.Bytes",
    "name": "value"
   },
   {
    "annotation": "Any",
    "className": "builtins.StopIteration",
    "name": "value"
   },
   {
    "annotation": "Any",
    "className": "builtins.StopAsyncIteration",
    "name": "value"
   },
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "value"
   },
   {
    "annotation": "(None | bytes | _list[Any])",
    "className": "cgi.FieldStorage",
    "name": "value"
   },
   {
    "annotation": "Any",
    "className": "ctypes.Array",
    "name": "value"
   },
   {
    "annotation": "(BaseException | None)",
    "className": "pydoc.ErrorDuringImport",
    "name": "value"
   }
  ],
  "name": "value"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.Delete",
    "name": "targets"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.Assign",
    "name": "targets"
   }
  ],
  "name": "targets"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.AugAssign",
    "name": "target"
   },
   {
    "annotation": "expr",
    "className": "_ast.AnnAssign",
    "name": "target"
   },
   {
    "annotation": "expr",
    "className": "_ast.For",
    "name": "target"
   },
   {
    "annotation": "expr",
    "className": "_ast.AsyncFor",
    "name": "target"
   },
   {
    "annotation": "expr",
    "className": "_ast.NamedExpr",
    "name": "target"
   },
   {
    "annotation": "expr",
    "className": "_ast.comprehension",
    "name": "target"
   }
  ],
  "name": "target"
 },
 {
  "definitions": [
   {
    "annotation": "operator",
    "className": "_ast.AugAssign",
    "name": "op"
   },
   {
    "annotation": "boolop",
    "className": "_ast.BoolOp",
    "name": "op"
   },
   {
    "annotation": "operator",
    "className": "_ast.BinOp",
    "name": "op"
   },
   {
    "annotation": "unaryop",
    "className": "_ast.UnaryOp",
    "name": "op"
   }
  ],
  "name": "op"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.AnnAssign",
    "name": "annotation"
   },
   {
    "annotation": "(expr | None)",
    "className": "_ast.arg",
    "name": "annotation"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Parameter",
    "kwonlyargs": [],
    "name": "annotation",
    "returns": "Any"
   }
  ],
  "name": "annotation"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_ast.AnnAssign",
    "name": "simple"
   }
  ],
  "name": "simple"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.For",
    "name": "iter"
   },
   {
    "annotation": "expr",
    "className": "_ast.AsyncFor",
    "name": "iter"
   },
   {
    "annotation": "expr",
    "className": "_ast.comprehension",
    "name": "iter"
   }
  ],
  "name": "iter"
 },
 {
  "definitions": [
   {
    "annotation": "list[stmt]",
    "className": "_ast.For",
    "name": "orelse"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.AsyncFor",
    "name": "orelse"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.While",
    "name": "orelse"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.If",
    "name": "orelse"
   },
   {
    "annotation": "list[stmt]",
    "className": "_ast.Try",
    "name": "orelse"
   },
   {
    "annotation": "expr",
    "className": "_ast.IfExp",
    "name": "orelse"
   }
  ],
  "name": "orelse"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.While",
    "name": "test"
   },
   {
    "annotation": "expr",
    "className": "_ast.If",
    "name": "test"
   },
   {
    "annotation": "expr",
    "className": "_ast.Assert",
    "name": "test"
   },
   {
    "annotation": "expr",
    "className": "_ast.IfExp",
    "name": "test"
   },
   {
    "annotation": "DocTest",
    "className": "doctest.DocTestRunner",
    "name": "test"
   },
   {
    "annotation": "DocTest",
    "className": "doctest.DocTestFailure",
    "name": "test"
   },
   {
    "annotation": "DocTest",
    "className": "doctest.UnexpectedException",
    "name": "test"
   }
  ],
  "name": "test"
 },
 {
  "definitions": [
   {
    "annotation": "list[withitem]",
    "className": "_ast.With",
    "name": "items"
   },
   {
    "annotation": "list[withitem]",
    "className": "_ast.AsyncWith",
    "name": "items"
   }
  ],
  "name": "items"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Raise",
    "name": "exc"
   },
   {
    "annotation": "(type[BaseException] | None)",
    "className": "pydoc.ErrorDuringImport",
    "name": "exc"
   }
  ],
  "name": "exc"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Raise",
    "name": "cause"
   }
  ],
  "name": "cause"
 },
 {
  "definitions": [
   {
    "annotation": "list[ExceptHandler]",
    "className": "_ast.Try",
    "name": "handlers"
   },
   {
    "annotation": "list[Handler]",
    "className": "logging.Logger",
    "name": "handlers"
   }
  ],
  "name": "handlers"
 },
 {
  "definitions": [
   {
    "annotation": "list[stmt]",
    "className": "_ast.Try",
    "name": "finalbody"
   }
  ],
  "name": "finalbody"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Assert",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "sre_constants.error",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "builtins.ImportError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "builtins.SyntaxError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "netrc.NetrcParseError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "optparse.OptParseError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "optparse.OptionError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "traceback.TracebackException",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "py_compile.PyCompileError",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "xdrlib.Error",
    "name": "msg"
   },
   {
    "annotation": "str",
    "className": "getopt.GetoptError",
    "name": "msg"
   }
  ],
  "name": "msg"
 },
 {
  "definitions": [
   {
    "annotation": "list[alias]",
    "className": "_ast.Import",
    "name": "names"
   },
   {
    "annotation": "list[alias]",
    "className": "_ast.ImportFrom",
    "name": "names"
   },
   {
    "annotation": "list[_identifier]",
    "className": "_ast.Global",
    "name": "names"
   },
   {
    "annotation": "list[_identifier]",
    "className": "_ast.Nonlocal",
    "name": "names"
   }
  ],
  "name": "names"
 },
 {
  "definitions": [
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.ImportFrom",
    "name": "module"
   },
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "module"
   },
   {
    "annotation": "str",
    "className": "pyclbr.Class",
    "name": "module"
   },
   {
    "annotation": "str",
    "className": "pyclbr.Function",
    "name": "module"
   }
  ],
  "name": "module"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_ast.ImportFrom",
    "name": "level"
   },
   {
    "annotation": "int",
    "className": "logging.Logger",
    "name": "level"
   },
   {
    "annotation": "int",
    "className": "logging.Handler",
    "name": "level"
   },
   {
    "annotation": "int",
    "className": "optparse.HelpFormatter",
    "name": "level"
   }
  ],
  "name": "level"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.BoolOp",
    "name": "values"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.Dict",
    "name": "values"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.JoinedStr",
    "name": "values"
   },
   {
    "annotation": "(Values | None)",
    "className": "optparse.OptionParser",
    "name": "values"
   }
  ],
  "name": "values"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.BinOp",
    "name": "left"
   },
   {
    "annotation": "expr",
    "className": "_ast.Compare",
    "name": "left"
   },
   {
    "annotation": "AnyStr",
    "className": "filecmp.dircmp",
    "name": "left"
   }
  ],
  "name": "left"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.BinOp",
    "name": "right"
   },
   {
    "annotation": "AnyStr",
    "className": "filecmp.dircmp",
    "name": "right"
   }
  ],
  "name": "right"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.UnaryOp",
    "name": "operand"
   }
  ],
  "name": "operand"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr | None]",
    "className": "_ast.Dict",
    "name": "keys"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.MatchMapping",
    "name": "keys"
   }
  ],
  "name": "keys"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.Set",
    "name": "elts"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.List",
    "name": "elts"
   },
   {
    "annotation": "list[expr]",
    "className": "_ast.Tuple",
    "name": "elts"
   }
  ],
  "name": "elts"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.ListComp",
    "name": "elt"
   },
   {
    "annotation": "expr",
    "className": "_ast.SetComp",
    "name": "elt"
   },
   {
    "annotation": "expr",
    "className": "_ast.GeneratorExp",
    "name": "elt"
   }
  ],
  "name": "elt"
 },
 {
  "definitions": [
   {
    "annotation": "list[comprehension]",
    "className": "_ast.ListComp",
    "name": "generators"
   },
   {
    "annotation": "list[comprehension]",
    "className": "_ast.SetComp",
    "name": "generators"
   },
   {
    "annotation": "list[comprehension]",
    "className": "_ast.DictComp",
    "name": "generators"
   },
   {
    "annotation": "list[comprehension]",
    "className": "_ast.GeneratorExp",
    "name": "generators"
   }
  ],
  "name": "generators"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.DictComp",
    "name": "key"
   },
   {
    "annotation": "_KT",
    "className": "weakref.KeyedRef",
    "name": "key"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "zoneinfo.ZoneInfo",
    "kwonlyargs": [],
    "name": "key",
    "returns": "str"
   }
  ],
  "name": "key"
 },
 {
  "definitions": [
   {
    "annotation": "list[cmpop]",
    "className": "_ast.Compare",
    "name": "ops"
   }
  ],
  "name": "ops"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.Compare",
    "name": "comparators"
   }
  ],
  "name": "comparators"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.Call",
    "name": "func"
   },
   {
    "annotation": "Any",
    "className": "tkinter.CallWrapper",
    "name": "func"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "functools.partial",
    "kwonlyargs": [],
    "name": "func",
    "returns": "Callable[..., _T]"
   },
   {
    "annotation": "(Callable[..., _T] | _Descriptor)",
    "className": "functools.partialmethod",
    "name": "func"
   },
   {
    "annotation": "Callable[..., _T]",
    "className": "functools.singledispatchmethod",
    "name": "func"
   },
   {
    "annotation": "Callable[[Any], _T]",
    "className": "functools.cached_property",
    "name": "func"
   }
  ],
  "name": "func"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "_ast.FormattedValue",
    "name": "conversion"
   }
  ],
  "name": "conversion"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.FormattedValue",
    "name": "format_spec"
   }
  ],
  "name": "format_spec"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "_ast.Constant",
    "name": "kind"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Parameter",
    "kwonlyargs": [],
    "name": "kind",
    "returns": "_ParameterKind"
   },
   {
    "annotation": "str",
    "className": "inspect.Attribute",
    "name": "kind"
   }
  ],
  "name": "kind"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_ast.Constant",
    "name": "s"
   },
   {
    "annotation": "str",
    "className": "ast.Str",
    "name": "s"
   },
   {
    "annotation": "bytes",
    "className": "ast.Bytes",
    "name": "s"
   }
  ],
  "name": "s"
 },
 {
  "definitions": [
   {
    "annotation": "complex",
    "className": "_ast.Constant",
    "name": "n"
   },
   {
    "annotation": "int",
    "className": "pickletools.ArgumentDescriptor",
    "name": "n"
   }
  ],
  "name": "n"
 },
 {
  "definitions": [
   {
    "annotation": "_identifier",
    "className": "_ast.Attribute",
    "name": "attr"
   }
  ],
  "name": "attr"
 },
 {
  "definitions": [
   {
    "annotation": "expr_context",
    "className": "_ast.Attribute",
    "name": "ctx"
   },
   {
    "annotation": "expr_context",
    "className": "_ast.Subscript",
    "name": "ctx"
   },
   {
    "annotation": "expr_context",
    "className": "_ast.Starred",
    "name": "ctx"
   },
   {
    "annotation": "expr_context",
    "className": "_ast.Name",
    "name": "ctx"
   },
   {
    "annotation": "expr_context",
    "className": "_ast.List",
    "name": "ctx"
   },
   {
    "annotation": "expr_context",
    "className": "_ast.Tuple",
    "name": "ctx"
   }
  ],
  "name": "ctx"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Slice",
    "name": "lower"
   }
  ],
  "name": "lower"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Slice",
    "name": "upper"
   }
  ],
  "name": "upper"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.Slice",
    "name": "step"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.slice",
    "kwonlyargs": [],
    "name": "step",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.range",
    "kwonlyargs": [],
    "name": "step",
    "returns": "int"
   }
  ],
  "name": "step"
 },
 {
  "definitions": [
   {
    "annotation": "_SliceT",
    "className": "_ast.Subscript",
    "name": "slice"
   }
  ],
  "name": "slice"
 },
 {
  "definitions": [
   {
    "annotation": "_identifier",
    "className": "_ast.Name",
    "name": "id"
   },
   {
    "annotation": "bytes",
    "className": "ssl.SSLSession",
    "name": "id"
   }
  ],
  "name": "id"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.comprehension",
    "name": "ifs"
   }
  ],
  "name": "ifs"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_ast.comprehension",
    "name": "is_async"
   }
  ],
  "name": "is_async"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.ExceptHandler",
    "name": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "socket.socket",
    "kwonlyargs": [],
    "name": "type",
    "returns": "SocketKind"
   },
   {
    "annotation": "(Callable[[str], Any] | FileType | None)",
    "className": "argparse.Action",
    "name": "type"
   },
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "type"
   },
   {
    "annotation": "str",
    "className": "cgi.FieldStorage",
    "name": "type"
   },
   {
    "annotation": "bytes",
    "className": "tarfile.TarInfo",
    "name": "type"
   },
   {
    "annotation": "Any",
    "className": "optparse.Option",
    "name": "type"
   },
   {
    "annotation": "EventType",
    "className": "tkinter.Event",
    "name": "type"
   },
   {
    "annotation": "Type[_T]",
    "className": "dataclasses.Field",
    "name": "type"
   },
   {
    "annotation": "Type[_T]",
    "className": "dataclasses.InitVar",
    "name": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_socket.socket",
    "kwonlyargs": [],
    "name": "type",
    "returns": "int"
   }
  ],
  "name": "type"
 },
 {
  "definitions": [
   {
    "annotation": "(arg | None)",
    "className": "_ast.arguments",
    "name": "vararg"
   }
  ],
  "name": "vararg"
 },
 {
  "definitions": [
   {
    "annotation": "list[arg]",
    "className": "_ast.arguments",
    "name": "kwonlyargs"
   },
   {
    "annotation": "list[str]",
    "className": "inspect.FullArgSpec",
    "name": "kwonlyargs"
   }
  ],
  "name": "kwonlyargs"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr | None]",
    "className": "_ast.arguments",
    "name": "kw_defaults"
   }
  ],
  "name": "kw_defaults"
 },
 {
  "definitions": [
   {
    "annotation": "(arg | None)",
    "className": "_ast.arguments",
    "name": "kwarg"
   }
  ],
  "name": "kwarg"
 },
 {
  "definitions": [
   {
    "annotation": "list[expr]",
    "className": "_ast.arguments",
    "name": "defaults"
   },
   {
    "annotation": "tuple[Any, ...]",
    "className": "inspect.ArgSpec",
    "name": "defaults"
   },
   {
    "annotation": "(tuple[Any, ...] | None)",
    "className": "inspect.FullArgSpec",
    "name": "defaults"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "optparse.OptionContainer",
    "name": "defaults"
   }
  ],
  "name": "defaults"
 },
 {
  "definitions": [
   {
    "annotation": "_identifier",
    "className": "_ast.arg",
    "name": "arg"
   },
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.keyword",
    "name": "arg"
   },
   {
    "annotation": "(ArgumentDescriptor | None)",
    "className": "pickletools.OpcodeInfo",
    "name": "arg"
   },
   {
    "annotation": "(int | None)",
    "className": "dis.Instruction",
    "name": "arg"
   }
  ],
  "name": "arg"
 },
 {
  "definitions": [
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.alias",
    "name": "asname"
   }
  ],
  "name": "asname"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.withitem",
    "name": "context_expr"
   }
  ],
  "name": "context_expr"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.withitem",
    "name": "optional_vars"
   }
  ],
  "name": "optional_vars"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.Match",
    "name": "subject"
   }
  ],
  "name": "subject"
 },
 {
  "definitions": [
   {
    "annotation": "list[match_case]",
    "className": "_ast.Match",
    "name": "cases"
   }
  ],
  "name": "cases"
 },
 {
  "definitions": [
   {
    "annotation": "_pattern",
    "className": "_ast.match_case",
    "name": "pattern"
   },
   {
    "annotation": "(_pattern | None)",
    "className": "_ast.MatchAs",
    "name": "pattern"
   },
   {
    "annotation": "(str | bytes | None)",
    "className": "sre_constants.error",
    "name": "pattern"
   },
   {
    "annotation": "Pattern[str]",
    "className": "string.Template",
    "name": "pattern"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Pattern",
    "kwonlyargs": [],
    "name": "pattern",
    "returns": "AnyStr"
   }
  ],
  "name": "pattern"
 },
 {
  "definitions": [
   {
    "annotation": "(expr | None)",
    "className": "_ast.match_case",
    "name": "guard"
   }
  ],
  "name": "guard"
 },
 {
  "definitions": [
   {
    "annotation": "list[pattern]",
    "className": "_ast.MatchSequence",
    "name": "patterns"
   },
   {
    "annotation": "list[pattern]",
    "className": "_ast.MatchMapping",
    "name": "patterns"
   },
   {
    "annotation": "list[pattern]",
    "className": "_ast.MatchClass",
    "name": "patterns"
   },
   {
    "annotation": "list[pattern]",
    "className": "_ast.MatchOr",
    "name": "patterns"
   }
  ],
  "name": "patterns"
 },
 {
  "definitions": [
   {
    "annotation": "(_identifier | None)",
    "className": "_ast.MatchMapping",
    "name": "rest"
   }
  ],
  "name": "rest"
 },
 {
  "definitions": [
   {
    "annotation": "expr",
    "className": "_ast.MatchClass",
    "name": "cls"
   }
  ],
  "name": "cls"
 },
 {
  "definitions": [
   {
    "annotation": "list[_identifier]",
    "className": "_ast.MatchClass",
    "name": "kwd_attrs"
   }
  ],
  "name": "kwd_attrs"
 },
 {
  "definitions": [
   {
    "annotation": "list[pattern]",
    "className": "_ast.MatchClass",
    "name": "kwd_patterns"
   }
  ],
  "name": "kwd_patterns"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "select.epoll",
    "name": "closed"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "gzip.GzipFile",
    "kwonlyargs": [],
    "name": "closed",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.IOBase",
    "kwonlyargs": [],
    "name": "closed",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.TextIOWrapper",
    "kwonlyargs": [],
    "name": "closed",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "lzma.LZMAFile",
    "kwonlyargs": [],
    "name": "closed",
    "returns": "bool"
   },
   {
    "annotation": "bool",
    "className": "mmap.mmap",
    "name": "closed"
   },
   {
    "annotation": "bool",
    "className": "chunk.Chunk",
    "name": "closed"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.IO",
    "kwonlyargs": [],
    "name": "closed",
    "returns": "bool"
   }
  ],
  "name": "closed"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "grp.struct_group",
    "kwonlyargs": [],
    "name": "gr_name",
    "returns": "str"
   }
  ],
  "name": "gr_name"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "grp.struct_group",
    "kwonlyargs": [],
    "name": "gr_passwd",
    "returns": "(str | None)"
   }
  ],
  "name": "gr_passwd"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "grp.struct_group",
    "kwonlyargs": [],
    "name": "gr_gid",
    "returns": "int"
   }
  ],
  "name": "gr_gid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "grp.struct_group",
    "kwonlyargs": [],
    "name": "gr_mem",
    "returns": "list[str]"
   }
  ],
  "name": "gr_mem"
 },
 {
  "definitions": [
   {
    "annotation": "FileDescriptorLike",
    "className": "selectors.SelectorKey",
    "name": "fileobj"
   },
   {
    "annotation": "(_ReadableFileobj | _WritableFileobj)",
    "className": "gzip.GzipFile",
    "name": "fileobj"
   },
   {
    "annotation": "(_Fileobj | None)",
    "className": "tarfile.TarFile",
    "name": "fileobj"
   }
  ],
  "name": "fileobj"
 },
 {
  "definitions": [
   {
    "annotation": "FileDescriptor",
    "className": "selectors.SelectorKey",
    "name": "fd"
   },
   {
    "annotation": "int",
    "className": "asyncore.file_wrapper",
    "name": "fd"
   }
  ],
  "name": "fd"
 },
 {
  "definitions": [
   {
    "annotation": "_EventMask",
    "className": "selectors.SelectorKey",
    "name": "events"
   }
  ],
  "name": "events"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "selectors.SelectorKey",
    "name": "data"
   },
   {
    "annotation": "list[_CodeType]",
    "className": "sre_parse.SubPattern",
    "name": "data"
   },
   {
    "annotation": "dict[_KT, _VT]",
    "className": "collections.UserDict",
    "name": "data"
   },
   {
    "annotation": "list[_T]",
    "className": "collections.UserList",
    "name": "data"
   },
   {
    "annotation": "str",
    "className": "collections.UserString",
    "name": "data"
   },
   {
    "annotation": "int",
    "className": "plistlib.UID",
    "name": "data"
   }
  ],
  "name": "data"
 },
 {
  "definitions": [
   {
    "annotation": "(FileIO | None)",
    "className": "gzip.GzipFile",
    "name": "myfileobj"
   }
  ],
  "name": "myfileobj"
 },
 {
  "definitions": [
   {
    "annotation": "Literal[1, 2]",
    "className": "gzip.GzipFile",
    "name": "mode"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "socket.SocketIO",
    "kwonlyargs": [],
    "name": "mode",
    "returns": "Literal['rb', 'wb', 'rwb']"
   },
   {
    "annotation": "str",
    "className": "io.FileIO",
    "name": "mode"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "statistics.NormalDist",
    "kwonlyargs": [],
    "name": "mode",
    "returns": "float"
   },
   {
    "annotation": "str",
    "className": "logging.FileHandler",
    "name": "mode"
   },
   {
    "annotation": "Literal['r', 'a', 'w', 'x']",
    "className": "tarfile.TarFile",
    "name": "mode"
   },
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "mode"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.IO",
    "kwonlyargs": [],
    "name": "mode",
    "returns": "str"
   },
   {
    "annotation": "_ReadWriteMode",
    "className": "zipfile.ZipExtFile",
    "name": "mode"
   },
   {
    "annotation": "_ZipFileMode",
    "className": "zipfile.ZipFile",
    "name": "mode"
   }
  ],
  "name": "mode"
 },
 {
  "definitions": [
   {
    "annotation": "zlib._Compress",
    "className": "gzip.GzipFile",
    "name": "compress"
   }
  ],
  "name": "compress"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "gzip.GzipFile",
    "kwonlyargs": [],
    "name": "filename",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "inspect.Traceback",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "inspect.FrameInfo",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "filename"
   },
   {
    "annotation": "Any",
    "className": "builtins.OSError",
    "name": "filename"
   },
   {
    "annotation": "(str | None)",
    "className": "builtins.SyntaxError",
    "name": "filename"
   },
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "filename"
   },
   {
    "annotation": "(str | None)",
    "className": "cgi.FieldStorage",
    "name": "filename"
   },
   {
    "annotation": "(str | None)",
    "className": "netrc.NetrcParseError",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "code.InteractiveConsole",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "traceback.TracebackException",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "traceback.FrameSummary",
    "name": "filename"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Frame",
    "kwonlyargs": [],
    "name": "filename",
    "returns": "str"
   },
   {
    "annotation": "(str | None)",
    "className": "doctest.DocTest",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "warnings.WarningMessage",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "pydoc.ErrorDuringImport",
    "name": "filename"
   },
   {
    "annotation": "(str | None)",
    "className": "zipfile.ZipFile",
    "name": "filename"
   },
   {
    "annotation": "str",
    "className": "zipfile.ZipInfo",
    "name": "filename"
   }
  ],
  "name": "filename"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "gzip.GzipFile",
    "kwonlyargs": [],
    "name": "mtime",
    "returns": "(int | None)"
   },
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "mtime"
   }
  ],
  "name": "mtime"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "gzip.GzipFile",
    "name": "crc"
   }
  ],
  "name": "crc"
 },
 {
  "definitions": [
   {
    "annotation": "_C",
    "className": "_weakref.CallableProxyType",
    "name": "__call__"
   }
  ],
  "name": "__call__"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[[ReferenceType[_T]], Any]",
    "className": "_weakref.ReferenceType",
    "name": "__callback__"
   }
  ],
  "name": "__callback__"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "commenters"
   }
  ],
  "name": "commenters"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "wordchars"
   }
  ],
  "name": "wordchars"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "whitespace"
   }
  ],
  "name": "whitespace"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "escape"
   }
  ],
  "name": "escape"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "quotes"
   }
  ],
  "name": "quotes"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "escapedquotes"
   }
  ],
  "name": "escapedquotes"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "shlex.shlex",
    "name": "whitespace_split"
   }
  ],
  "name": "whitespace_split"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "shlex.shlex",
    "name": "infile"
   }
  ],
  "name": "infile"
 },
 {
  "definitions": [
   {
    "annotation": "TextIO",
    "className": "shlex.shlex",
    "name": "instream"
   }
  ],
  "name": "instream"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "source"
   },
   {
    "annotation": "(str | None)",
    "className": "configparser.DuplicateSectionError",
    "name": "source"
   },
   {
    "annotation": "(str | None)",
    "className": "configparser.DuplicateOptionError",
    "name": "source"
   },
   {
    "annotation": "str",
    "className": "configparser.ParsingError",
    "name": "source"
   },
   {
    "annotation": "str",
    "className": "doctest.Example",
    "name": "source"
   },
   {
    "annotation": "(Any | None)",
    "className": "warnings.WarningMessage",
    "name": "source"
   }
  ],
  "name": "source"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "shlex.shlex",
    "name": "debug"
   },
   {
    "annotation": "int",
    "className": "imaplib.IMAP4",
    "name": "debug"
   },
   {
    "annotation": "bool",
    "className": "asyncore.dispatcher",
    "name": "debug"
   },
   {
    "annotation": "int",
    "className": "modulefinder.ModuleFinder",
    "name": "debug"
   },
   {
    "annotation": "(int | None)",
    "className": "tarfile.TarFile",
    "name": "debug"
   },
   {
    "annotation": "int",
    "className": "zipfile.ZipFile",
    "name": "debug"
   }
  ],
  "name": "debug"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "token"
   }
  ],
  "name": "token"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "shlex.shlex",
    "name": "eof"
   },
   {
    "annotation": "bool",
    "className": "ssl.MemoryBIO",
    "name": "eof"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "lzma.LZMADecompressor",
    "kwonlyargs": [],
    "name": "eof",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "bz2.BZ2Decompressor",
    "kwonlyargs": [],
    "name": "eof",
    "returns": "bool"
   },
   {
    "annotation": "str",
    "className": "_sitebuiltins.Quitter",
    "name": "eof"
   }
  ],
  "name": "eof"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "hmac.HMAC",
    "name": "digest_size"
   }
  ],
  "name": "digest_size"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "hmac.HMAC",
    "name": "block_size"
   }
  ],
  "name": "block_size"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGABRT"
   }
  ],
  "name": "SIGABRT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGEMT"
   }
  ],
  "name": "SIGEMT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGFPE"
   }
  ],
  "name": "SIGFPE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGILL"
   }
  ],
  "name": "SIGILL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGINFO"
   }
  ],
  "name": "SIGINFO"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGINT"
   }
  ],
  "name": "SIGINT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGSEGV"
   }
  ],
  "name": "SIGSEGV"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Signals",
    "name": "SIGTERM"
   }
  ],
  "name": "SIGTERM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Handlers",
    "name": "SIG_DFL"
   }
  ],
  "name": "SIG_DFL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Handlers",
    "name": "SIG_IGN"
   }
  ],
  "name": "SIG_IGN"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Sigmasks",
    "name": "SIG_BLOCK"
   }
  ],
  "name": "SIG_BLOCK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Sigmasks",
    "name": "SIG_UNBLOCK"
   }
  ],
  "name": "SIG_UNBLOCK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "signal.Sigmasks",
    "name": "SIG_SETMASK"
   }
  ],
  "name": "SIG_SETMASK"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_signo",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.waitid_result",
    "kwonlyargs": [],
    "name": "si_signo",
    "returns": "int"
   }
  ],
  "name": "si_signo"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_code",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.waitid_result",
    "kwonlyargs": [],
    "name": "si_code",
    "returns": "int"
   }
  ],
  "name": "si_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_errno",
    "returns": "int"
   }
  ],
  "name": "si_errno"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_pid",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.waitid_result",
    "kwonlyargs": [],
    "name": "si_pid",
    "returns": "int"
   }
  ],
  "name": "si_pid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_uid",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.waitid_result",
    "kwonlyargs": [],
    "name": "si_uid",
    "returns": "int"
   }
  ],
  "name": "si_uid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_status",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.waitid_result",
    "kwonlyargs": [],
    "name": "si_status",
    "returns": "int"
   }
  ],
  "name": "si_status"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "signal.struct_siginfo",
    "kwonlyargs": [],
    "name": "si_band",
    "returns": "int"
   }
  ],
  "name": "si_band"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "http.HTTPStatus",
    "kwonlyargs": [],
    "name": "phrase",
    "returns": "str"
   }
  ],
  "name": "phrase"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "http.HTTPStatus",
    "kwonlyargs": [],
    "name": "description",
    "returns": "str"
   },
   {
    "annotation": "Any",
    "className": "optparse.OptionContainer",
    "name": "description"
   }
  ],
  "name": "description"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "CONTINUE"
   }
  ],
  "name": "CONTINUE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "SWITCHING_PROTOCOLS"
   }
  ],
  "name": "SWITCHING_PROTOCOLS"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PROCESSING"
   }
  ],
  "name": "PROCESSING"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "OK"
   }
  ],
  "name": "OK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "CREATED"
   }
  ],
  "name": "CREATED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "ACCEPTED"
   }
  ],
  "name": "ACCEPTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NON_AUTHORITATIVE_INFORMATION"
   }
  ],
  "name": "NON_AUTHORITATIVE_INFORMATION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NO_CONTENT"
   }
  ],
  "name": "NO_CONTENT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "RESET_CONTENT"
   }
  ],
  "name": "RESET_CONTENT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PARTIAL_CONTENT"
   }
  ],
  "name": "PARTIAL_CONTENT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "MULTI_STATUS"
   }
  ],
  "name": "MULTI_STATUS"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "ALREADY_REPORTED"
   }
  ],
  "name": "ALREADY_REPORTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "IM_USED"
   }
  ],
  "name": "IM_USED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "MULTIPLE_CHOICES"
   }
  ],
  "name": "MULTIPLE_CHOICES"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "MOVED_PERMANENTLY"
   }
  ],
  "name": "MOVED_PERMANENTLY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "FOUND"
   }
  ],
  "name": "FOUND"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "SEE_OTHER"
   }
  ],
  "name": "SEE_OTHER"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NOT_MODIFIED"
   }
  ],
  "name": "NOT_MODIFIED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "USE_PROXY"
   }
  ],
  "name": "USE_PROXY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "TEMPORARY_REDIRECT"
   }
  ],
  "name": "TEMPORARY_REDIRECT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PERMANENT_REDIRECT"
   }
  ],
  "name": "PERMANENT_REDIRECT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "BAD_REQUEST"
   }
  ],
  "name": "BAD_REQUEST"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "UNAUTHORIZED"
   }
  ],
  "name": "UNAUTHORIZED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PAYMENT_REQUIRED"
   }
  ],
  "name": "PAYMENT_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "FORBIDDEN"
   }
  ],
  "name": "FORBIDDEN"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NOT_FOUND"
   }
  ],
  "name": "NOT_FOUND"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "METHOD_NOT_ALLOWED"
   }
  ],
  "name": "METHOD_NOT_ALLOWED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NOT_ACCEPTABLE"
   }
  ],
  "name": "NOT_ACCEPTABLE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PROXY_AUTHENTICATION_REQUIRED"
   }
  ],
  "name": "PROXY_AUTHENTICATION_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "REQUEST_TIMEOUT"
   }
  ],
  "name": "REQUEST_TIMEOUT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "CONFLICT"
   }
  ],
  "name": "CONFLICT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "GONE"
   }
  ],
  "name": "GONE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "LENGTH_REQUIRED"
   }
  ],
  "name": "LENGTH_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PRECONDITION_FAILED"
   }
  ],
  "name": "PRECONDITION_FAILED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "REQUEST_ENTITY_TOO_LARGE"
   }
  ],
  "name": "REQUEST_ENTITY_TOO_LARGE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "REQUEST_URI_TOO_LONG"
   }
  ],
  "name": "REQUEST_URI_TOO_LONG"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "UNSUPPORTED_MEDIA_TYPE"
   }
  ],
  "name": "UNSUPPORTED_MEDIA_TYPE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "REQUESTED_RANGE_NOT_SATISFIABLE"
   }
  ],
  "name": "REQUESTED_RANGE_NOT_SATISFIABLE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "EXPECTATION_FAILED"
   }
  ],
  "name": "EXPECTATION_FAILED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "UNPROCESSABLE_ENTITY"
   }
  ],
  "name": "UNPROCESSABLE_ENTITY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "LOCKED"
   }
  ],
  "name": "LOCKED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "FAILED_DEPENDENCY"
   }
  ],
  "name": "FAILED_DEPENDENCY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "UPGRADE_REQUIRED"
   }
  ],
  "name": "UPGRADE_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "PRECONDITION_REQUIRED"
   }
  ],
  "name": "PRECONDITION_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "TOO_MANY_REQUESTS"
   }
  ],
  "name": "TOO_MANY_REQUESTS"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "REQUEST_HEADER_FIELDS_TOO_LARGE"
   }
  ],
  "name": "REQUEST_HEADER_FIELDS_TOO_LARGE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "INTERNAL_SERVER_ERROR"
   }
  ],
  "name": "INTERNAL_SERVER_ERROR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NOT_IMPLEMENTED"
   }
  ],
  "name": "NOT_IMPLEMENTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "BAD_GATEWAY"
   }
  ],
  "name": "BAD_GATEWAY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "SERVICE_UNAVAILABLE"
   }
  ],
  "name": "SERVICE_UNAVAILABLE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "GATEWAY_TIMEOUT"
   }
  ],
  "name": "GATEWAY_TIMEOUT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "HTTP_VERSION_NOT_SUPPORTED"
   }
  ],
  "name": "HTTP_VERSION_NOT_SUPPORTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "VARIANT_ALSO_NEGOTIATES"
   }
  ],
  "name": "VARIANT_ALSO_NEGOTIATES"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "INSUFFICIENT_STORAGE"
   }
  ],
  "name": "INSUFFICIENT_STORAGE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "LOOP_DETECTED"
   }
  ],
  "name": "LOOP_DETECTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NOT_EXTENDED"
   }
  ],
  "name": "NOT_EXTENDED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "http.HTTPStatus",
    "name": "NETWORK_AUTHENTICATION_REQUIRED"
   }
  ],
  "name": "NETWORK_AUTHENTICATION_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtpd.SMTPChannel",
    "name": "COMMAND"
   }
  ],
  "name": "COMMAND"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtpd.SMTPChannel",
    "name": "DATA"
   }
  ],
  "name": "DATA"
 },
 {
  "definitions": [
   {
    "annotation": "defaultdict[str, int]",
    "className": "smtpd.SMTPChannel",
    "name": "command_size_limits"
   }
  ],
  "name": "command_size_limits"
 },
 {
  "definitions": [
   {
    "annotation": "SMTPServer",
    "className": "smtpd.SMTPChannel",
    "name": "smtp_server"
   }
  ],
  "name": "smtp_server"
 },
 {
  "definitions": [
   {
    "annotation": "socket.socket",
    "className": "smtpd.SMTPChannel",
    "name": "conn"
   }
  ],
  "name": "conn"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "smtpd.SMTPChannel",
    "name": "addr"
   }
  ],
  "name": "addr"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "smtpd.SMTPChannel",
    "name": "received_lines"
   }
  ],
  "name": "received_lines"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtpd.SMTPChannel",
    "name": "smtp_state"
   }
  ],
  "name": "smtp_state"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtpd.SMTPChannel",
    "name": "seen_greeting"
   }
  ],
  "name": "seen_greeting"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtpd.SMTPChannel",
    "name": "mailfrom"
   }
  ],
  "name": "mailfrom"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "smtpd.SMTPChannel",
    "name": "rcpttos"
   }
  ],
  "name": "rcpttos"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtpd.SMTPChannel",
    "name": "received_data"
   }
  ],
  "name": "received_data"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtpd.SMTPChannel",
    "name": "fqdn"
   }
  ],
  "name": "fqdn"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtpd.SMTPChannel",
    "name": "peer"
   }
  ],
  "name": "peer"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtpd.SMTPChannel",
    "name": "command_size_limit"
   }
  ],
  "name": "command_size_limit"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtpd.SMTPChannel",
    "name": "data_size_limit"
   },
   {
    "annotation": "int",
    "className": "smtpd.SMTPServer",
    "name": "data_size_limit"
   }
  ],
  "name": "data_size_limit"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "smtpd.SMTPChannel",
    "name": "enable_SMTPUTF8"
   },
   {
    "annotation": "bool",
    "className": "smtpd.SMTPServer",
    "name": "enable_SMTPUTF8"
   }
  ],
  "name": "enable_SMTPUTF8"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "smtpd.SMTPChannel",
    "kwonlyargs": [],
    "name": "max_command_size_limit",
    "returns": "int"
   }
  ],
  "name": "max_command_size_limit"
 },
 {
  "definitions": [
   {
    "annotation": "type[SMTPChannel]",
    "className": "smtpd.SMTPServer",
    "name": "channel_class"
   }
  ],
  "name": "channel_class"
 },
 {
  "definitions": [
   {
    "annotation": "frozenset[str]",
    "className": "abc.ABCMeta",
    "name": "__abstractmethods__"
   }
  ],
  "name": "__abstractmethods__"
 },
 {
  "definitions": [
   {
    "annotation": "Literal[True]",
    "className": "abc.abstractclassmethod",
    "name": "__isabstractmethod__"
   },
   {
    "annotation": "Literal[True]",
    "className": "abc.abstractstaticmethod",
    "name": "__isabstractmethod__"
   },
   {
    "annotation": "Literal[True]",
    "className": "abc.abstractproperty",
    "name": "__isabstractmethod__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.staticmethod",
    "kwonlyargs": [],
    "name": "__isabstractmethod__",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.classmethod",
    "kwonlyargs": [],
    "name": "__isabstractmethod__",
    "returns": "bool"
   },
   {
    "annotation": "bool",
    "className": "builtins.property",
    "name": "__isabstractmethod__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "functools.partialmethod",
    "kwonlyargs": [],
    "name": "__isabstractmethod__",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "functools.singledispatchmethod",
    "kwonlyargs": [],
    "name": "__isabstractmethod__",
    "returns": "bool"
   }
  ],
  "name": "__isabstractmethod__"
 },
 {
  "definitions": [
   {
    "annotation": "type[Exception]",
    "className": "imaplib.IMAP4",
    "name": "error"
   }
  ],
  "name": "error"
 },
 {
  "definitions": [
   {
    "annotation": "type[Exception]",
    "className": "imaplib.IMAP4",
    "name": "abort"
   }
  ],
  "name": "abort"
 },
 {
  "definitions": [
   {
    "annotation": "type[Exception]",
    "className": "imaplib.IMAP4",
    "name": "readonly"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "readonly",
    "returns": "bool"
   }
  ],
  "name": "readonly"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "imaplib.IMAP4",
    "name": "mustquote"
   }
  ],
  "name": "mustquote"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4",
    "name": "state"
   },
   {
    "annotation": "(int | str)",
    "className": "tkinter.Event",
    "name": "state"
   }
  ],
  "name": "state"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "imaplib.IMAP4",
    "name": "literal"
   }
  ],
  "name": "literal"
 },
 {
  "definitions": [
   {
    "annotation": "dict[bytes, _list[bytes] | None]",
    "className": "imaplib.IMAP4",
    "name": "tagged_commands"
   }
  ],
  "name": "tagged_commands"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, _list[bytes | tuple[bytes, bytes]]]",
    "className": "imaplib.IMAP4",
    "name": "untagged_responses"
   }
  ],
  "name": "untagged_responses"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4",
    "name": "continuation_response"
   }
  ],
  "name": "continuation_response"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "imaplib.IMAP4",
    "name": "is_readonly"
   }
  ],
  "name": "is_readonly"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "imaplib.IMAP4",
    "name": "tagnum"
   }
  ],
  "name": "tagnum"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4",
    "name": "tagpre"
   }
  ],
  "name": "tagpre"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "imaplib.IMAP4",
    "name": "tagre"
   }
  ],
  "name": "tagre"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "imaplib.IMAP4",
    "name": "welcome"
   },
   {
    "annotation": "str",
    "className": "nntplib.NNTP",
    "name": "welcome"
   },
   {
    "annotation": "bytes",
    "className": "poplib.POP3",
    "name": "welcome"
   },
   {
    "annotation": "(str | None)",
    "className": "ftplib.FTP",
    "name": "welcome"
   }
  ],
  "name": "welcome"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "imaplib.IMAP4",
    "name": "capabilities"
   }
  ],
  "name": "capabilities"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4",
    "name": "PROTOCOL_VERSION"
   }
  ],
  "name": "PROTOCOL_VERSION"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4",
    "name": "host"
   },
   {
    "annotation": "str",
    "className": "imaplib.IMAP4_SSL",
    "name": "host"
   },
   {
    "annotation": "str",
    "className": "imaplib.IMAP4_stream",
    "name": "host"
   },
   {
    "annotation": "(str | None)",
    "className": "telnetlib.Telnet",
    "name": "host"
   },
   {
    "annotation": "str",
    "className": "nntplib.NNTP",
    "name": "host"
   },
   {
    "annotation": "str",
    "className": "poplib.POP3",
    "name": "host"
   },
   {
    "annotation": "str",
    "className": "ftplib.FTP",
    "name": "host"
   }
  ],
  "name": "host"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "imaplib.IMAP4",
    "name": "port"
   },
   {
    "annotation": "int",
    "className": "imaplib.IMAP4_SSL",
    "name": "port"
   },
   {
    "annotation": "int",
    "className": "imaplib.IMAP4_stream",
    "name": "port"
   },
   {
    "annotation": "int",
    "className": "nntplib.NNTP",
    "name": "port"
   },
   {
    "annotation": "int",
    "className": "poplib.POP3",
    "name": "port"
   },
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "port"
   }
  ],
  "name": "port"
 },
 {
  "definitions": [
   {
    "annotation": "_socket",
    "className": "imaplib.IMAP4",
    "name": "sock"
   },
   {
    "annotation": "_socket",
    "className": "imaplib.IMAP4_SSL",
    "name": "sock"
   },
   {
    "annotation": "_socket",
    "className": "imaplib.IMAP4_stream",
    "name": "sock"
   },
   {
    "annotation": "(socket | None)",
    "className": "smtplib.SMTP",
    "name": "sock"
   },
   {
    "annotation": "socket.socket",
    "className": "nntplib.NNTP",
    "name": "sock"
   },
   {
    "annotation": "ssl.SSLSocket",
    "className": "nntplib.NNTP_SSL",
    "name": "sock"
   },
   {
    "annotation": "socket.socket",
    "className": "poplib.POP3",
    "name": "sock"
   },
   {
    "annotation": "(socket | None)",
    "className": "ftplib.FTP",
    "name": "sock"
   }
  ],
  "name": "sock"
 },
 {
  "definitions": [
   {
    "annotation": "(IO[str] | IO[bytes])",
    "className": "imaplib.IMAP4",
    "name": "file"
   },
   {
    "annotation": "IO[Any]",
    "className": "imaplib.IMAP4_SSL",
    "name": "file"
   },
   {
    "annotation": "IO[Any]",
    "className": "imaplib.IMAP4_stream",
    "name": "file"
   },
   {
    "annotation": "(Any | None)",
    "className": "smtplib.SMTP",
    "name": "file"
   },
   {
    "annotation": "str",
    "className": "bdb.Breakpoint",
    "name": "file"
   },
   {
    "annotation": "(IO[bytes] | None)",
    "className": "cgi.MiniFieldStorage",
    "name": "file"
   },
   {
    "annotation": "(IO[bytes] | None)",
    "className": "cgi.FieldStorage",
    "name": "file"
   },
   {
    "annotation": "IO[bytes]",
    "className": "chunk.Chunk",
    "name": "file"
   },
   {
    "annotation": "IO[bytes]",
    "className": "nntplib.NNTP",
    "name": "file"
   },
   {
    "annotation": "BinaryIO",
    "className": "poplib.POP3",
    "name": "file"
   },
   {
    "annotation": "(TextIO | None)",
    "className": "warnings.WarningMessage",
    "name": "file"
   },
   {
    "annotation": "str",
    "className": "py_compile.PyCompileError",
    "name": "file"
   },
   {
    "annotation": "int",
    "className": "pyclbr.Class",
    "name": "file"
   },
   {
    "annotation": "int",
    "className": "pyclbr.Function",
    "name": "file"
   },
   {
    "annotation": "(TextIO | None)",
    "className": "ftplib.FTP",
    "name": "file"
   }
  ],
  "name": "file"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4_SSL",
    "name": "keyfile"
   },
   {
    "annotation": "(str | None)",
    "className": "smtplib.SMTP_SSL",
    "name": "keyfile"
   },
   {
    "annotation": "(str | None)",
    "className": "ftplib.FTP_TLS",
    "name": "keyfile"
   }
  ],
  "name": "keyfile"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4_SSL",
    "name": "certfile"
   },
   {
    "annotation": "(str | None)",
    "className": "smtplib.SMTP_SSL",
    "name": "certfile"
   },
   {
    "annotation": "(str | None)",
    "className": "ftplib.FTP_TLS",
    "name": "certfile"
   }
  ],
  "name": "certfile"
 },
 {
  "definitions": [
   {
    "annotation": "SSLSocket",
    "className": "imaplib.IMAP4_SSL",
    "name": "sslobj"
   }
  ],
  "name": "sslobj"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "imaplib.IMAP4_stream",
    "name": "command"
   }
  ],
  "name": "command"
 },
 {
  "definitions": [
   {
    "annotation": "subprocess.Popen[bytes]",
    "className": "imaplib.IMAP4_stream",
    "name": "process"
   },
   {
    "annotation": "(int | None)",
    "className": "logging.LogRecord",
    "name": "process"
   }
  ],
  "name": "process"
 },
 {
  "definitions": [
   {
    "annotation": "IO[Any]",
    "className": "imaplib.IMAP4_stream",
    "name": "writefile"
   }
  ],
  "name": "writefile"
 },
 {
  "definitions": [
   {
    "annotation": "IO[Any]",
    "className": "imaplib.IMAP4_stream",
    "name": "readfile"
   }
  ],
  "name": "readfile"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtplib.SMTPResponseException",
    "name": "smtp_code"
   },
   {
    "annotation": "int",
    "className": "smtplib.SMTPSenderRefused",
    "name": "smtp_code"
   }
  ],
  "name": "smtp_code"
 },
 {
  "definitions": [
   {
    "annotation": "(bytes | str)",
    "className": "smtplib.SMTPResponseException",
    "name": "smtp_error"
   },
   {
    "annotation": "bytes",
    "className": "smtplib.SMTPSenderRefused",
    "name": "smtp_error"
   }
  ],
  "name": "smtp_error"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTPSenderRefused",
    "name": "sender"
   }
  ],
  "name": "sender"
 },
 {
  "definitions": [
   {
    "annotation": "_SendErrs",
    "className": "smtplib.SMTPRecipientsRefused",
    "name": "recipients"
   }
  ],
  "name": "recipients"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtplib.SMTP",
    "name": "debuglevel"
   }
  ],
  "name": "debuglevel"
 },
 {
  "definitions": [
   {
    "annotation": "(bytes | None)",
    "className": "smtplib.SMTP",
    "name": "helo_resp"
   }
  ],
  "name": "helo_resp"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTP",
    "name": "ehlo_msg"
   }
  ],
  "name": "ehlo_msg"
 },
 {
  "definitions": [
   {
    "annotation": "(bytes | None)",
    "className": "smtplib.SMTP",
    "name": "ehlo_resp"
   }
  ],
  "name": "ehlo_resp"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "smtplib.SMTP",
    "name": "does_esmtp"
   }
  ],
  "name": "does_esmtp"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "smtplib.SMTP",
    "name": "default_port"
   },
   {
    "annotation": "int",
    "className": "smtplib.SMTP_SSL",
    "name": "default_port"
   }
  ],
  "name": "default_port"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "smtplib.SMTP",
    "name": "timeout"
   },
   {
    "annotation": "(float | None)",
    "className": "socketserver.BaseServer",
    "name": "timeout"
   },
   {
    "annotation": "(float | None)",
    "className": "socketserver.ForkingMixIn",
    "name": "timeout"
   },
   {
    "annotation": "ClassVar[float | None]",
    "className": "socketserver.StreamRequestHandler",
    "name": "timeout"
   },
   {
    "annotation": "int",
    "className": "ssl.SSLSession",
    "name": "timeout"
   },
   {
    "annotation": "float",
    "className": "subprocess.TimeoutExpired",
    "name": "timeout"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_socket.socket",
    "kwonlyargs": [],
    "name": "timeout",
    "returns": "(float | None)"
   },
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "timeout"
   }
  ],
  "name": "timeout"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "smtplib.SMTP",
    "name": "esmtp_features"
   }
  ],
  "name": "esmtp_features"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTP",
    "name": "command_encoding"
   }
  ],
  "name": "command_encoding"
 },
 {
  "definitions": [
   {
    "annotation": "(_SourceAddress | None)",
    "className": "smtplib.SMTP",
    "name": "source_address"
   },
   {
    "annotation": "(tuple[str, int] | None)",
    "className": "ftplib.FTP",
    "name": "source_address"
   }
  ],
  "name": "source_address"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTP",
    "name": "local_hostname"
   }
  ],
  "name": "local_hostname"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTP",
    "name": "user"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.times_result",
    "kwonlyargs": [],
    "name": "user",
    "returns": "float"
   }
  ],
  "name": "user"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "smtplib.SMTP",
    "name": "password"
   }
  ],
  "name": "password"
 },
 {
  "definitions": [
   {
    "annotation": "SSLContext",
    "className": "smtplib.SMTP_SSL",
    "name": "context"
   },
   {
    "annotation": "SSLContext",
    "className": "ssl.SSLSocket",
    "name": "context"
   },
   {
    "annotation": "SSLContext",
    "className": "ssl.SSLObject",
    "name": "context"
   },
   {
    "annotation": "SSLContext",
    "className": "ftplib.FTP_TLS",
    "name": "context"
   }
  ],
  "name": "context"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "sndhdr.SndHeaders",
    "name": "filetype"
   }
  ],
  "name": "filetype"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "sndhdr.SndHeaders",
    "name": "framerate"
   }
  ],
  "name": "framerate"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "sndhdr.SndHeaders",
    "name": "nchannels"
   }
  ],
  "name": "nchannels"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "sndhdr.SndHeaders",
    "name": "nframes"
   }
  ],
  "name": "nframes"
 },
 {
  "definitions": [
   {
    "annotation": "(int | str)",
    "className": "sndhdr.SndHeaders",
    "name": "sampwidth"
   }
  ],
  "name": "sampwidth"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_UNIX"
   }
  ],
  "name": "AF_UNIX"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_INET"
   }
  ],
  "name": "AF_INET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_INET6"
   }
  ],
  "name": "AF_INET6"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_AAL5"
   }
  ],
  "name": "AF_AAL5"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ALG"
   }
  ],
  "name": "AF_ALG"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_APPLETALK"
   }
  ],
  "name": "AF_APPLETALK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ASH"
   }
  ],
  "name": "AF_ASH"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ATMPVC"
   }
  ],
  "name": "AF_ATMPVC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ATMSVC"
   }
  ],
  "name": "AF_ATMSVC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_AX25"
   }
  ],
  "name": "AF_AX25"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_BLUETOOTH"
   }
  ],
  "name": "AF_BLUETOOTH"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_BRIDGE"
   }
  ],
  "name": "AF_BRIDGE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_CAN"
   }
  ],
  "name": "AF_CAN"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_DECnet"
   }
  ],
  "name": "AF_DECnet"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ECONET"
   }
  ],
  "name": "AF_ECONET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_IPX"
   }
  ],
  "name": "AF_IPX"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_IRDA"
   }
  ],
  "name": "AF_IRDA"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_KEY"
   }
  ],
  "name": "AF_KEY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_LINK"
   }
  ],
  "name": "AF_LINK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_LLC"
   }
  ],
  "name": "AF_LLC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_NETBEUI"
   }
  ],
  "name": "AF_NETBEUI"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_NETLINK"
   }
  ],
  "name": "AF_NETLINK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_NETROM"
   }
  ],
  "name": "AF_NETROM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_PACKET"
   }
  ],
  "name": "AF_PACKET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_PPPOX"
   }
  ],
  "name": "AF_PPPOX"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_QIPCRTR"
   }
  ],
  "name": "AF_QIPCRTR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_RDS"
   }
  ],
  "name": "AF_RDS"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ROSE"
   }
  ],
  "name": "AF_ROSE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_ROUTE"
   }
  ],
  "name": "AF_ROUTE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_SECURITY"
   }
  ],
  "name": "AF_SECURITY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_SNA"
   }
  ],
  "name": "AF_SNA"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_SYSTEM"
   }
  ],
  "name": "AF_SYSTEM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_TIPC"
   }
  ],
  "name": "AF_TIPC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_UNSPEC"
   }
  ],
  "name": "AF_UNSPEC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_VSOCK"
   }
  ],
  "name": "AF_VSOCK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_WANPIPE"
   }
  ],
  "name": "AF_WANPIPE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressFamily",
    "name": "AF_X25"
   }
  ],
  "name": "AF_X25"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_STREAM"
   }
  ],
  "name": "SOCK_STREAM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_DGRAM"
   }
  ],
  "name": "SOCK_DGRAM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_RAW"
   }
  ],
  "name": "SOCK_RAW"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_RDM"
   }
  ],
  "name": "SOCK_RDM"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_SEQPACKET"
   }
  ],
  "name": "SOCK_SEQPACKET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_CLOEXEC"
   }
  ],
  "name": "SOCK_CLOEXEC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.SocketKind",
    "name": "SOCK_NONBLOCK"
   }
  ],
  "name": "SOCK_NONBLOCK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_CTRUNC"
   }
  ],
  "name": "MSG_CTRUNC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_DONTROUTE"
   }
  ],
  "name": "MSG_DONTROUTE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_DONTWAIT"
   }
  ],
  "name": "MSG_DONTWAIT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_EOR"
   }
  ],
  "name": "MSG_EOR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_OOB"
   }
  ],
  "name": "MSG_OOB"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_PEEK"
   }
  ],
  "name": "MSG_PEEK"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_TRUNC"
   }
  ],
  "name": "MSG_TRUNC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.MsgFlag",
    "name": "MSG_WAITALL"
   }
  ],
  "name": "MSG_WAITALL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_ADDRCONFIG"
   }
  ],
  "name": "AI_ADDRCONFIG"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_ALL"
   }
  ],
  "name": "AI_ALL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_CANONNAME"
   }
  ],
  "name": "AI_CANONNAME"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_NUMERICHOST"
   }
  ],
  "name": "AI_NUMERICHOST"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_NUMERICSERV"
   }
  ],
  "name": "AI_NUMERICSERV"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_PASSIVE"
   }
  ],
  "name": "AI_PASSIVE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socket.AddressInfo",
    "name": "AI_V4MAPPED"
   }
  ],
  "name": "AI_V4MAPPED"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "socket.socket",
    "kwonlyargs": [],
    "name": "family",
    "returns": "AddressFamily"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_socket.socket",
    "kwonlyargs": [],
    "name": "family",
    "returns": "int"
   }
  ],
  "name": "family"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.ArgumentError",
    "name": "argument_name"
   }
  ],
  "name": "argument_name"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "argparse.ArgumentError",
    "name": "message"
   },
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "message"
   },
   {
    "annotation": "str",
    "className": "configparser.Error",
    "name": "message"
   },
   {
    "annotation": "(Warning | str)",
    "className": "warnings.WarningMessage",
    "name": "message"
   }
  ],
  "name": "message"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "argparse.ArgumentParser",
    "name": "prog"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.OptionParser",
    "name": "prog"
   }
  ],
  "name": "prog"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.ArgumentParser",
    "name": "usage"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.OptionParser",
    "name": "usage"
   }
  ],
  "name": "usage"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.ArgumentParser",
    "name": "epilog"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.OptionParser",
    "name": "epilog"
   }
  ],
  "name": "epilog"
 },
 {
  "definitions": [
   {
    "annotation": "_FormatterClass",
    "className": "argparse.ArgumentParser",
    "name": "formatter_class"
   }
  ],
  "name": "formatter_class"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.ArgumentParser",
    "name": "fromfile_prefix_chars"
   }
  ],
  "name": "fromfile_prefix_chars"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "argparse.ArgumentParser",
    "name": "add_help"
   }
  ],
  "name": "add_help"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "argparse.ArgumentParser",
    "name": "allow_abbrev"
   }
  ],
  "name": "allow_abbrev"
 },
 {
  "definitions": [
   {
    "annotation": "_ArgumentGroup",
    "className": "argparse.ArgumentParser",
    "name": "_positionals"
   }
  ],
  "name": "_positionals"
 },
 {
  "definitions": [
   {
    "annotation": "_ArgumentGroup",
    "className": "argparse.ArgumentParser",
    "name": "_optionals"
   }
  ],
  "name": "_optionals"
 },
 {
  "definitions": [
   {
    "annotation": "(_ArgumentGroup | None)",
    "className": "argparse.ArgumentParser",
    "name": "_subparsers"
   }
  ],
  "name": "_subparsers"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "argparse.HelpFormatter",
    "name": "_prog"
   }
  ],
  "name": "_prog"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_indent_increment"
   }
  ],
  "name": "_indent_increment"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_max_help_position"
   }
  ],
  "name": "_max_help_position"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_width"
   }
  ],
  "name": "_width"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_current_indent"
   }
  ],
  "name": "_current_indent"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_level"
   }
  ],
  "name": "_level"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.HelpFormatter",
    "name": "_action_max_length"
   }
  ],
  "name": "_action_max_length"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "argparse.HelpFormatter",
    "name": "_root_section"
   }
  ],
  "name": "_root_section"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "argparse.HelpFormatter",
    "name": "_current_section"
   }
  ],
  "name": "_current_section"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "argparse.HelpFormatter",
    "name": "_whitespace_matcher"
   }
  ],
  "name": "_whitespace_matcher"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "argparse.HelpFormatter",
    "name": "_long_break_matcher"
   }
  ],
  "name": "_long_break_matcher"
 },
 {
  "definitions": [
   {
    "annotation": "type[Any]",
    "className": "argparse.HelpFormatter",
    "name": "_Section"
   }
  ],
  "name": "_Section"
 },
 {
  "definitions": [
   {
    "annotation": "Sequence[str]",
    "className": "argparse.Action",
    "name": "option_strings"
   },
   {
    "annotation": "dict[Option, str]",
    "className": "optparse.HelpFormatter",
    "name": "option_strings"
   }
  ],
  "name": "option_strings"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "argparse.Action",
    "name": "dest"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.Option",
    "name": "dest"
   }
  ],
  "name": "dest"
 },
 {
  "definitions": [
   {
    "annotation": "(int | str | None)",
    "className": "argparse.Action",
    "name": "nargs"
   },
   {
    "annotation": "int",
    "className": "optparse.Option",
    "name": "nargs"
   }
  ],
  "name": "nargs"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "argparse.Action",
    "name": "const"
   }
  ],
  "name": "const"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "argparse.Action",
    "name": "default"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Parameter",
    "kwonlyargs": [],
    "name": "default",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "default",
    "returns": "Callable[[Any], Any]"
   },
   {
    "annotation": "Any",
    "className": "optparse.Option",
    "name": "default"
   },
   {
    "annotation": "(_T | Literal[_MISSING_TYPE.MISSING])",
    "className": "dataclasses.Field",
    "name": "default"
   }
  ],
  "name": "default"
 },
 {
  "definitions": [
   {
    "annotation": "(Iterable[Any] | None)",
    "className": "argparse.Action",
    "name": "choices"
   }
  ],
  "name": "choices"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "argparse.Action",
    "name": "required"
   }
  ],
  "name": "required"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.Action",
    "name": "help"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.Option",
    "name": "help"
   }
  ],
  "name": "help"
 },
 {
  "definitions": [
   {
    "annotation": "(str | tuple[str, ...] | None)",
    "className": "argparse.Action",
    "name": "metavar"
   },
   {
    "annotation": "(str | None)",
    "className": "optparse.Option",
    "name": "metavar"
   }
  ],
  "name": "metavar"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "argparse.FileType",
    "name": "_mode"
   }
  ],
  "name": "_mode"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "argparse.FileType",
    "name": "_bufsize"
   }
  ],
  "name": "_bufsize"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.FileType",
    "name": "_encoding"
   }
  ],
  "name": "_encoding"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "argparse.FileType",
    "name": "_errors"
   }
  ],
  "name": "_errors"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socketserver.BaseServer",
    "name": "address_family"
   }
  ],
  "name": "address_family"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, int]",
    "className": "socketserver.BaseServer",
    "name": "server_address"
   }
  ],
  "name": "server_address"
 },
 {
  "definitions": [
   {
    "annotation": "_socket",
    "className": "socketserver.BaseServer",
    "name": "socket"
   },
   {
    "annotation": "_socket",
    "className": "socketserver.DatagramRequestHandler",
    "name": "socket"
   },
   {
    "annotation": "(_socket | None)",
    "className": "asyncore.dispatcher",
    "name": "socket"
   }
  ],
  "name": "socket"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "socketserver.BaseServer",
    "name": "allow_reuse_address"
   }
  ],
  "name": "allow_reuse_address"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socketserver.BaseServer",
    "name": "request_queue_size"
   },
   {
    "annotation": "int",
    "className": "socketserver.TCPServer",
    "name": "request_queue_size"
   }
  ],
  "name": "request_queue_size"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socketserver.BaseServer",
    "name": "socket_type"
   }
  ],
  "name": "socket_type"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "Self",
      "arg": "self"
     }
    ],
    "className": "socketserver.BaseServer",
    "kwonlyargs": [],
    "name": "RequestHandlerClass",
    "returns": "Callable[[Any, Any, Self], BaseRequestHandler]"
   }
  ],
  "name": "RequestHandlerClass"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "socketserver.TCPServer",
    "name": "allow_reuse_port"
   }
  ],
  "name": "allow_reuse_port"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[int]",
    "className": "socketserver.UDPServer",
    "name": "max_packet_size"
   }
  ],
  "name": "max_packet_size"
 },
 {
  "definitions": [
   {
    "annotation": "(set[int] | None)",
    "className": "socketserver.ForkingMixIn",
    "name": "active_children"
   }
  ],
  "name": "active_children"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "socketserver.ForkingMixIn",
    "name": "max_children"
   }
  ],
  "name": "max_children"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "socketserver.ThreadingMixIn",
    "name": "daemon_threads"
   }
  ],
  "name": "daemon_threads"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "socketserver.BaseRequestHandler",
    "name": "request"
   }
  ],
  "name": "request"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "socketserver.BaseRequestHandler",
    "name": "client_address"
   }
  ],
  "name": "client_address"
 },
 {
  "definitions": [
   {
    "annotation": "BaseServer",
    "className": "socketserver.BaseRequestHandler",
    "name": "server"
   }
  ],
  "name": "server"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[int]",
    "className": "socketserver.StreamRequestHandler",
    "name": "rbufsize"
   }
  ],
  "name": "rbufsize"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[int]",
    "className": "socketserver.StreamRequestHandler",
    "name": "wbufsize"
   }
  ],
  "name": "wbufsize"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[bool]",
    "className": "socketserver.StreamRequestHandler",
    "name": "disable_nagle_algorithm"
   }
  ],
  "name": "disable_nagle_algorithm"
 },
 {
  "definitions": [
   {
    "annotation": "_socket",
    "className": "socketserver.StreamRequestHandler",
    "name": "connection"
   }
  ],
  "name": "connection"
 },
 {
  "definitions": [
   {
    "annotation": "BinaryIO",
    "className": "socketserver.StreamRequestHandler",
    "name": "rfile"
   },
   {
    "annotation": "BinaryIO",
    "className": "socketserver.DatagramRequestHandler",
    "name": "rfile"
   }
  ],
  "name": "rfile"
 },
 {
  "definitions": [
   {
    "annotation": "BinaryIO",
    "className": "socketserver.StreamRequestHandler",
    "name": "wfile"
   },
   {
    "annotation": "BinaryIO",
    "className": "socketserver.DatagramRequestHandler",
    "name": "wfile"
   }
  ],
  "name": "wfile"
 },
 {
  "definitions": [
   {
    "annotation": "_socket",
    "className": "socketserver.DatagramRequestHandler",
    "name": "packet"
   }
  ],
  "name": "packet"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "array.array",
    "kwonlyargs": [],
    "name": "typecode",
    "returns": "_TypeCode"
   }
  ],
  "name": "typecode"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "array.array",
    "kwonlyargs": [],
    "name": "itemsize",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "itemsize",
    "returns": "int"
   }
  ],
  "name": "itemsize"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "inspect.BlockFinder",
    "name": "indent"
   },
   {
    "annotation": "int",
    "className": "modulefinder.ModuleFinder",
    "name": "indent"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "indent",
    "returns": "(int | None)"
   },
   {
    "annotation": "int",
    "className": "doctest.Example",
    "name": "indent"
   }
  ],
  "name": "indent"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "inspect.BlockFinder",
    "name": "islambda"
   }
  ],
  "name": "islambda"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "inspect.BlockFinder",
    "name": "started"
   }
  ],
  "name": "started"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "inspect.BlockFinder",
    "name": "passline"
   }
  ],
  "name": "passline"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "inspect.BlockFinder",
    "name": "indecorator"
   }
  ],
  "name": "indecorator"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "inspect.BlockFinder",
    "name": "decoratorhasargs"
   }
  ],
  "name": "decoratorhasargs"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "inspect.BlockFinder",
    "name": "last"
   },
   {
    "annotation": "str",
    "className": "nntplib.GroupInfo",
    "name": "last"
   }
  ],
  "name": "last"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Signature",
    "kwonlyargs": [],
    "name": "parameters",
    "returns": "types.MappingProxyType[str, Parameter]"
   }
  ],
  "name": "parameters"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.Signature",
    "kwonlyargs": [],
    "name": "return_annotation",
    "returns": "Any"
   }
  ],
  "name": "return_annotation"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Literal[_ParameterKind.POSITIONAL_ONLY]]",
    "className": "inspect.Parameter",
    "name": "POSITIONAL_ONLY"
   }
  ],
  "name": "POSITIONAL_ONLY"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Literal[_ParameterKind.POSITIONAL_OR_KEYWORD]]",
    "className": "inspect.Parameter",
    "name": "POSITIONAL_OR_KEYWORD"
   }
  ],
  "name": "POSITIONAL_OR_KEYWORD"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Literal[_ParameterKind.VAR_POSITIONAL]]",
    "className": "inspect.Parameter",
    "name": "VAR_POSITIONAL"
   }
  ],
  "name": "VAR_POSITIONAL"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Literal[_ParameterKind.KEYWORD_ONLY]]",
    "className": "inspect.Parameter",
    "name": "KEYWORD_ONLY"
   }
  ],
  "name": "KEYWORD_ONLY"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Literal[_ParameterKind.VAR_KEYWORD]]",
    "className": "inspect.Parameter",
    "name": "VAR_KEYWORD"
   }
  ],
  "name": "VAR_KEYWORD"
 },
 {
  "definitions": [
   {
    "annotation": "OrderedDict[str, Any]",
    "className": "inspect.BoundArguments",
    "name": "arguments"
   }
  ],
  "name": "arguments"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "inspect.BoundArguments",
    "kwonlyargs": [],
    "name": "signature",
    "returns": "Signature"
   }
  ],
  "name": "signature"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "inspect.Arguments",
    "name": "varargs"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.ArgSpec",
    "name": "varargs"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.FullArgSpec",
    "name": "varargs"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.ArgInfo",
    "name": "varargs"
   }
  ],
  "name": "varargs"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "inspect.Arguments",
    "name": "varkw"
   },
   {
    "annotation": "(str | None)",
    "className": "inspect.FullArgSpec",
    "name": "varkw"
   }
  ],
  "name": "varkw"
 },
 {
  "definitions": [
   {
    "annotation": "(dict[str, Any] | None)",
    "className": "inspect.FullArgSpec",
    "name": "kwonlydefaults"
   }
  ],
  "name": "kwonlydefaults"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "inspect.FullArgSpec",
    "name": "annotations"
   }
  ],
  "name": "annotations"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "inspect.ArgInfo",
    "name": "locals"
   },
   {
    "annotation": "Mapping[str, Any]",
    "className": "code.InteractiveInterpreter",
    "name": "locals"
   },
   {
    "annotation": "(dict[str, str] | None)",
    "className": "traceback.FrameSummary",
    "name": "locals"
   }
  ],
  "name": "locals"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[str, Any]",
    "className": "inspect.ClosureVars",
    "name": "nonlocals"
   }
  ],
  "name": "nonlocals"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[str, Any]",
    "className": "inspect.ClosureVars",
    "name": "globals"
   }
  ],
  "name": "globals"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[str, Any]",
    "className": "inspect.ClosureVars",
    "name": "builtins"
   }
  ],
  "name": "builtins"
 },
 {
  "definitions": [
   {
    "annotation": "AbstractSet[str]",
    "className": "inspect.ClosureVars",
    "name": "unbound"
   }
  ],
  "name": "unbound"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "inspect.Traceback",
    "name": "function"
   },
   {
    "annotation": "str",
    "className": "inspect.FrameInfo",
    "name": "function"
   }
  ],
  "name": "function"
 },
 {
  "definitions": [
   {
    "annotation": "(list[str] | None)",
    "className": "inspect.Traceback",
    "name": "code_context"
   },
   {
    "annotation": "(list[str] | None)",
    "className": "inspect.FrameInfo",
    "name": "code_context"
   }
  ],
  "name": "code_context"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "inspect.Traceback",
    "name": "index"
   },
   {
    "annotation": "(int | None)",
    "className": "inspect.FrameInfo",
    "name": "index"
   },
   {
    "annotation": "int",
    "className": "sre_parse.Tokenizer",
    "name": "index"
   }
  ],
  "name": "index"
 },
 {
  "definitions": [
   {
    "annotation": "FrameType",
    "className": "inspect.FrameInfo",
    "name": "frame"
   }
  ],
  "name": "frame"
 },
 {
  "definitions": [
   {
    "annotation": "type",
    "className": "inspect.Attribute",
    "name": "defining_class"
   }
  ],
  "name": "defining_class"
 },
 {
  "definitions": [
   {
    "annotation": "_Object",
    "className": "inspect.Attribute",
    "name": "object"
   },
   {
    "annotation": "bytes",
    "className": "builtins.UnicodeDecodeError",
    "name": "object"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeEncodeError",
    "name": "object"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeTranslateError",
    "name": "object"
   },
   {
    "annotation": "(_object | None)",
    "className": "sys.UnraisableHookArgs",
    "name": "object"
   }
  ],
  "name": "object"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_namp",
    "returns": "str"
   }
  ],
  "name": "sp_namp"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_pwdp",
    "returns": "str"
   }
  ],
  "name": "sp_pwdp"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_lstchg",
    "returns": "int"
   }
  ],
  "name": "sp_lstchg"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_min",
    "returns": "int"
   }
  ],
  "name": "sp_min"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_max",
    "returns": "int"
   }
  ],
  "name": "sp_max"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_warn",
    "returns": "int"
   }
  ],
  "name": "sp_warn"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_inact",
    "returns": "int"
   }
  ],
  "name": "sp_inact"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_expire",
    "returns": "int"
   }
  ],
  "name": "sp_expire"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "spwd.struct_spwd",
    "kwonlyargs": [],
    "name": "sp_flag",
    "returns": "int"
   }
  ],
  "name": "sp_flag"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[..., Any]",
    "className": "io.IOBase",
    "name": "read"
   }
  ],
  "name": "read"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[..., Any]",
    "className": "io.IOBase",
    "name": "write"
   }
  ],
  "name": "write"
 },
 {
  "definitions": [
   {
    "annotation": "RawIOBase",
    "className": "io.BufferedIOBase",
    "name": "raw"
   },
   {
    "annotation": "bytes",
    "className": "ctypes.Array",
    "name": "raw"
   }
  ],
  "name": "raw"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.FileIO",
    "kwonlyargs": [],
    "name": "closefd",
    "returns": "bool"
   }
  ],
  "name": "closefd"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "io.TextIOBase",
    "name": "encoding"
   },
   {
    "annotation": "(str | None)",
    "className": "logging.FileHandler",
    "name": "encoding"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeDecodeError",
    "name": "encoding"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeEncodeError",
    "name": "encoding"
   },
   {
    "annotation": "None",
    "className": "builtins.UnicodeTranslateError",
    "name": "encoding"
   },
   {
    "annotation": "str",
    "className": "cgi.FieldStorage",
    "name": "encoding"
   },
   {
    "annotation": "(str | None)",
    "className": "tarfile.TarFile",
    "name": "encoding"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tempfile.SpooledTemporaryFile",
    "kwonlyargs": [],
    "name": "encoding",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "nntplib.NNTP",
    "name": "encoding"
   },
   {
    "annotation": "(str | None)",
    "className": "tokenize.Untokenizer",
    "name": "encoding"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.TextIO",
    "kwonlyargs": [],
    "name": "encoding",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "poplib.POP3",
    "name": "encoding"
   },
   {
    "annotation": "str",
    "className": "ftplib.FTP",
    "name": "encoding"
   }
  ],
  "name": "encoding"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "io.TextIOBase",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "cgi.FieldStorage",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "tarfile.TarFile",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "nntplib.NNTP",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "codecs.IncrementalEncoder",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "codecs.IncrementalDecoder",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "codecs.StreamWriter",
    "name": "errors"
   },
   {
    "annotation": "str",
    "className": "codecs.StreamReader",
    "name": "errors"
   },
   {
    "annotation": "list[tuple[int, str]]",
    "className": "configparser.ParsingError",
    "name": "errors"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.TextIO",
    "kwonlyargs": [],
    "name": "errors",
    "returns": "(str | None)"
   }
  ],
  "name": "errors"
 },
 {
  "definitions": [
   {
    "annotation": "(str | tuple[str, ...] | None)",
    "className": "io.TextIOBase",
    "name": "newlines"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.IncrementalNewlineDecoder",
    "kwonlyargs": [],
    "name": "newlines",
    "returns": "(str | tuple[str, ...] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tempfile.SpooledTemporaryFile",
    "kwonlyargs": [],
    "name": "newlines",
    "returns": "(str | tuple[str, ...] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.TextIO",
    "kwonlyargs": [],
    "name": "newlines",
    "returns": "Any"
   },
   {
    "annotation": "(list[bytes] | None)",
    "className": "zipfile.ZipExtFile",
    "name": "newlines"
   }
  ],
  "name": "newlines"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.TextIOWrapper",
    "kwonlyargs": [],
    "name": "buffer",
    "returns": "BinaryIO"
   },
   {
    "annotation": "list[str]",
    "className": "code.InteractiveConsole",
    "name": "buffer"
   },
   {
    "annotation": "str",
    "className": "codecs.BufferedIncrementalEncoder",
    "name": "buffer"
   },
   {
    "annotation": "bytes",
    "className": "codecs.BufferedIncrementalDecoder",
    "name": "buffer"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.TextIO",
    "kwonlyargs": [],
    "name": "buffer",
    "returns": "BinaryIO"
   }
  ],
  "name": "buffer"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "io.TextIOWrapper",
    "kwonlyargs": [],
    "name": "line_buffering",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.TextIO",
    "kwonlyargs": [],
    "name": "line_buffering",
    "returns": "int"
   }
  ],
  "name": "line_buffering"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "asynchat.async_chat",
    "name": "ac_in_buffer_size"
   }
  ],
  "name": "ac_in_buffer_size"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "asynchat.async_chat",
    "name": "ac_out_buffer_size"
   }
  ],
  "name": "ac_out_buffer_size"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ipaddress.IPv6Address",
    "kwonlyargs": [],
    "name": "ipv4_mapped",
    "returns": "(IPv4Address | None)"
   }
  ],
  "name": "ipv4_mapped"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ipaddress.IPv6Address",
    "kwonlyargs": [],
    "name": "is_site_local",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ipaddress.IPv6Network",
    "kwonlyargs": [],
    "name": "is_site_local",
    "returns": "bool"
   }
  ],
  "name": "is_site_local"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ipaddress.IPv6Address",
    "kwonlyargs": [],
    "name": "sixtofour",
    "returns": "(IPv4Address | None)"
   }
  ],
  "name": "sixtofour"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ipaddress.IPv6Address",
    "kwonlyargs": [],
    "name": "teredo",
    "returns": "(tuple[IPv4Address, IPv4Address] | None)"
   }
  ],
  "name": "teredo"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "sre_constants.error",
    "name": "pos"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "sre_parse.Tokenizer",
    "kwonlyargs": [],
    "name": "pos",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "pos",
    "returns": "int"
   }
  ],
  "name": "pos"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "sre_constants.error",
    "name": "colno"
   }
  ],
  "name": "colno"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "asyncore.dispatcher",
    "name": "connected"
   }
  ],
  "name": "connected"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "asyncore.dispatcher",
    "name": "accepting"
   }
  ],
  "name": "accepting"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "asyncore.dispatcher",
    "name": "connecting"
   }
  ],
  "name": "connecting"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "asyncore.dispatcher",
    "name": "closing"
   }
  ],
  "name": "closing"
 },
 {
  "definitions": [
   {
    "annotation": "frozenset[str]",
    "className": "asyncore.dispatcher",
    "name": "ignore_log_types"
   }
  ],
  "name": "ignore_log_types"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "sre_parse.SubPattern",
    "name": "width"
   },
   {
    "annotation": "int",
    "className": "textwrap.TextWrapper",
    "name": "width"
   },
   {
    "annotation": "int",
    "className": "optparse.HelpFormatter",
    "name": "width"
   },
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "width"
   }
  ],
  "name": "width"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "sre_parse.Tokenizer",
    "name": "istext"
   }
  ],
  "name": "istext"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "sre_parse.Tokenizer",
    "name": "string"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "string",
    "returns": "AnyStr"
   }
  ],
  "name": "string"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "sre_parse.Tokenizer",
    "name": "decoded_string"
   }
  ],
  "name": "decoded_string"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "sre_parse.Tokenizer",
    "name": "next"
   },
   {
    "annotation": "int",
    "className": "bdb.Breakpoint",
    "name": "next"
   }
  ],
  "name": "next"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.SSLError",
    "name": "library"
   }
  ],
  "name": "library"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.SSLError",
    "name": "reason"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeDecodeError",
    "name": "reason"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeEncodeError",
    "name": "reason"
   },
   {
    "annotation": "str",
    "className": "builtins.UnicodeTranslateError",
    "name": "reason"
   }
  ],
  "name": "reason"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLCertVerificationError",
    "name": "verify_code"
   }
  ],
  "name": "verify_code"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.SSLCertVerificationError",
    "name": "verify_message"
   }
  ],
  "name": "verify_message"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "cafile"
   }
  ],
  "name": "cafile"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "capath"
   }
  ],
  "name": "capath"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "openssl_cafile_env"
   }
  ],
  "name": "openssl_cafile_env"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "openssl_cafile"
   }
  ],
  "name": "openssl_cafile"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "openssl_capath_env"
   }
  ],
  "name": "openssl_capath_env"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ssl.DefaultVerifyPaths",
    "name": "openssl_capath"
   }
  ],
  "name": "openssl_capath"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyMode",
    "name": "CERT_NONE"
   }
  ],
  "name": "CERT_NONE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyMode",
    "name": "CERT_OPTIONAL"
   }
  ],
  "name": "CERT_OPTIONAL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyMode",
    "name": "CERT_REQUIRED"
   }
  ],
  "name": "CERT_REQUIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyFlags",
    "name": "VERIFY_DEFAULT"
   }
  ],
  "name": "VERIFY_DEFAULT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyFlags",
    "name": "VERIFY_CRL_CHECK_LEAF"
   }
  ],
  "name": "VERIFY_CRL_CHECK_LEAF"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyFlags",
    "name": "VERIFY_CRL_CHECK_CHAIN"
   }
  ],
  "name": "VERIFY_CRL_CHECK_CHAIN"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyFlags",
    "name": "VERIFY_X509_STRICT"
   }
  ],
  "name": "VERIFY_X509_STRICT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.VerifyFlags",
    "name": "VERIFY_X509_TRUSTED_FIRST"
   }
  ],
  "name": "VERIFY_X509_TRUSTED_FIRST"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_ALL"
   }
  ],
  "name": "OP_ALL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_SSLv2"
   }
  ],
  "name": "OP_NO_SSLv2"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_SSLv3"
   }
  ],
  "name": "OP_NO_SSLv3"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_TLSv1"
   }
  ],
  "name": "OP_NO_TLSv1"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_TLSv1_1"
   }
  ],
  "name": "OP_NO_TLSv1_1"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_TLSv1_2"
   }
  ],
  "name": "OP_NO_TLSv1_2"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_TLSv1_3"
   }
  ],
  "name": "OP_NO_TLSv1_3"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_CIPHER_SERVER_PREFERENCE"
   }
  ],
  "name": "OP_CIPHER_SERVER_PREFERENCE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_SINGLE_DH_USE"
   }
  ],
  "name": "OP_SINGLE_DH_USE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_SINGLE_ECDH_USE"
   }
  ],
  "name": "OP_SINGLE_ECDH_USE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_COMPRESSION"
   }
  ],
  "name": "OP_NO_COMPRESSION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.Options",
    "name": "OP_NO_TICKET"
   }
  ],
  "name": "OP_NO_TICKET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_ACCESS_DENIED"
   }
  ],
  "name": "ALERT_DESCRIPTION_ACCESS_DENIED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE"
   }
  ],
  "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
   }
  ],
  "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
   }
  ],
  "name": "ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_BAD_RECORD_MAC"
   }
  ],
  "name": "ALERT_DESCRIPTION_BAD_RECORD_MAC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
   }
  ],
  "name": "ALERT_DESCRIPTION_CERTIFICATE_EXPIRED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
   }
  ],
  "name": "ALERT_DESCRIPTION_CERTIFICATE_REVOKED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
   }
  ],
  "name": "ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
   }
  ],
  "name": "ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_CLOSE_NOTIFY"
   }
  ],
  "name": "ALERT_DESCRIPTION_CLOSE_NOTIFY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_DECODE_ERROR"
   }
  ],
  "name": "ALERT_DESCRIPTION_DECODE_ERROR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
   }
  ],
  "name": "ALERT_DESCRIPTION_DECOMPRESSION_FAILURE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_DECRYPT_ERROR"
   }
  ],
  "name": "ALERT_DESCRIPTION_DECRYPT_ERROR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
   }
  ],
  "name": "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
   }
  ],
  "name": "ALERT_DESCRIPTION_ILLEGAL_PARAMETER"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
   }
  ],
  "name": "ALERT_DESCRIPTION_INSUFFICIENT_SECURITY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_INTERNAL_ERROR"
   }
  ],
  "name": "ALERT_DESCRIPTION_INTERNAL_ERROR"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_NO_RENEGOTIATION"
   }
  ],
  "name": "ALERT_DESCRIPTION_NO_RENEGOTIATION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_PROTOCOL_VERSION"
   }
  ],
  "name": "ALERT_DESCRIPTION_PROTOCOL_VERSION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_RECORD_OVERFLOW"
   }
  ],
  "name": "ALERT_DESCRIPTION_RECORD_OVERFLOW"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNEXPECTED_MESSAGE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNKNOWN_CA"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNKNOWN_CA"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNRECOGNIZED_NAME"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
   }
  ],
  "name": "ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.AlertDescription",
    "name": "ALERT_DESCRIPTION_USER_CANCELLED"
   }
  ],
  "name": "ALERT_DESCRIPTION_USER_CANCELLED"
 },
 {
  "definitions": [
   {
    "annotation": "_ASN1Object",
    "className": "ssl.Purpose",
    "name": "SERVER_AUTH"
   }
  ],
  "name": "SERVER_AUTH"
 },
 {
  "definitions": [
   {
    "annotation": "_ASN1Object",
    "className": "ssl.Purpose",
    "name": "CLIENT_AUTH"
   }
  ],
  "name": "CLIENT_AUTH"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "ssl.SSLSocket",
    "name": "server_side"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ssl.SSLObject",
    "kwonlyargs": [],
    "name": "server_side",
    "returns": "bool"
   }
  ],
  "name": "server_side"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "ssl.SSLSocket",
    "name": "server_hostname"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ssl.SSLObject",
    "kwonlyargs": [],
    "name": "server_hostname",
    "returns": "(str | None)"
   }
  ],
  "name": "server_hostname"
 },
 {
  "definitions": [
   {
    "annotation": "(SSLSession | None)",
    "className": "ssl.SSLSocket",
    "name": "session"
   },
   {
    "annotation": "(SSLSession | None)",
    "className": "ssl.SSLObject",
    "name": "session"
   }
  ],
  "name": "session"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ssl.SSLSocket",
    "kwonlyargs": [],
    "name": "session_reused",
    "returns": "(bool | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ssl.SSLObject",
    "kwonlyargs": [],
    "name": "session_reused",
    "returns": "bool"
   }
  ],
  "name": "session_reused"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "MINIMUM_SUPPORTED"
   }
  ],
  "name": "MINIMUM_SUPPORTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "MAXIMUM_SUPPORTED"
   }
  ],
  "name": "MAXIMUM_SUPPORTED"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "SSLv3"
   }
  ],
  "name": "SSLv3"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "TLSv1"
   }
  ],
  "name": "TLSv1"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "TLSv1_1"
   }
  ],
  "name": "TLSv1_1"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "TLSv1_2"
   }
  ],
  "name": "TLSv1_2"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.TLSVersion",
    "name": "TLSv1_3"
   }
  ],
  "name": "TLSv1_3"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "ssl.SSLContext",
    "name": "check_hostname"
   }
  ],
  "name": "check_hostname"
 },
 {
  "definitions": [
   {
    "annotation": "Options",
    "className": "ssl.SSLContext",
    "name": "options"
   },
   {
    "annotation": "dict[int, bool]",
    "className": "doctest.Example",
    "name": "options"
   }
  ],
  "name": "options"
 },
 {
  "definitions": [
   {
    "annotation": "VerifyFlags",
    "className": "ssl.SSLContext",
    "name": "verify_flags"
   }
  ],
  "name": "verify_flags"
 },
 {
  "definitions": [
   {
    "annotation": "VerifyMode",
    "className": "ssl.SSLContext",
    "name": "verify_mode"
   }
  ],
  "name": "verify_mode"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ssl.SSLContext",
    "kwonlyargs": [],
    "name": "protocol",
    "returns": "_SSLMethod"
   }
  ],
  "name": "protocol"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.MemoryBIO",
    "name": "pending"
   }
  ],
  "name": "pending"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLSession",
    "name": "ticket_lifetime_hint"
   }
  ],
  "name": "ticket_lifetime_hint"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "ssl.SSLSession",
    "name": "has_ticket"
   }
  ],
  "name": "has_ticket"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_EOF"
   }
  ],
  "name": "SSL_ERROR_EOF"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_INVALID_ERROR_CODE"
   }
  ],
  "name": "SSL_ERROR_INVALID_ERROR_CODE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_SSL"
   }
  ],
  "name": "SSL_ERROR_SSL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_SYSCALL"
   }
  ],
  "name": "SSL_ERROR_SYSCALL"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_WANT_CONNECT"
   }
  ],
  "name": "SSL_ERROR_WANT_CONNECT"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_WANT_READ"
   }
  ],
  "name": "SSL_ERROR_WANT_READ"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_WANT_WRITE"
   }
  ],
  "name": "SSL_ERROR_WANT_WRITE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_WANT_X509_LOOKUP"
   }
  ],
  "name": "SSL_ERROR_WANT_X509_LOOKUP"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ssl.SSLErrorNumber",
    "name": "SSL_ERROR_ZERO_RETURN"
   }
  ],
  "name": "SSL_ERROR_ZERO_RETURN"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "_csv.Dialect",
    "name": "delimiter"
   },
   {
    "annotation": "str",
    "className": "string.Template",
    "name": "delimiter"
   },
   {
    "annotation": "str",
    "className": "csv.excel",
    "name": "delimiter"
   },
   {
    "annotation": "str",
    "className": "csv.excel_tab",
    "name": "delimiter"
   },
   {
    "annotation": "str",
    "className": "csv.unix_dialect",
    "name": "delimiter"
   }
  ],
  "name": "delimiter"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "_csv.Dialect",
    "name": "quotechar"
   },
   {
    "annotation": "str",
    "className": "csv.excel",
    "name": "quotechar"
   },
   {
    "annotation": "str",
    "className": "csv.unix_dialect",
    "name": "quotechar"
   }
  ],
  "name": "quotechar"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "_csv.Dialect",
    "name": "escapechar"
   }
  ],
  "name": "escapechar"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "_csv.Dialect",
    "name": "doublequote"
   },
   {
    "annotation": "bool",
    "className": "csv.excel",
    "name": "doublequote"
   },
   {
    "annotation": "bool",
    "className": "csv.unix_dialect",
    "name": "doublequote"
   }
  ],
  "name": "doublequote"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "_csv.Dialect",
    "name": "skipinitialspace"
   },
   {
    "annotation": "bool",
    "className": "csv.excel",
    "name": "skipinitialspace"
   },
   {
    "annotation": "bool",
    "className": "csv.unix_dialect",
    "name": "skipinitialspace"
   }
  ],
  "name": "skipinitialspace"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "_csv.Dialect",
    "name": "lineterminator"
   },
   {
    "annotation": "str",
    "className": "csv.excel",
    "name": "lineterminator"
   },
   {
    "annotation": "str",
    "className": "csv.unix_dialect",
    "name": "lineterminator"
   }
  ],
  "name": "lineterminator"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_csv.Dialect",
    "name": "quoting"
   },
   {
    "annotation": "int",
    "className": "csv.excel",
    "name": "quoting"
   },
   {
    "annotation": "int",
    "className": "csv.unix_dialect",
    "name": "quoting"
   }
  ],
  "name": "quoting"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_csv.Dialect",
    "name": "strict"
   },
   {
    "annotation": "bool",
    "className": "_json.make_scanner",
    "name": "strict"
   }
  ],
  "name": "strict"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "statistics.NormalDist",
    "kwonlyargs": [],
    "name": "mean",
    "returns": "float"
   }
  ],
  "name": "mean"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "statistics.NormalDist",
    "kwonlyargs": [],
    "name": "median",
    "returns": "float"
   }
  ],
  "name": "median"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "statistics.NormalDist",
    "kwonlyargs": [],
    "name": "stdev",
    "returns": "float"
   }
  ],
  "name": "stdev"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "statistics.NormalDist",
    "kwonlyargs": [],
    "name": "variance",
    "returns": "float"
   }
  ],
  "name": "variance"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "statistics.LinearRegression",
    "name": "slope"
   }
  ],
  "name": "slope"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "statistics.LinearRegression",
    "name": "intercept"
   }
  ],
  "name": "intercept"
 },
 {
  "definitions": [
   {
    "annotation": "(set[str] | None)",
    "className": "bdb.Bdb",
    "name": "skip"
   }
  ],
  "name": "skip"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, list[int]]",
    "className": "bdb.Bdb",
    "name": "breaks"
   }
  ],
  "name": "breaks"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "bdb.Bdb",
    "name": "fncache"
   }
  ],
  "name": "fncache"
 },
 {
  "definitions": [
   {
    "annotation": "(FrameType | None)",
    "className": "bdb.Bdb",
    "name": "frame_returning"
   }
  ],
  "name": "frame_returning"
 },
 {
  "definitions": [
   {
    "annotation": "(FrameType | None)",
    "className": "bdb.Bdb",
    "name": "botframe"
   }
  ],
  "name": "botframe"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "bdb.Bdb",
    "name": "quitting"
   }
  ],
  "name": "quitting"
 },
 {
  "definitions": [
   {
    "annotation": "(FrameType | None)",
    "className": "bdb.Bdb",
    "name": "stopframe"
   }
  ],
  "name": "stopframe"
 },
 {
  "definitions": [
   {
    "annotation": "(FrameType | None)",
    "className": "bdb.Bdb",
    "name": "returnframe"
   }
  ],
  "name": "returnframe"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "bdb.Bdb",
    "name": "stoplineno"
   }
  ],
  "name": "stoplineno"
 },
 {
  "definitions": [
   {
    "annotation": "dict[tuple[str, int], list[Breakpoint]]",
    "className": "bdb.Breakpoint",
    "name": "bplist"
   }
  ],
  "name": "bplist"
 },
 {
  "definitions": [
   {
    "annotation": "list[Breakpoint | None]",
    "className": "bdb.Breakpoint",
    "name": "bpbynumber"
   }
  ],
  "name": "bpbynumber"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "bdb.Breakpoint",
    "name": "funcname"
   }
  ],
  "name": "funcname"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "bdb.Breakpoint",
    "name": "func_first_executable_line"
   }
  ],
  "name": "func_first_executable_line"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "bdb.Breakpoint",
    "name": "line"
   },
   {
    "annotation": "str",
    "className": "configparser.MissingSectionHeaderError",
    "name": "line"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "traceback.FrameSummary",
    "kwonlyargs": [],
    "name": "line",
    "returns": "(str | None)"
   },
   {
    "annotation": "(str | None)",
    "className": "warnings.WarningMessage",
    "name": "line"
   }
  ],
  "name": "line"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "bdb.Breakpoint",
    "name": "temporary"
   }
  ],
  "name": "temporary"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "bdb.Breakpoint",
    "name": "cond"
   }
  ],
  "name": "cond"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "bdb.Breakpoint",
    "name": "enabled"
   }
  ],
  "name": "enabled"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "bdb.Breakpoint",
    "name": "ignore"
   },
   {
    "annotation": "Sequence[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "ignore"
   }
  ],
  "name": "ignore"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "bdb.Breakpoint",
    "name": "hits"
   }
  ],
  "name": "hits"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "bdb.Breakpoint",
    "name": "number"
   },
   {
    "annotation": "int",
    "className": "nntplib.ArticleInfo",
    "name": "number"
   }
  ],
  "name": "number"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "string.Template",
    "name": "template"
   }
  ],
  "name": "template"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "string.Template",
    "name": "idpattern"
   }
  ],
  "name": "idpattern"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "string.Template",
    "name": "braceidpattern"
   }
  ],
  "name": "braceidpattern"
 },
 {
  "definitions": [
   {
    "annotation": "RegexFlag",
    "className": "string.Template",
    "name": "flags"
   },
   {
    "annotation": "dict[_TrapType, bool]",
    "className": "_decimal.Context",
    "name": "flags"
   },
   {
    "annotation": "int",
    "className": "codeop.Compile",
    "name": "flags"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Pattern",
    "kwonlyargs": [],
    "name": "flags",
    "returns": "int"
   }
  ],
  "name": "flags"
 },
 {
  "definitions": [
   {
    "annotation": "list[Filter]",
    "className": "logging.Filterer",
    "name": "filters"
   }
  ],
  "name": "filters"
 },
 {
  "definitions": [
   {
    "annotation": "RootLogger",
    "className": "logging.Manager",
    "name": "root"
   },
   {
    "annotation": "ClassVar[RootLogger]",
    "className": "logging.Logger",
    "name": "root"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "root",
    "returns": "str"
   }
  ],
  "name": "root"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "logging.Manager",
    "name": "disable"
   }
  ],
  "name": "disable"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "logging.Manager",
    "name": "emittedNoHandlerWarning"
   }
  ],
  "name": "emittedNoHandlerWarning"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Logger | PlaceHolder]",
    "className": "logging.Manager",
    "name": "loggerDict"
   }
  ],
  "name": "loggerDict"
 },
 {
  "definitions": [
   {
    "annotation": "(type[Logger] | None)",
    "className": "logging.Manager",
    "name": "loggerClass"
   }
  ],
  "name": "loggerClass"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[..., LogRecord] | None)",
    "className": "logging.Manager",
    "name": "logRecordFactory"
   }
  ],
  "name": "logRecordFactory"
 },
 {
  "definitions": [
   {
    "annotation": "(Logger | None)",
    "className": "logging.Logger",
    "name": "parent"
   },
   {
    "args": [
     {
      "annotation": "Self",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "parent",
    "returns": "Self"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "zipfile.Path",
    "kwonlyargs": [],
    "name": "parent",
    "returns": "PathLike[str]"
   }
  ],
  "name": "parent"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "logging.Logger",
    "name": "propagate"
   }
  ],
  "name": "propagate"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "logging.Logger",
    "name": "disabled"
   }
  ],
  "name": "disabled"
 },
 {
  "definitions": [
   {
    "annotation": "Manager",
    "className": "logging.Logger",
    "name": "manager"
   },
   {
    "annotation": "Manager",
    "className": "logging.LoggerAdapter",
    "name": "manager"
   }
  ],
  "name": "manager"
 },
 {
  "definitions": [
   {
    "annotation": "(Formatter | None)",
    "className": "logging.Handler",
    "name": "formatter"
   },
   {
    "annotation": "HelpFormatter",
    "className": "optparse.OptionParser",
    "name": "formatter"
   }
  ],
  "name": "formatter"
 },
 {
  "definitions": [
   {
    "annotation": "(threading.Lock | None)",
    "className": "logging.Handler",
    "name": "lock"
   }
  ],
  "name": "lock"
 },
 {
  "definitions": [
   {
    "annotation": "Callable[[float | None], struct_time]",
    "className": "logging.Formatter",
    "name": "converter"
   }
  ],
  "name": "converter"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.Formatter",
    "name": "_fmt"
   },
   {
    "annotation": "str",
    "className": "logging.PercentStyle",
    "name": "_fmt"
   }
  ],
  "name": "_fmt"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.Formatter",
    "name": "datefmt"
   }
  ],
  "name": "datefmt"
 },
 {
  "definitions": [
   {
    "annotation": "PercentStyle",
    "className": "logging.Formatter",
    "name": "_style"
   }
  ],
  "name": "_style"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.Formatter",
    "name": "default_time_format"
   }
  ],
  "name": "default_time_format"
 },
 {
  "definitions": [
   {
    "annotation": "Formatter",
    "className": "logging.BufferingFormatter",
    "name": "linefmt"
   }
  ],
  "name": "linefmt"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "logging.Filter",
    "name": "nlen"
   }
  ],
  "name": "nlen"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "asctime"
   }
  ],
  "name": "asctime"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "logging.LogRecord",
    "name": "created"
   }
  ],
  "name": "created"
 },
 {
  "definitions": [
   {
    "annotation": "(_SysExcInfoType | None)",
    "className": "logging.LogRecord",
    "name": "exc_info"
   },
   {
    "annotation": "ExcInfo",
    "className": "doctest.UnexpectedException",
    "name": "exc_info"
   }
  ],
  "name": "exc_info"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.LogRecord",
    "name": "exc_text"
   }
  ],
  "name": "exc_text"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "funcName"
   }
  ],
  "name": "funcName"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "levelname"
   }
  ],
  "name": "levelname"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "logging.LogRecord",
    "name": "levelno"
   }
  ],
  "name": "levelno"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "logging.LogRecord",
    "name": "msecs"
   }
  ],
  "name": "msecs"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.LogRecord",
    "name": "pathname"
   }
  ],
  "name": "pathname"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.LogRecord",
    "name": "processName"
   }
  ],
  "name": "processName"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "logging.LogRecord",
    "name": "relativeCreated"
   }
  ],
  "name": "relativeCreated"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.LogRecord",
    "name": "stack_info"
   }
  ],
  "name": "stack_info"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "logging.LogRecord",
    "name": "thread"
   }
  ],
  "name": "thread"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "logging.LogRecord",
    "name": "threadName"
   }
  ],
  "name": "threadName"
 },
 {
  "definitions": [
   {
    "annotation": "_L",
    "className": "logging.LoggerAdapter",
    "name": "logger"
   }
  ],
  "name": "logger"
 },
 {
  "definitions": [
   {
    "annotation": "_StreamT",
    "className": "logging.StreamHandler",
    "name": "stream"
   }
  ],
  "name": "stream"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.StreamHandler",
    "name": "terminator"
   }
  ],
  "name": "terminator"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.FileHandler",
    "name": "baseFilename"
   }
  ],
  "name": "baseFilename"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "logging.FileHandler",
    "name": "delay"
   }
  ],
  "name": "delay"
 },
 {
  "definitions": [
   {
    "annotation": "dict[Logger, None]",
    "className": "logging.PlaceHolder",
    "name": "loggerMap"
   }
  ],
  "name": "loggerMap"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.PercentStyle",
    "name": "default_format"
   }
  ],
  "name": "default_format"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.PercentStyle",
    "name": "asctime_format"
   }
  ],
  "name": "asctime_format"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "logging.PercentStyle",
    "name": "asctime_search"
   }
  ],
  "name": "asctime_search"
 },
 {
  "definitions": [
   {
    "annotation": "Template",
    "className": "logging.StringTemplateStyle",
    "name": "_tpl"
   }
  ],
  "name": "_tpl"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "binhex.FInfo",
    "name": "Type"
   }
  ],
  "name": "Type"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "binhex.FInfo",
    "name": "Creator"
   }
  ],
  "name": "Creator"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "binhex.FInfo",
    "name": "Flags"
   }
  ],
  "name": "Flags"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "lzma.LZMADecompressor",
    "kwonlyargs": [],
    "name": "check",
    "returns": "int"
   }
  ],
  "name": "check"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "lzma.LZMADecompressor",
    "kwonlyargs": [],
    "name": "unused_data",
    "returns": "bytes"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "bz2.BZ2Decompressor",
    "kwonlyargs": [],
    "name": "unused_data",
    "returns": "bytes"
   }
  ],
  "name": "unused_data"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "lzma.LZMADecompressor",
    "kwonlyargs": [],
    "name": "needs_input",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "bz2.BZ2Decompressor",
    "kwonlyargs": [],
    "name": "needs_input",
    "returns": "bool"
   }
  ],
  "name": "needs_input"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "struct.Struct",
    "name": "size"
   },
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "size"
   },
   {
    "annotation": "int",
    "className": "tracemalloc.Statistic",
    "name": "size"
   },
   {
    "annotation": "int",
    "className": "tracemalloc.StatisticDiff",
    "name": "size"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Trace",
    "kwonlyargs": [],
    "name": "size",
    "returns": "int"
   },
   {
    "annotation": "int",
    "className": "difflib.Match",
    "name": "size"
   }
  ],
  "name": "size"
 },
 {
  "definitions": [
   {
    "annotation": "(bytes | str)",
    "className": "mailbox.Mailbox",
    "name": "_path"
   }
  ],
  "name": "_path"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[IO[Any]], _MessageT] | None)",
    "className": "mailbox.Mailbox",
    "name": "_factory"
   }
  ],
  "name": "_factory"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "mailbox.Maildir",
    "name": "colon"
   }
  ],
  "name": "colon"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "subprocess.CompletedProcess",
    "name": "returncode"
   },
   {
    "annotation": "int",
    "className": "subprocess.CalledProcessError",
    "name": "returncode"
   },
   {
    "annotation": "int",
    "className": "subprocess.Popen",
    "name": "returncode"
   }
  ],
  "name": "returncode"
 },
 {
  "definitions": [
   {
    "annotation": "_T",
    "className": "subprocess.CompletedProcess",
    "name": "stdout"
   },
   {
    "annotation": "Any",
    "className": "subprocess.TimeoutExpired",
    "name": "stdout"
   },
   {
    "annotation": "Any",
    "className": "subprocess.CalledProcessError",
    "name": "stdout"
   },
   {
    "annotation": "(IO[AnyStr] | None)",
    "className": "subprocess.Popen",
    "name": "stdout"
   },
   {
    "annotation": "IO[str]",
    "className": "cmd.Cmd",
    "name": "stdout"
   }
  ],
  "name": "stdout"
 },
 {
  "definitions": [
   {
    "annotation": "_T",
    "className": "subprocess.CompletedProcess",
    "name": "stderr"
   },
   {
    "annotation": "Any",
    "className": "subprocess.TimeoutExpired",
    "name": "stderr"
   },
   {
    "annotation": "Any",
    "className": "subprocess.CalledProcessError",
    "name": "stderr"
   },
   {
    "annotation": "(IO[AnyStr] | None)",
    "className": "subprocess.Popen",
    "name": "stderr"
   }
  ],
  "name": "stderr"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "subprocess.TimeoutExpired",
    "name": "cmd"
   },
   {
    "annotation": "Any",
    "className": "subprocess.CalledProcessError",
    "name": "cmd"
   }
  ],
  "name": "cmd"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "subprocess.TimeoutExpired",
    "name": "output"
   },
   {
    "annotation": "Any",
    "className": "subprocess.CalledProcessError",
    "name": "output"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pydoc.Helper",
    "kwonlyargs": [],
    "name": "output",
    "returns": "IO[str]"
   }
  ],
  "name": "output"
 },
 {
  "definitions": [
   {
    "annotation": "(IO[AnyStr] | None)",
    "className": "subprocess.Popen",
    "name": "stdin"
   },
   {
    "annotation": "IO[str]",
    "className": "cmd.Cmd",
    "name": "stdin"
   }
  ],
  "name": "stdin"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "subprocess.Popen",
    "name": "pid"
   }
  ],
  "name": "pid"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "subprocess.Popen",
    "name": "universal_newlines"
   }
  ],
  "name": "universal_newlines"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "builtins.object",
    "name": "__doc__"
   }
  ],
  "name": "__doc__"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "builtins.object",
    "name": "__dict__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__dict__",
    "returns": "types.MappingProxyType[str, Any]"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "builtins.function",
    "name": "__dict__"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "types.FunctionType",
    "name": "__dict__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.ModuleType",
    "kwonlyargs": [],
    "name": "__dict__",
    "returns": "dict[str, Any]"
   }
  ],
  "name": "__dict__"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "builtins.object",
    "name": "__module__"
   },
   {
    "annotation": "str",
    "className": "builtins.type",
    "name": "__module__"
   },
   {
    "annotation": "str",
    "className": "builtins.function",
    "name": "__module__"
   },
   {
    "annotation": "str",
    "className": "types.FunctionType",
    "name": "__module__"
   }
  ],
  "name": "__module__"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "builtins.object",
    "name": "__annotations__"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "builtins.function",
    "name": "__annotations__"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "types.FunctionType",
    "name": "__annotations__"
   }
  ],
  "name": "__annotations__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "Self",
      "arg": "self"
     }
    ],
    "className": "builtins.object",
    "kwonlyargs": [],
    "name": "__class__",
    "returns": "type[Self]"
   }
  ],
  "name": "__class__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.staticmethod",
    "kwonlyargs": [],
    "name": "__func__",
    "returns": "Callable[..., _R_co]"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.classmethod",
    "kwonlyargs": [],
    "name": "__func__",
    "returns": "Callable[..., _R_co]"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__func__",
    "returns": "_StaticFunctionType"
   }
  ],
  "name": "__func__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__base__",
    "returns": "type"
   }
  ],
  "name": "__base__"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[type, ...]",
    "className": "builtins.type",
    "name": "__bases__"
   }
  ],
  "name": "__bases__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__basicsize__",
    "returns": "int"
   }
  ],
  "name": "__basicsize__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__dictoffset__",
    "returns": "int"
   }
  ],
  "name": "__dictoffset__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__flags__",
    "returns": "int"
   }
  ],
  "name": "__flags__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__itemsize__",
    "returns": "int"
   }
  ],
  "name": "__itemsize__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__mro__",
    "returns": "tuple[type, ...]"
   }
  ],
  "name": "__mro__"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "builtins.type",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "builtins.function",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "types.FunctionType",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "types.ModuleType",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "types.GeneratorType",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "types.AsyncGeneratorType",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "types.CoroutineType",
    "name": "__name__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.BuiltinFunctionType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.WrapperDescriptorType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodWrapperType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodDescriptorType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.ClassMethodDescriptorType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GetSetDescriptorType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MemberDescriptorType",
    "kwonlyargs": [],
    "name": "__name__",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "typing.TypeVar",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "typing.ParamSpec",
    "name": "__name__"
   },
   {
    "annotation": "str",
    "className": "typing.Coroutine",
    "name": "__name__"
   }
  ],
  "name": "__name__"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "builtins.type",
    "name": "__qualname__"
   },
   {
    "annotation": "str",
    "className": "builtins.function",
    "name": "__qualname__"
   },
   {
    "annotation": "str",
    "className": "types.FunctionType",
    "name": "__qualname__"
   },
   {
    "annotation": "str",
    "className": "types.GeneratorType",
    "name": "__qualname__"
   },
   {
    "annotation": "str",
    "className": "types.AsyncGeneratorType",
    "name": "__qualname__"
   },
   {
    "annotation": "str",
    "className": "types.CoroutineType",
    "name": "__qualname__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.BuiltinFunctionType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.WrapperDescriptorType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodWrapperType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodDescriptorType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.ClassMethodDescriptorType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GetSetDescriptorType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MemberDescriptorType",
    "kwonlyargs": [],
    "name": "__qualname__",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "typing.Coroutine",
    "name": "__qualname__"
   }
  ],
  "name": "__qualname__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__text_signature__",
    "returns": "(str | None)"
   }
  ],
  "name": "__text_signature__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.type",
    "kwonlyargs": [],
    "name": "__weakrefoffset__",
    "returns": "int"
   }
  ],
  "name": "__weakrefoffset__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.int",
    "kwonlyargs": [],
    "name": "real",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.float",
    "kwonlyargs": [],
    "name": "real",
    "returns": "float"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.complex",
    "kwonlyargs": [],
    "name": "real",
    "returns": "float"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_decimal.Decimal",
    "kwonlyargs": [],
    "name": "real",
    "returns": "Decimal"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Complex",
    "kwonlyargs": [],
    "name": "real",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Real",
    "kwonlyargs": [],
    "name": "real",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "fractions.Fraction",
    "kwonlyargs": [],
    "name": "real",
    "returns": "Fraction"
   }
  ],
  "name": "real"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.int",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.float",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "float"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.complex",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "float"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_decimal.Decimal",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "Decimal"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Complex",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Real",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "fractions.Fraction",
    "kwonlyargs": [],
    "name": "imag",
    "returns": "Literal[0]"
   }
  ],
  "name": "imag"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.int",
    "kwonlyargs": [],
    "name": "numerator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Rational",
    "kwonlyargs": [],
    "name": "numerator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Integral",
    "kwonlyargs": [],
    "name": "numerator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "fractions.Fraction",
    "kwonlyargs": [],
    "name": "numerator",
    "returns": "int"
   }
  ],
  "name": "numerator"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.int",
    "kwonlyargs": [],
    "name": "denominator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Rational",
    "kwonlyargs": [],
    "name": "denominator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "numbers.Integral",
    "kwonlyargs": [],
    "name": "denominator",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "fractions.Fraction",
    "kwonlyargs": [],
    "name": "denominator",
    "returns": "int"
   }
  ],
  "name": "denominator"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[None]",
    "className": "builtins.bytearray",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "builtins.slice",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "builtins.list",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "builtins.dict",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "builtins.set",
    "name": "__hash__"
   },
   {
    "annotation": "Any",
    "className": "_decimal.Context",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "types.MappingProxyType",
    "name": "__hash__"
   },
   {
    "annotation": "ClassVar[None]",
    "className": "types.SimpleNamespace",
    "name": "__hash__"
   }
  ],
  "name": "__hash__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "format",
    "returns": "str"
   },
   {
    "annotation": "(int | None)",
    "className": "tarfile.TarFile",
    "name": "format"
   }
  ],
  "name": "format"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "shape",
    "returns": "(tuple[int, ...] | None)"
   }
  ],
  "name": "shape"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "strides",
    "returns": "(tuple[int, ...] | None)"
   }
  ],
  "name": "strides"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "suboffsets",
    "returns": "(tuple[int, ...] | None)"
   }
  ],
  "name": "suboffsets"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "ndim",
    "returns": "int"
   }
  ],
  "name": "ndim"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "obj",
    "returns": "(bytes | bytearray)"
   }
  ],
  "name": "obj"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "c_contiguous",
    "returns": "bool"
   }
  ],
  "name": "c_contiguous"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "f_contiguous",
    "returns": "bool"
   }
  ],
  "name": "f_contiguous"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "contiguous",
    "returns": "bool"
   }
  ],
  "name": "contiguous"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.memoryview",
    "kwonlyargs": [],
    "name": "nbytes",
    "returns": "int"
   }
  ],
  "name": "nbytes"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.slice",
    "kwonlyargs": [],
    "name": "start",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.range",
    "kwonlyargs": [],
    "name": "start",
    "returns": "int"
   },
   {
    "annotation": "int",
    "className": "builtins.UnicodeDecodeError",
    "name": "start"
   },
   {
    "annotation": "int",
    "className": "builtins.UnicodeEncodeError",
    "name": "start"
   },
   {
    "annotation": "int",
    "className": "builtins.UnicodeTranslateError",
    "name": "start"
   }
  ],
  "name": "start"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.slice",
    "kwonlyargs": [],
    "name": "stop",
    "returns": "Any"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.range",
    "kwonlyargs": [],
    "name": "stop",
    "returns": "int"
   }
  ],
  "name": "stop"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.function",
    "kwonlyargs": [],
    "name": "__closure__",
    "returns": "(tuple[_Cell, ...] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FunctionType",
    "kwonlyargs": [],
    "name": "__closure__",
    "returns": "(tuple[_Cell, ...] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__closure__",
    "returns": "(tuple[_Cell, ...] | None)"
   }
  ],
  "name": "__closure__"
 },
 {
  "definitions": [
   {
    "annotation": "CodeType",
    "className": "builtins.function",
    "name": "__code__"
   },
   {
    "annotation": "CodeType",
    "className": "types.FunctionType",
    "name": "__code__"
   }
  ],
  "name": "__code__"
 },
 {
  "definitions": [
   {
    "annotation": "(tuple[Any, ...] | None)",
    "className": "builtins.function",
    "name": "__defaults__"
   },
   {
    "annotation": "(tuple[Any, ...] | None)",
    "className": "types.FunctionType",
    "name": "__defaults__"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__defaults__",
    "returns": "(tuple[Any, ...] | None)"
   }
  ],
  "name": "__defaults__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "builtins.function",
    "kwonlyargs": [],
    "name": "__globals__",
    "returns": "dict[str, Any]"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FunctionType",
    "kwonlyargs": [],
    "name": "__globals__",
    "returns": "dict[str, Any]"
   }
  ],
  "name": "__globals__"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "builtins.function",
    "name": "__kwdefaults__"
   },
   {
    "annotation": "dict[str, Any]",
    "className": "types.FunctionType",
    "name": "__kwdefaults__"
   }
  ],
  "name": "__kwdefaults__"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[Any], Any] | None)",
    "className": "builtins.property",
    "name": "fget"
   }
  ],
  "name": "fget"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[Any, Any], None] | None)",
    "className": "builtins.property",
    "name": "fset"
   }
  ],
  "name": "fset"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[Any], None] | None)",
    "className": "builtins.property",
    "name": "fdel"
   }
  ],
  "name": "fdel"
 },
 {
  "definitions": [
   {
    "annotation": "(BaseException | None)",
    "className": "builtins.BaseException",
    "name": "__cause__"
   },
   {
    "annotation": "TracebackException",
    "className": "traceback.TracebackException",
    "name": "__cause__"
   }
  ],
  "name": "__cause__"
 },
 {
  "definitions": [
   {
    "annotation": "(BaseException | None)",
    "className": "builtins.BaseException",
    "name": "__context__"
   },
   {
    "annotation": "TracebackException",
    "className": "traceback.TracebackException",
    "name": "__context__"
   }
  ],
  "name": "__context__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "builtins.BaseException",
    "name": "__suppress_context__"
   },
   {
    "annotation": "bool",
    "className": "traceback.TracebackException",
    "name": "__suppress_context__"
   }
  ],
  "name": "__suppress_context__"
 },
 {
  "definitions": [
   {
    "annotation": "(TracebackType | None)",
    "className": "builtins.BaseException",
    "name": "__traceback__"
   }
  ],
  "name": "__traceback__"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "builtins.SystemExit",
    "name": "code"
   },
   {
    "annotation": "str",
    "className": "pickletools.OpcodeInfo",
    "name": "code"
   },
   {
    "annotation": "int",
    "className": "pyexpat.ExpatError",
    "name": "code"
   }
  ],
  "name": "code"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "builtins.OSError",
    "name": "errno"
   }
  ],
  "name": "errno"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "builtins.OSError",
    "name": "strerror"
   }
  ],
  "name": "strerror"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "builtins.OSError",
    "name": "filename2"
   }
  ],
  "name": "filename2"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "builtins.ImportError",
    "name": "path"
   },
   {
    "annotation": "list[str]",
    "className": "modulefinder.ModuleFinder",
    "name": "path"
   },
   {
    "annotation": "str",
    "className": "tarfile.TarInfo",
    "name": "path"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.DirEntry",
    "kwonlyargs": [],
    "name": "path",
    "returns": "AnyStr"
   }
  ],
  "name": "path"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "builtins.SyntaxError",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "chunk.Chunk",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "tarfile.TarFile",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "_markupbase.ParserBase",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "traceback.TracebackException",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "dis.Instruction",
    "name": "offset"
   },
   {
    "annotation": "int",
    "className": "pyexpat.ExpatError",
    "name": "offset"
   }
  ],
  "name": "offset"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "builtins.SyntaxError",
    "name": "text"
   },
   {
    "annotation": "str",
    "className": "traceback.TracebackException",
    "name": "text"
   }
  ],
  "name": "text"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "builtins.BlockingIOError",
    "name": "characters_written"
   }
  ],
  "name": "characters_written"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "builtins.UnicodeDecodeError",
    "name": "end"
   },
   {
    "annotation": "int",
    "className": "builtins.UnicodeEncodeError",
    "name": "end"
   },
   {
    "annotation": "int",
    "className": "builtins.UnicodeTranslateError",
    "name": "end"
   }
  ],
  "name": "end"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.DecimalTuple",
    "name": "sign"
   }
  ],
  "name": "sign"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[int, ...]",
    "className": "_decimal.DecimalTuple",
    "name": "digits"
   }
  ],
  "name": "digits"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.DecimalTuple",
    "name": "exponent"
   }
  ],
  "name": "exponent"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.Context",
    "name": "prec"
   }
  ],
  "name": "prec"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "_decimal.Context",
    "name": "rounding"
   }
  ],
  "name": "rounding"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.Context",
    "name": "Emin"
   }
  ],
  "name": "Emin"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.Context",
    "name": "Emax"
   }
  ],
  "name": "Emax"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.Context",
    "name": "capitals"
   }
  ],
  "name": "capitals"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "_decimal.Context",
    "name": "clamp"
   }
  ],
  "name": "clamp"
 },
 {
  "definitions": [
   {
    "annotation": "dict[_TrapType, bool]",
    "className": "_decimal.Context",
    "name": "traps"
   }
  ],
  "name": "traps"
 },
 {
  "definitions": [
   {
    "annotation": "dict[_Label, tuple[int, int, int, int, dict[_Label, tuple[int, int, int, int]]]\n    ]",
    "className": "cProfile.Profile",
    "name": "stats"
   },
   {
    "annotation": "dict[_Label, tuple[int, int, int, int, dict[_Label, tuple[int, int, int, int]]]\n    ]",
    "className": "profile.Profile",
    "name": "stats"
   }
  ],
  "name": "stats"
 },
 {
  "definitions": [
   {
    "annotation": "type[BaseException]",
    "className": "sys.UnraisableHookArgs",
    "name": "exc_type"
   },
   {
    "annotation": "type[BaseException]",
    "className": "traceback.TracebackException",
    "name": "exc_type"
   }
  ],
  "name": "exc_type"
 },
 {
  "definitions": [
   {
    "annotation": "(BaseException | None)",
    "className": "sys.UnraisableHookArgs",
    "name": "exc_value"
   },
   {
    "annotation": "BaseException",
    "className": "py_compile.PyCompileError",
    "name": "exc_value"
   }
  ],
  "name": "exc_value"
 },
 {
  "definitions": [
   {
    "annotation": "(TracebackType | None)",
    "className": "sys.UnraisableHookArgs",
    "name": "exc_traceback"
   }
  ],
  "name": "exc_traceback"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "sys.UnraisableHookArgs",
    "name": "err_msg"
   }
  ],
  "name": "err_msg"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "calendar.Calendar",
    "name": "firstweekday"
   }
  ],
  "name": "firstweekday"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "mimetypes.MimeTypes",
    "name": "suffix_map"
   }
  ],
  "name": "suffix_map"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "mimetypes.MimeTypes",
    "name": "encodings_map"
   }
  ],
  "name": "encodings_map"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[dict[str, str], dict[str, str]]",
    "className": "mimetypes.MimeTypes",
    "name": "types_map"
   }
  ],
  "name": "types_map"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[dict[str, str], dict[str, str]]",
    "className": "mimetypes.MimeTypes",
    "name": "types_map_inv"
   }
  ],
  "name": "types_map_inv"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "list"
   },
   {
    "annotation": "(_list[Any] | None)",
    "className": "cgi.FieldStorage",
    "name": "list"
   }
  ],
  "name": "list"
 },
 {
  "definitions": [
   {
    "annotation": "dict[Any, Any]",
    "className": "cgi.MiniFieldStorage",
    "name": "type_options"
   },
   {
    "annotation": "dict[str, str]",
    "className": "cgi.FieldStorage",
    "name": "type_options"
   }
  ],
  "name": "type_options"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "cgi.MiniFieldStorage",
    "name": "disposition"
   },
   {
    "annotation": "str",
    "className": "cgi.FieldStorage",
    "name": "disposition"
   }
  ],
  "name": "disposition"
 },
 {
  "definitions": [
   {
    "annotation": "dict[Any, Any]",
    "className": "cgi.MiniFieldStorage",
    "name": "disposition_options"
   },
   {
    "annotation": "dict[str, str]",
    "className": "cgi.FieldStorage",
    "name": "disposition_options"
   }
  ],
  "name": "disposition_options"
 },
 {
  "definitions": [
   {
    "annotation": "dict[Any, Any]",
    "className": "cgi.MiniFieldStorage",
    "name": "headers"
   },
   {
    "annotation": "Mapping[str, str]",
    "className": "cgi.FieldStorage",
    "name": "headers"
   }
  ],
  "name": "headers"
 },
 {
  "definitions": [
   {
    "annotation": "(_type | None)",
    "className": "cgi.FieldStorage",
    "name": "FieldStorageClass"
   }
  ],
  "name": "FieldStorageClass"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "cgi.FieldStorage",
    "name": "keep_blank_values"
   }
  ],
  "name": "keep_blank_values"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "cgi.FieldStorage",
    "name": "strict_parsing"
   }
  ],
  "name": "strict_parsing"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "cgi.FieldStorage",
    "name": "qs_on_post"
   }
  ],
  "name": "qs_on_post"
 },
 {
  "definitions": [
   {
    "annotation": "IO[bytes]",
    "className": "cgi.FieldStorage",
    "name": "fp"
   },
   {
    "annotation": "(IO[bytes] | None)",
    "className": "zipfile.ZipFile",
    "name": "fp"
   }
  ],
  "name": "fp"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "cgi.FieldStorage",
    "name": "outerboundary"
   }
  ],
  "name": "outerboundary"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "cgi.FieldStorage",
    "name": "bytes_read"
   }
  ],
  "name": "bytes_read"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "cgi.FieldStorage",
    "name": "limit"
   }
  ],
  "name": "limit"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "cgi.FieldStorage",
    "name": "innerboundary"
   }
  ],
  "name": "innerboundary"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "cgi.FieldStorage",
    "name": "length"
   }
  ],
  "name": "length"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "cgi.FieldStorage",
    "name": "done"
   }
  ],
  "name": "done"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Module]",
    "className": "modulefinder.ModuleFinder",
    "name": "modules"
   }
  ],
  "name": "modules"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, dict[str, int]]",
    "className": "modulefinder.ModuleFinder",
    "name": "badmodules"
   }
  ],
  "name": "badmodules"
 },
 {
  "definitions": [
   {
    "annotation": "Container[str]",
    "className": "modulefinder.ModuleFinder",
    "name": "excludes"
   }
  ],
  "name": "excludes"
 },
 {
  "definitions": [
   {
    "annotation": "Sequence[tuple[str, str]]",
    "className": "modulefinder.ModuleFinder",
    "name": "replace_paths"
   }
  ],
  "name": "replace_paths"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "chunk.Chunk",
    "name": "align"
   }
  ],
  "name": "align"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "chunk.Chunk",
    "name": "chunkname"
   }
  ],
  "name": "chunkname"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "chunk.Chunk",
    "name": "chunksize"
   }
  ],
  "name": "chunksize"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "chunk.Chunk",
    "name": "size_read"
   }
  ],
  "name": "size_read"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "chunk.Chunk",
    "name": "seekable"
   }
  ],
  "name": "seekable"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[str, str]",
    "className": "tarfile.TarFile",
    "name": "OPEN_METH"
   }
  ],
  "name": "OPEN_METH"
 },
 {
  "definitions": [
   {
    "annotation": "type[TarInfo]",
    "className": "tarfile.TarFile",
    "name": "tarinfo"
   }
  ],
  "name": "tarinfo"
 },
 {
  "definitions": [
   {
    "annotation": "(bool | None)",
    "className": "tarfile.TarFile",
    "name": "dereference"
   }
  ],
  "name": "dereference"
 },
 {
  "definitions": [
   {
    "annotation": "(bool | None)",
    "className": "tarfile.TarFile",
    "name": "ignore_zeros"
   }
  ],
  "name": "ignore_zeros"
 },
 {
  "definitions": [
   {
    "annotation": "type[ExFileObject]",
    "className": "tarfile.TarFile",
    "name": "fileobject"
   }
  ],
  "name": "fileobject"
 },
 {
  "definitions": [
   {
    "annotation": "(Mapping[str, str] | None)",
    "className": "tarfile.TarFile",
    "name": "pax_headers"
   },
   {
    "annotation": "Mapping[str, str]",
    "className": "tarfile.TarInfo",
    "name": "pax_headers"
   }
  ],
  "name": "pax_headers"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "tarfile.TarFile",
    "name": "errorlevel"
   }
  ],
  "name": "errorlevel"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "chksum"
   }
  ],
  "name": "chksum"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "devmajor"
   }
  ],
  "name": "devmajor"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "devminor"
   }
  ],
  "name": "devminor"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "offset_data"
   }
  ],
  "name": "offset_data"
 },
 {
  "definitions": [
   {
    "annotation": "(bytes | None)",
    "className": "tarfile.TarInfo",
    "name": "sparse"
   }
  ],
  "name": "sparse"
 },
 {
  "definitions": [
   {
    "annotation": "(TarFile | None)",
    "className": "tarfile.TarInfo",
    "name": "tarfile"
   }
  ],
  "name": "tarfile"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tarfile.TarInfo",
    "name": "linkname"
   }
  ],
  "name": "linkname"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "uid"
   }
  ],
  "name": "uid"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tarfile.TarInfo",
    "name": "gid"
   }
  ],
  "name": "gid"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tarfile.TarInfo",
    "name": "uname"
   }
  ],
  "name": "uname"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tarfile.TarInfo",
    "name": "gname"
   }
  ],
  "name": "gname"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tarfile.TarInfo",
    "kwonlyargs": [],
    "name": "linkpath",
    "returns": "str"
   }
  ],
  "name": "linkpath"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, _NetrcTuple]",
    "className": "netrc.netrc",
    "name": "hosts"
   }
  ],
  "name": "hosts"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, list[str]]",
    "className": "netrc.netrc",
    "name": "macros"
   }
  ],
  "name": "macros"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "prompt"
   },
   {
    "annotation": "(str | None)",
    "className": "venv.EnvBuilder",
    "name": "prompt"
   }
  ],
  "name": "prompt"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "identchars"
   }
  ],
  "name": "identchars"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "ruler"
   }
  ],
  "name": "ruler"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "lastcmd"
   }
  ],
  "name": "lastcmd"
 },
 {
  "definitions": [
   {
    "annotation": "(Any | None)",
    "className": "cmd.Cmd",
    "name": "intro"
   }
  ],
  "name": "intro"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "doc_leader"
   }
  ],
  "name": "doc_leader"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "doc_header"
   }
  ],
  "name": "doc_header"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "misc_header"
   }
  ],
  "name": "misc_header"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "undoc_header"
   }
  ],
  "name": "undoc_header"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "nohelp"
   }
  ],
  "name": "nohelp"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "cmd.Cmd",
    "name": "use_rawinput"
   }
  ],
  "name": "use_rawinput"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "cmd.Cmd",
    "name": "cmdqueue"
   }
  ],
  "name": "cmdqueue"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "cmd.Cmd",
    "name": "completekey"
   }
  ],
  "name": "completekey"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, int], str | None] | None)",
    "className": "cmd.Cmd",
    "name": "old_completer"
   }
  ],
  "name": "old_completer"
 },
 {
  "definitions": [
   {
    "annotation": "(list[str] | None)",
    "className": "cmd.Cmd",
    "name": "completion_matches"
   }
  ],
  "name": "completion_matches"
 },
 {
  "definitions": [
   {
    "annotation": "CommandCompiler",
    "className": "code.InteractiveInterpreter",
    "name": "compile"
   }
  ],
  "name": "compile"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.NNTPError",
    "name": "response"
   }
  ],
  "name": "response"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.GroupInfo",
    "name": "group"
   }
  ],
  "name": "group"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.GroupInfo",
    "name": "first"
   }
  ],
  "name": "first"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.GroupInfo",
    "name": "flag"
   }
  ],
  "name": "flag"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.ArticleInfo",
    "name": "message_id"
   }
  ],
  "name": "message_id"
 },
 {
  "definitions": [
   {
    "annotation": "list[bytes]",
    "className": "nntplib.ArticleInfo",
    "name": "lines"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.terminal_size",
    "kwonlyargs": [],
    "name": "lines",
    "returns": "int"
   }
  ],
  "name": "lines"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "nntplib.NNTP",
    "name": "debugging"
   },
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "debugging"
   }
  ],
  "name": "debugging"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "nntplib.NNTP",
    "name": "readermode_afterauth"
   }
  ],
  "name": "readermode_afterauth"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "nntplib.NNTP",
    "name": "tls_on"
   }
  ],
  "name": "tls_on"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "nntplib.NNTP",
    "name": "authenticated"
   }
  ],
  "name": "authenticated"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "nntplib.NNTP",
    "name": "nntp_implementation"
   }
  ],
  "name": "nntp_implementation"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "nntplib.NNTP",
    "name": "nntp_version"
   }
  ],
  "name": "nntp_version"
 },
 {
  "definitions": [
   {
    "annotation": "(ssl.SSLContext | None)",
    "className": "nntplib.NNTP_SSL",
    "name": "ssl_context"
   }
  ],
  "name": "ssl_context"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "sort_keys",
    "returns": "bool"
   }
  ],
  "name": "sort_keys"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "skipkeys",
    "returns": "bool"
   }
  ],
  "name": "skipkeys"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "key_separator",
    "returns": "str"
   }
  ],
  "name": "key_separator"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "markers",
    "returns": "(dict[int, Any] | None)"
   }
  ],
  "name": "markers"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "encoder",
    "returns": "Callable[[str], str]"
   }
  ],
  "name": "encoder"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_json.make_encoder",
    "kwonlyargs": [],
    "name": "item_separator",
    "returns": "str"
   }
  ],
  "name": "item_separator"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_json.make_scanner",
    "name": "object_hook"
   }
  ],
  "name": "object_hook"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_json.make_scanner",
    "name": "object_pairs_hook"
   }
  ],
  "name": "object_pairs_hook"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_json.make_scanner",
    "name": "parse_int"
   }
  ],
  "name": "parse_int"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_json.make_scanner",
    "name": "parse_constant"
   }
  ],
  "name": "parse_constant"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "_json.make_scanner",
    "name": "parse_float"
   }
  ],
  "name": "parse_float"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "encode",
    "returns": "_Encoder"
   }
  ],
  "name": "encode"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "decode",
    "returns": "_Decoder"
   }
  ],
  "name": "decode"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "streamreader",
    "returns": "_StreamReader"
   }
  ],
  "name": "streamreader"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "streamwriter",
    "returns": "_StreamWriter"
   }
  ],
  "name": "streamwriter"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "incrementalencoder",
    "returns": "_IncrementalEncoder"
   }
  ],
  "name": "incrementalencoder"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "codecs.CodecInfo",
    "kwonlyargs": [],
    "name": "incrementaldecoder",
    "returns": "_IncrementalDecoder"
   }
  ],
  "name": "incrementaldecoder"
 },
 {
  "definitions": [
   {
    "annotation": "Compile",
    "className": "codeop.CommandCompiler",
    "name": "compiler"
   }
  ],
  "name": "compiler"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "textwrap.TextWrapper",
    "name": "initial_indent"
   }
  ],
  "name": "initial_indent"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "textwrap.TextWrapper",
    "name": "subsequent_indent"
   }
  ],
  "name": "subsequent_indent"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "expand_tabs"
   }
  ],
  "name": "expand_tabs"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "replace_whitespace"
   }
  ],
  "name": "replace_whitespace"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "fix_sentence_endings"
   }
  ],
  "name": "fix_sentence_endings"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "drop_whitespace"
   }
  ],
  "name": "drop_whitespace"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "break_long_words"
   }
  ],
  "name": "break_long_words"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "textwrap.TextWrapper",
    "name": "break_on_hyphens"
   }
  ],
  "name": "break_on_hyphens"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "textwrap.TextWrapper",
    "name": "tabsize"
   }
  ],
  "name": "tabsize"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "textwrap.TextWrapper",
    "name": "max_lines"
   }
  ],
  "name": "max_lines"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "textwrap.TextWrapper",
    "name": "placeholder"
   }
  ],
  "name": "placeholder"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "textwrap.TextWrapper",
    "name": "sentence_end_re"
   }
  ],
  "name": "sentence_end_re"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "textwrap.TextWrapper",
    "name": "wordsep_re"
   }
  ],
  "name": "wordsep_re"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "textwrap.TextWrapper",
    "name": "wordsep_simple_re"
   }
  ],
  "name": "wordsep_simple_re"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "textwrap.TextWrapper",
    "name": "whitespace_trans"
   }
  ],
  "name": "whitespace_trans"
 },
 {
  "definitions": [
   {
    "annotation": "dict[int, int]",
    "className": "textwrap.TextWrapper",
    "name": "unicode_whitespace_trans"
   }
  ],
  "name": "unicode_whitespace_trans"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "textwrap.TextWrapper",
    "name": "uspace"
   }
  ],
  "name": "uspace"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "textwrap.TextWrapper",
    "name": "x"
   },
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "x"
   }
  ],
  "name": "x"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "collections.deque",
    "kwonlyargs": [],
    "name": "maxlen",
    "returns": "(int | None)"
   }
  ],
  "name": "maxlen"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[], _VT] | None)",
    "className": "collections.defaultdict",
    "name": "default_factory"
   },
   {
    "annotation": "(_DefaultFactory[_T] | Literal[_MISSING_TYPE.MISSING])",
    "className": "dataclasses.Field",
    "name": "default_factory"
   }
  ],
  "name": "default_factory"
 },
 {
  "definitions": [
   {
    "annotation": "list[MutableMapping[_KT, _VT]]",
    "className": "collections.ChainMap",
    "name": "maps"
   }
  ],
  "name": "maps"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "Self",
      "arg": "self"
     }
    ],
    "className": "collections.ChainMap",
    "kwonlyargs": [],
    "name": "parents",
    "returns": "Self"
   },
   {
    "args": [
     {
      "annotation": "Self",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "parents",
    "returns": "Sequence[Self]"
   }
  ],
  "name": "parents"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "threading.Thread",
    "kwonlyargs": [],
    "name": "ident",
    "returns": "(int | None)"
   }
  ],
  "name": "ident"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "threading.Thread",
    "name": "daemon"
   }
  ],
  "name": "daemon"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "threading.Barrier",
    "kwonlyargs": [],
    "name": "parties",
    "returns": "int"
   }
  ],
  "name": "parties"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "threading.Barrier",
    "kwonlyargs": [],
    "name": "n_waiting",
    "returns": "int"
   }
  ],
  "name": "n_waiting"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "threading.Barrier",
    "kwonlyargs": [],
    "name": "broken",
    "returns": "bool"
   }
  ],
  "name": "broken"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_year",
    "returns": "int"
   }
  ],
  "name": "tm_year"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_mon",
    "returns": "int"
   }
  ],
  "name": "tm_mon"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_mday",
    "returns": "int"
   }
  ],
  "name": "tm_mday"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_hour",
    "returns": "int"
   }
  ],
  "name": "tm_hour"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_min",
    "returns": "int"
   }
  ],
  "name": "tm_min"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_sec",
    "returns": "int"
   }
  ],
  "name": "tm_sec"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_wday",
    "returns": "int"
   }
  ],
  "name": "tm_wday"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_yday",
    "returns": "int"
   }
  ],
  "name": "tm_yday"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_isdst",
    "returns": "int"
   }
  ],
  "name": "tm_isdst"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_zone",
    "returns": "str"
   }
  ],
  "name": "tm_zone"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "time.struct_time",
    "kwonlyargs": [],
    "name": "tm_gmtoff",
    "returns": "int"
   }
  ],
  "name": "tm_gmtoff"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.BadOptionError",
    "name": "opt_str"
   }
  ],
  "name": "opt_str"
 },
 {
  "definitions": [
   {
    "annotation": "Iterable[str]",
    "className": "optparse.AmbiguousOptionError",
    "name": "possibilities"
   }
  ],
  "name": "possibilities"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.OptionError",
    "name": "option_id"
   }
  ],
  "name": "option_id"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.HelpFormatter",
    "name": "NO_DEFAULT_VALUE"
   }
  ],
  "name": "NO_DEFAULT_VALUE"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.HelpFormatter",
    "name": "_long_opt_fmt"
   }
  ],
  "name": "_long_opt_fmt"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.HelpFormatter",
    "name": "_short_opt_fmt"
   }
  ],
  "name": "_short_opt_fmt"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "optparse.HelpFormatter",
    "name": "current_indent"
   }
  ],
  "name": "current_indent"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.HelpFormatter",
    "name": "default_tag"
   }
  ],
  "name": "default_tag"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "optparse.HelpFormatter",
    "name": "help_position"
   }
  ],
  "name": "help_position"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "optparse.HelpFormatter",
    "name": "help_width"
   }
  ],
  "name": "help_width"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "optparse.HelpFormatter",
    "name": "indent_increment"
   }
  ],
  "name": "indent_increment"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "optparse.HelpFormatter",
    "name": "max_help_position"
   }
  ],
  "name": "max_help_position"
 },
 {
  "definitions": [
   {
    "annotation": "OptionParser",
    "className": "optparse.HelpFormatter",
    "name": "parser"
   },
   {
    "annotation": "OptionParser",
    "className": "optparse.OptionGroup",
    "name": "parser"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "configparser.SectionProxy",
    "kwonlyargs": [],
    "name": "parser",
    "returns": "RawConfigParser"
   }
  ],
  "name": "parser"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "optparse.HelpFormatter",
    "name": "short_first"
   }
  ],
  "name": "short_first"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "ACTIONS"
   }
  ],
  "name": "ACTIONS"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "ALWAYS_TYPED_ACTIONS"
   }
  ],
  "name": "ALWAYS_TYPED_ACTIONS"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "optparse.Option",
    "name": "ATTRS"
   }
  ],
  "name": "ATTRS"
 },
 {
  "definitions": [
   {
    "annotation": "(list[Callable[..., Any]] | None)",
    "className": "optparse.Option",
    "name": "CHECK_METHODS"
   }
  ],
  "name": "CHECK_METHODS"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "CONST_ACTIONS"
   }
  ],
  "name": "CONST_ACTIONS"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "STORE_ACTIONS"
   }
  ],
  "name": "STORE_ACTIONS"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "TYPED_ACTIONS"
   }
  ],
  "name": "TYPED_ACTIONS"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[str, ...]",
    "className": "optparse.Option",
    "name": "TYPES"
   }
  ],
  "name": "TYPES"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Callable[..., Any]]",
    "className": "optparse.Option",
    "name": "TYPE_CHECKER"
   }
  ],
  "name": "TYPE_CHECKER"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "optparse.Option",
    "name": "_long_opts"
   }
  ],
  "name": "_long_opts"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "optparse.Option",
    "name": "_short_opts"
   }
  ],
  "name": "_short_opts"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[..., Any] | None)",
    "className": "optparse.Option",
    "name": "callback"
   }
  ],
  "name": "callback"
 },
 {
  "definitions": [
   {
    "annotation": "(tuple[Any, ...] | None)",
    "className": "optparse.Option",
    "name": "callback_args"
   }
  ],
  "name": "callback_args"
 },
 {
  "definitions": [
   {
    "annotation": "(dict[str, Any] | None)",
    "className": "optparse.Option",
    "name": "callback_kwargs"
   }
  ],
  "name": "callback_kwargs"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Option]",
    "className": "optparse.OptionContainer",
    "name": "_long_opt"
   }
  ],
  "name": "_long_opt"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Option]",
    "className": "optparse.OptionContainer",
    "name": "_short_opt"
   }
  ],
  "name": "_short_opt"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.OptionContainer",
    "name": "conflict_handler"
   }
  ],
  "name": "conflict_handler"
 },
 {
  "definitions": [
   {
    "annotation": "type[Option]",
    "className": "optparse.OptionContainer",
    "name": "option_class"
   }
  ],
  "name": "option_class"
 },
 {
  "definitions": [
   {
    "annotation": "list[Option]",
    "className": "optparse.OptionGroup",
    "name": "option_list"
   },
   {
    "annotation": "list[Option]",
    "className": "optparse.OptionParser",
    "name": "option_list"
   }
  ],
  "name": "option_list"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.OptionGroup",
    "name": "title"
   }
  ],
  "name": "title"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "optparse.OptionParser",
    "name": "allow_interspersed_args"
   }
  ],
  "name": "allow_interspersed_args"
 },
 {
  "definitions": [
   {
    "annotation": "(list[str] | None)",
    "className": "optparse.OptionParser",
    "name": "largs"
   }
  ],
  "name": "largs"
 },
 {
  "definitions": [
   {
    "annotation": "list[OptionGroup]",
    "className": "optparse.OptionParser",
    "name": "option_groups"
   }
  ],
  "name": "option_groups"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "optparse.OptionParser",
    "name": "process_default_values"
   }
  ],
  "name": "process_default_values"
 },
 {
  "definitions": [
   {
    "annotation": "(list[Any] | None)",
    "className": "optparse.OptionParser",
    "name": "rargs"
   }
  ],
  "name": "rargs"
 },
 {
  "definitions": [
   {
    "annotation": "list[Option]",
    "className": "optparse.OptionParser",
    "name": "standard_option_list"
   }
  ],
  "name": "standard_option_list"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "optparse.OptionParser",
    "name": "version"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.uname_result",
    "kwonlyargs": [],
    "name": "version",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "version"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "version",
    "returns": "(_Int | None)"
   }
  ],
  "name": "version"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[str]",
    "className": "configparser.RawConfigParser",
    "name": "_SECT_TMPL"
   }
  ],
  "name": "_SECT_TMPL"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[str]",
    "className": "configparser.RawConfigParser",
    "name": "_OPT_TMPL"
   }
  ],
  "name": "_OPT_TMPL"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[str]",
    "className": "configparser.RawConfigParser",
    "name": "_OPT_NV_TMPL"
   }
  ],
  "name": "_OPT_NV_TMPL"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "configparser.RawConfigParser",
    "name": "SECTCRE"
   }
  ],
  "name": "SECTCRE"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Pattern[str]]",
    "className": "configparser.RawConfigParser",
    "name": "OPTCRE"
   }
  ],
  "name": "OPTCRE"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Pattern[str]]",
    "className": "configparser.RawConfigParser",
    "name": "OPTCRE_NV"
   }
  ],
  "name": "OPTCRE_NV"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Pattern[str]]",
    "className": "configparser.RawConfigParser",
    "name": "NONSPACECRE"
   }
  ],
  "name": "NONSPACECRE"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[Mapping[str, bool]]",
    "className": "configparser.RawConfigParser",
    "name": "BOOLEAN_STATES"
   }
  ],
  "name": "BOOLEAN_STATES"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "configparser.RawConfigParser",
    "name": "default_section"
   }
  ],
  "name": "default_section"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[Any]",
    "className": "configparser.ConverterMapping",
    "name": "GETTERCRE"
   }
  ],
  "name": "GETTERCRE"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "configparser.NoSectionError",
    "name": "section"
   },
   {
    "annotation": "str",
    "className": "configparser.DuplicateSectionError",
    "name": "section"
   },
   {
    "annotation": "str",
    "className": "configparser.DuplicateOptionError",
    "name": "section"
   },
   {
    "annotation": "str",
    "className": "configparser.NoOptionError",
    "name": "section"
   },
   {
    "annotation": "str",
    "className": "configparser.InterpolationError",
    "name": "section"
   }
  ],
  "name": "section"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "configparser.DuplicateOptionError",
    "name": "option"
   },
   {
    "annotation": "str",
    "className": "configparser.NoOptionError",
    "name": "option"
   },
   {
    "annotation": "str",
    "className": "configparser.InterpolationError",
    "name": "option"
   }
  ],
  "name": "option"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "configparser.InterpolationMissingOptionError",
    "name": "reference"
   }
  ],
  "name": "reference"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_mode",
    "returns": "int"
   }
  ],
  "name": "st_mode"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_ino",
    "returns": "int"
   }
  ],
  "name": "st_ino"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_dev",
    "returns": "int"
   }
  ],
  "name": "st_dev"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_nlink",
    "returns": "int"
   }
  ],
  "name": "st_nlink"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_uid",
    "returns": "int"
   }
  ],
  "name": "st_uid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_gid",
    "returns": "int"
   }
  ],
  "name": "st_gid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_size",
    "returns": "int"
   }
  ],
  "name": "st_size"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_atime",
    "returns": "float"
   }
  ],
  "name": "st_atime"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_mtime",
    "returns": "float"
   }
  ],
  "name": "st_mtime"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_ctime",
    "returns": "float"
   }
  ],
  "name": "st_ctime"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_atime_ns",
    "returns": "int"
   }
  ],
  "name": "st_atime_ns"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_mtime_ns",
    "returns": "int"
   }
  ],
  "name": "st_mtime_ns"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.stat_result",
    "kwonlyargs": [],
    "name": "st_ctime_ns",
    "returns": "int"
   }
  ],
  "name": "st_ctime_ns"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_bsize",
    "returns": "int"
   }
  ],
  "name": "f_bsize"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_frsize",
    "returns": "int"
   }
  ],
  "name": "f_frsize"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_blocks",
    "returns": "int"
   }
  ],
  "name": "f_blocks"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_bfree",
    "returns": "int"
   }
  ],
  "name": "f_bfree"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_bavail",
    "returns": "int"
   }
  ],
  "name": "f_bavail"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_files",
    "returns": "int"
   }
  ],
  "name": "f_files"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_ffree",
    "returns": "int"
   }
  ],
  "name": "f_ffree"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_favail",
    "returns": "int"
   }
  ],
  "name": "f_favail"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_flag",
    "returns": "int"
   }
  ],
  "name": "f_flag"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.statvfs_result",
    "kwonlyargs": [],
    "name": "f_namemax",
    "returns": "int"
   }
  ],
  "name": "f_namemax"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.uname_result",
    "kwonlyargs": [],
    "name": "sysname",
    "returns": "str"
   }
  ],
  "name": "sysname"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.uname_result",
    "kwonlyargs": [],
    "name": "nodename",
    "returns": "str"
   }
  ],
  "name": "nodename"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.uname_result",
    "kwonlyargs": [],
    "name": "release",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "release"
   }
  ],
  "name": "release"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.uname_result",
    "kwonlyargs": [],
    "name": "machine",
    "returns": "str"
   },
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "machine"
   }
  ],
  "name": "machine"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.terminal_size",
    "kwonlyargs": [],
    "name": "columns",
    "returns": "int"
   }
  ],
  "name": "columns"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.times_result",
    "kwonlyargs": [],
    "name": "system",
    "returns": "float"
   },
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "system"
   }
  ],
  "name": "system"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.times_result",
    "kwonlyargs": [],
    "name": "children_user",
    "returns": "float"
   }
  ],
  "name": "children_user"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.times_result",
    "kwonlyargs": [],
    "name": "children_system",
    "returns": "float"
   }
  ],
  "name": "children_system"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.times_result",
    "kwonlyargs": [],
    "name": "elapsed",
    "returns": "float"
   }
  ],
  "name": "elapsed"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "os.sched_param",
    "kwonlyargs": [],
    "name": "sched_priority",
    "returns": "int"
   }
  ],
  "name": "sched_priority"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Activate"
   }
  ],
  "name": "Activate"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "ButtonPress"
   }
  ],
  "name": "ButtonPress"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "ButtonRelease"
   }
  ],
  "name": "ButtonRelease"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Circulate"
   }
  ],
  "name": "Circulate"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "CirculateRequest"
   }
  ],
  "name": "CirculateRequest"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "ClientMessage"
   }
  ],
  "name": "ClientMessage"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Colormap"
   }
  ],
  "name": "Colormap"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Configure"
   }
  ],
  "name": "Configure"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "ConfigureRequest"
   }
  ],
  "name": "ConfigureRequest"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Create"
   }
  ],
  "name": "Create"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Deactivate"
   }
  ],
  "name": "Deactivate"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Destroy"
   }
  ],
  "name": "Destroy"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Enter"
   }
  ],
  "name": "Enter"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Expose"
   }
  ],
  "name": "Expose"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "FocusIn"
   }
  ],
  "name": "FocusIn"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "FocusOut"
   }
  ],
  "name": "FocusOut"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "GraphicsExpose"
   }
  ],
  "name": "GraphicsExpose"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Gravity"
   }
  ],
  "name": "Gravity"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "KeyPress"
   }
  ],
  "name": "KeyPress"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "KeyRelease"
   }
  ],
  "name": "KeyRelease"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Keymap"
   }
  ],
  "name": "Keymap"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Leave"
   }
  ],
  "name": "Leave"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Map"
   }
  ],
  "name": "Map"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "MapRequest"
   }
  ],
  "name": "MapRequest"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Mapping"
   }
  ],
  "name": "Mapping"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Motion"
   }
  ],
  "name": "Motion"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "MouseWheel"
   }
  ],
  "name": "MouseWheel"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "NoExpose"
   }
  ],
  "name": "NoExpose"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Property"
   }
  ],
  "name": "Property"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Reparent"
   }
  ],
  "name": "Reparent"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "ResizeRequest"
   }
  ],
  "name": "ResizeRequest"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Selection"
   }
  ],
  "name": "Selection"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "SelectionClear"
   }
  ],
  "name": "SelectionClear"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "SelectionRequest"
   }
  ],
  "name": "SelectionRequest"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Unmap"
   }
  ],
  "name": "Unmap"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "VirtualEvent"
   }
  ],
  "name": "VirtualEvent"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.EventType",
    "name": "Visibility"
   }
  ],
  "name": "Visibility"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "serial"
   }
  ],
  "name": "serial"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "num"
   }
  ],
  "name": "num"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "tkinter.Event",
    "name": "focus"
   }
  ],
  "name": "focus"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "height"
   }
  ],
  "name": "height"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "keycode"
   }
  ],
  "name": "keycode"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "y"
   }
  ],
  "name": "y"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "x_root"
   }
  ],
  "name": "x_root"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "y_root"
   }
  ],
  "name": "y_root"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.Event",
    "name": "char"
   }
  ],
  "name": "char"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "tkinter.Event",
    "name": "send_event"
   }
  ],
  "name": "send_event"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "tkinter.Event",
    "name": "keysym"
   }
  ],
  "name": "keysym"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "keysym_num"
   }
  ],
  "name": "keysym_num"
 },
 {
  "definitions": [
   {
    "annotation": "_W_co",
    "className": "tkinter.Event",
    "name": "widget"
   },
   {
    "annotation": "Any",
    "className": "tkinter.CallWrapper",
    "name": "widget"
   }
  ],
  "name": "widget"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tkinter.Event",
    "name": "delta"
   }
  ],
  "name": "delta"
 },
 {
  "definitions": [
   {
    "annotation": "(Misc | None)",
    "className": "tkinter.Misc",
    "name": "master"
   },
   {
    "annotation": "None",
    "className": "tkinter.Tk",
    "name": "master"
   },
   {
    "annotation": "Misc",
    "className": "tkinter.BaseWidget",
    "name": "master"
   }
  ],
  "name": "master"
 },
 {
  "definitions": [
   {
    "annotation": "_tkinter.TkappType",
    "className": "tkinter.Misc",
    "name": "tk"
   },
   {
    "annotation": "_tkinter.TkappType",
    "className": "tkinter.Image",
    "name": "tk"
   }
  ],
  "name": "tk"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Widget]",
    "className": "tkinter.Misc",
    "name": "children"
   }
  ],
  "name": "children"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.CallWrapper",
    "name": "subst"
   }
  ],
  "name": "subst"
 },
 {
  "definitions": [
   {
    "annotation": "_ExceptionReportingCallback",
    "className": "tkinter.Tk",
    "name": "report_callback_exception"
   }
  ],
  "name": "report_callback_exception"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.BaseWidget",
    "name": "widgetName"
   },
   {
    "annotation": "Any",
    "className": "tkinter.OptionMenu",
    "name": "widgetName"
   }
  ],
  "name": "widgetName"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Listbox",
    "name": "select_anchor"
   }
  ],
  "name": "select_anchor"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Listbox",
    "name": "select_clear"
   }
  ],
  "name": "select_clear"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Listbox",
    "name": "select_includes"
   }
  ],
  "name": "select_includes"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Listbox",
    "name": "select_set"
   }
  ],
  "name": "select_set"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Listbox",
    "name": "itemconfig"
   }
  ],
  "name": "itemconfig"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.OptionMenu",
    "name": "menuname"
   }
  ],
  "name": "menuname"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Image",
    "name": "configure"
   }
  ],
  "name": "configure"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.Image",
    "name": "config"
   }
  ],
  "name": "config"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.PanedWindow",
    "name": "forget"
   }
  ],
  "name": "forget"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "tkinter.PanedWindow",
    "name": "paneconfig"
   }
  ],
  "name": "paneconfig"
 },
 {
  "definitions": [
   {
    "annotation": "_T",
    "className": "contextlib.nullcontext",
    "name": "enter_result"
   }
  ],
  "name": "enter_result"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "contextvars.Token",
    "kwonlyargs": [],
    "name": "var",
    "returns": "ContextVar[_T]"
   }
  ],
  "name": "var"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "contextvars.Token",
    "kwonlyargs": [],
    "name": "old_value",
    "returns": "Any"
   }
  ],
  "name": "old_value"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[object]",
    "className": "contextvars.Token",
    "name": "MISSING"
   }
  ],
  "name": "MISSING"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "parts",
    "returns": "tuple[str, ...]"
   }
  ],
  "name": "parts"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "drive",
    "returns": "str"
   }
  ],
  "name": "drive"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "anchor",
    "returns": "str"
   }
  ],
  "name": "anchor"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "suffix",
    "returns": "str"
   }
  ],
  "name": "suffix"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "suffixes",
    "returns": "list[str]"
   }
  ],
  "name": "suffixes"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pathlib.PurePath",
    "kwonlyargs": [],
    "name": "stem",
    "returns": "str"
   }
  ],
  "name": "stem"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tokenize.TokenInfo",
    "kwonlyargs": [],
    "name": "exact_type",
    "returns": "int"
   }
  ],
  "name": "exact_type"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "tokenize.Untokenizer",
    "name": "tokens"
   }
  ],
  "name": "tokens"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tokenize.Untokenizer",
    "name": "prev_row"
   }
  ],
  "name": "prev_row"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tokenize.Untokenizer",
    "name": "prev_col"
   }
  ],
  "name": "prev_col"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[list[str]]",
    "className": "pdb.Pdb",
    "name": "commands_resuming"
   }
  ],
  "name": "commands_resuming"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "pdb.Pdb",
    "name": "aliases"
   }
  ],
  "name": "aliases"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pdb.Pdb",
    "name": "mainpyfile"
   }
  ],
  "name": "mainpyfile"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pdb.Pdb",
    "name": "_wait_for_mainpyfile"
   }
  ],
  "name": "_wait_for_mainpyfile"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "pdb.Pdb",
    "name": "rcLines"
   }
  ],
  "name": "rcLines"
 },
 {
  "definitions": [
   {
    "annotation": "dict[int, list[str]]",
    "className": "pdb.Pdb",
    "name": "commands"
   }
  ],
  "name": "commands"
 },
 {
  "definitions": [
   {
    "annotation": "dict[int, bool]",
    "className": "pdb.Pdb",
    "name": "commands_doprompt"
   }
  ],
  "name": "commands_doprompt"
 },
 {
  "definitions": [
   {
    "annotation": "dict[int, bool]",
    "className": "pdb.Pdb",
    "name": "commands_silent"
   }
  ],
  "name": "commands_silent"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pdb.Pdb",
    "name": "commands_defining"
   }
  ],
  "name": "commands_defining"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "pdb.Pdb",
    "name": "commands_bnum"
   }
  ],
  "name": "commands_bnum"
 },
 {
  "definitions": [
   {
    "annotation": "list[tuple[FrameType, int]]",
    "className": "pdb.Pdb",
    "name": "stack"
   },
   {
    "annotation": "StackSummary",
    "className": "traceback.TracebackException",
    "name": "stack"
   }
  ],
  "name": "stack"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pdb.Pdb",
    "name": "curindex"
   }
  ],
  "name": "curindex"
 },
 {
  "definitions": [
   {
    "annotation": "(FrameType | None)",
    "className": "pdb.Pdb",
    "name": "curframe"
   }
  ],
  "name": "curframe"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[str, Any]",
    "className": "pdb.Pdb",
    "name": "curframe_locals"
   }
  ],
  "name": "curframe_locals"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pickle.Pickler",
    "name": "fast"
   }
  ],
  "name": "fast"
 },
 {
  "definitions": [
   {
    "annotation": "Mapping[type, Callable[[Any], _reducedtype]]",
    "className": "pickle.Pickler",
    "name": "dispatch_table"
   }
  ],
  "name": "dispatch_table"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pickle.Pickler",
    "name": "bin"
   }
  ],
  "name": "bin"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[dict[type, Callable[[Unpickler, Any], None]]]",
    "className": "pickle.Pickler",
    "name": "dispatch"
   },
   {
    "annotation": "ClassVar[dict[int, Callable[[Unpickler], None]]]",
    "className": "pickle.Unpickler",
    "name": "dispatch"
   }
  ],
  "name": "dispatch"
 },
 {
  "definitions": [
   {
    "annotation": "_Reader",
    "className": "pickletools.ArgumentDescriptor",
    "name": "reader"
   },
   {
    "annotation": "_reader",
    "className": "csv.DictReader",
    "name": "reader"
   }
  ],
  "name": "reader"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pickletools.ArgumentDescriptor",
    "name": "doc"
   },
   {
    "annotation": "str",
    "className": "pickletools.StackObject",
    "name": "doc"
   },
   {
    "annotation": "str",
    "className": "pickletools.OpcodeInfo",
    "name": "doc"
   }
  ],
  "name": "doc"
 },
 {
  "definitions": [
   {
    "annotation": "(type[Any] | tuple[type[Any], ...])",
    "className": "pickletools.StackObject",
    "name": "obtype"
   }
  ],
  "name": "obtype"
 },
 {
  "definitions": [
   {
    "annotation": "list[StackObject]",
    "className": "pickletools.OpcodeInfo",
    "name": "stack_before"
   }
  ],
  "name": "stack_before"
 },
 {
  "definitions": [
   {
    "annotation": "list[StackObject]",
    "className": "pickletools.OpcodeInfo",
    "name": "stack_after"
   }
  ],
  "name": "stack_after"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pickletools.OpcodeInfo",
    "name": "proto"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "_socket.socket",
    "kwonlyargs": [],
    "name": "proto",
    "returns": "int"
   }
  ],
  "name": "proto"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "tracemalloc.BaseFilter",
    "name": "inclusive"
   }
  ],
  "name": "inclusive"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.DomainFilter",
    "kwonlyargs": [],
    "name": "domain",
    "returns": "int"
   },
   {
    "annotation": "(int | None)",
    "className": "tracemalloc.Filter",
    "name": "domain"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Trace",
    "kwonlyargs": [],
    "name": "domain",
    "returns": "int"
   }
  ],
  "name": "domain"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Filter",
    "kwonlyargs": [],
    "name": "filename_pattern",
    "returns": "str"
   }
  ],
  "name": "filename_pattern"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "tracemalloc.Filter",
    "name": "all_frames"
   }
  ],
  "name": "all_frames"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tracemalloc.Statistic",
    "name": "count"
   },
   {
    "annotation": "int",
    "className": "tracemalloc.StatisticDiff",
    "name": "count"
   }
  ],
  "name": "count"
 },
 {
  "definitions": [
   {
    "annotation": "Traceback",
    "className": "tracemalloc.Statistic",
    "name": "traceback"
   },
   {
    "annotation": "Traceback",
    "className": "tracemalloc.StatisticDiff",
    "name": "traceback"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "tracemalloc.Trace",
    "kwonlyargs": [],
    "name": "traceback",
    "returns": "Traceback"
   }
  ],
  "name": "traceback"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tracemalloc.StatisticDiff",
    "name": "count_diff"
   }
  ],
  "name": "count_diff"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tracemalloc.StatisticDiff",
    "name": "size_diff"
   }
  ],
  "name": "size_diff"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "tracemalloc.Snapshot",
    "name": "traceback_limit"
   }
  ],
  "name": "traceback_limit"
 },
 {
  "definitions": [
   {
    "annotation": "Sequence[Trace]",
    "className": "tracemalloc.Snapshot",
    "name": "traces"
   }
  ],
  "name": "traces"
 },
 {
  "definitions": [
   {
    "annotation": "(Sequence[_T] | None)",
    "className": "csv.DictReader",
    "name": "fieldnames"
   },
   {
    "annotation": "Collection[_T]",
    "className": "csv.DictWriter",
    "name": "fieldnames"
   }
  ],
  "name": "fieldnames"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "csv.DictReader",
    "name": "restkey"
   }
  ],
  "name": "restkey"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "csv.DictReader",
    "name": "restval"
   },
   {
    "annotation": "(Any | None)",
    "className": "csv.DictWriter",
    "name": "restval"
   }
  ],
  "name": "restval"
 },
 {
  "definitions": [
   {
    "annotation": "_DialectLike",
    "className": "csv.DictReader",
    "name": "dialect"
   }
  ],
  "name": "dialect"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "csv.DictReader",
    "name": "line_num"
   }
  ],
  "name": "line_num"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "csv.DictWriter",
    "name": "extrasaction"
   }
  ],
  "name": "extrasaction"
 },
 {
  "definitions": [
   {
    "annotation": "_writer",
    "className": "csv.DictWriter",
    "name": "writer"
   }
  ],
  "name": "writer"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "csv.Sniffer",
    "name": "preferred"
   }
  ],
  "name": "preferred"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[int]",
    "className": "ctypes.CDLL",
    "name": "_func_flags_"
   }
  ],
  "name": "_func_flags_"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[_CData]",
    "className": "ctypes.CDLL",
    "name": "_func_restype_"
   }
  ],
  "name": "_func_restype_"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ctypes.CDLL",
    "name": "_name"
   }
  ],
  "name": "_name"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ctypes.CDLL",
    "name": "_handle"
   }
  ],
  "name": "_handle"
 },
 {
  "definitions": [
   {
    "annotation": "type[_FuncPointer]",
    "className": "ctypes.CDLL",
    "name": "_FuncPtr"
   }
  ],
  "name": "_FuncPtr"
 },
 {
  "definitions": [
   {
    "annotation": "type[_CT]",
    "className": "ctypes.pointer",
    "name": "_type_"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ctypes.Array",
    "kwonlyargs": [],
    "name": "_type_",
    "returns": "type[_CT]"
   }
  ],
  "name": "_type_"
 },
 {
  "definitions": [
   {
    "annotation": "_CT",
    "className": "ctypes.pointer",
    "name": "contents"
   }
  ],
  "name": "contents"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "ctypes.Array",
    "kwonlyargs": [],
    "name": "_length_",
    "returns": "int"
   }
  ],
  "name": "_length_"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "turtle.ScrolledCanvas",
    "name": "bg"
   }
  ],
  "name": "bg"
 },
 {
  "definitions": [
   {
    "annotation": "Scrollbar",
    "className": "turtle.ScrolledCanvas",
    "name": "hscroll"
   }
  ],
  "name": "hscroll"
 },
 {
  "definitions": [
   {
    "annotation": "Scrollbar",
    "className": "turtle.ScrolledCanvas",
    "name": "vscroll"
   }
  ],
  "name": "vscroll"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "turtle.ScrolledCanvas",
    "name": "canvwidth"
   },
   {
    "annotation": "int",
    "className": "turtle.TurtleScreenBase",
    "name": "canvwidth"
   }
  ],
  "name": "canvwidth"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "turtle.ScrolledCanvas",
    "name": "canvheight"
   },
   {
    "annotation": "int",
    "className": "turtle.TurtleScreenBase",
    "name": "canvheight"
   }
  ],
  "name": "canvheight"
 },
 {
  "definitions": [
   {
    "annotation": "Canvas",
    "className": "turtle.TurtleScreenBase",
    "name": "cv"
   }
  ],
  "name": "cv"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "turtle.TurtleScreenBase",
    "name": "xscale"
   }
  ],
  "name": "xscale"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "turtle.TurtleScreenBase",
    "name": "yscale"
   }
  ],
  "name": "yscale"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Vec2D]",
    "className": "turtle.TNavigator",
    "name": "START_ORIENTATION"
   }
  ],
  "name": "START_ORIENTATION"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "turtle.TNavigator",
    "name": "DEFAULT_MODE"
   }
  ],
  "name": "DEFAULT_MODE"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "turtle.TNavigator",
    "name": "DEFAULT_ANGLEOFFSET"
   }
  ],
  "name": "DEFAULT_ANGLEOFFSET"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "turtle.TNavigator",
    "name": "DEFAULT_ANGLEORIENT"
   }
  ],
  "name": "DEFAULT_ANGLEORIENT"
 },
 {
  "definitions": [
   {
    "annotation": "TurtleScreen",
    "className": "turtle.RawTurtle",
    "name": "screen"
   }
  ],
  "name": "screen"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[list[TurtleScreen]]",
    "className": "turtle.RawTurtle",
    "name": "screens"
   }
  ],
  "name": "screens"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "dataclasses.Field",
    "name": "repr"
   }
  ],
  "name": "repr"
 },
 {
  "definitions": [
   {
    "annotation": "(bool | None)",
    "className": "dataclasses.Field",
    "name": "hash"
   }
  ],
  "name": "hash"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "dataclasses.Field",
    "name": "init"
   }
  ],
  "name": "init"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "dataclasses.Field",
    "name": "compare"
   }
  ],
  "name": "compare"
 },
 {
  "definitions": [
   {
    "annotation": "types.MappingProxyType[Any, Any]",
    "className": "dataclasses.Field",
    "name": "metadata"
   }
  ],
  "name": "metadata"
 },
 {
  "definitions": [
   {
    "annotation": "(MetaPathFinder | PathEntryFinder)",
    "className": "pkgutil.ModuleInfo",
    "name": "module_finder"
   }
  ],
  "name": "module_finder"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pkgutil.ModuleInfo",
    "name": "ispkg"
   }
  ],
  "name": "ispkg"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_argcount",
    "returns": "int"
   }
  ],
  "name": "co_argcount"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_kwonlyargcount",
    "returns": "int"
   }
  ],
  "name": "co_kwonlyargcount"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_nlocals",
    "returns": "int"
   }
  ],
  "name": "co_nlocals"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_stacksize",
    "returns": "int"
   }
  ],
  "name": "co_stacksize"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_flags",
    "returns": "int"
   }
  ],
  "name": "co_flags"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_code",
    "returns": "bytes"
   }
  ],
  "name": "co_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_consts",
    "returns": "tuple[Any, ...]"
   }
  ],
  "name": "co_consts"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_names",
    "returns": "tuple[str, ...]"
   }
  ],
  "name": "co_names"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_varnames",
    "returns": "tuple[str, ...]"
   }
  ],
  "name": "co_varnames"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_filename",
    "returns": "str"
   }
  ],
  "name": "co_filename"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_name",
    "returns": "str"
   }
  ],
  "name": "co_name"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_firstlineno",
    "returns": "int"
   }
  ],
  "name": "co_firstlineno"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_lnotab",
    "returns": "bytes"
   }
  ],
  "name": "co_lnotab"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_freevars",
    "returns": "tuple[str, ...]"
   }
  ],
  "name": "co_freevars"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CodeType",
    "kwonlyargs": [],
    "name": "co_cellvars",
    "returns": "tuple[str, ...]"
   }
  ],
  "name": "co_cellvars"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "types.ModuleType",
    "name": "__file__"
   }
  ],
  "name": "__file__"
 },
 {
  "definitions": [
   {
    "annotation": "(_LoaderProtocol | None)",
    "className": "types.ModuleType",
    "name": "__loader__"
   }
  ],
  "name": "__loader__"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "types.ModuleType",
    "name": "__package__"
   }
  ],
  "name": "__package__"
 },
 {
  "definitions": [
   {
    "annotation": "MutableSequence[str]",
    "className": "types.ModuleType",
    "name": "__path__"
   }
  ],
  "name": "__path__"
 },
 {
  "definitions": [
   {
    "annotation": "(ModuleSpec | None)",
    "className": "types.ModuleType",
    "name": "__spec__"
   }
  ],
  "name": "__spec__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GeneratorType",
    "kwonlyargs": [],
    "name": "gi_code",
    "returns": "CodeType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Generator",
    "kwonlyargs": [],
    "name": "gi_code",
    "returns": "CodeType"
   }
  ],
  "name": "gi_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GeneratorType",
    "kwonlyargs": [],
    "name": "gi_frame",
    "returns": "FrameType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Generator",
    "kwonlyargs": [],
    "name": "gi_frame",
    "returns": "FrameType"
   }
  ],
  "name": "gi_frame"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GeneratorType",
    "kwonlyargs": [],
    "name": "gi_running",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Generator",
    "kwonlyargs": [],
    "name": "gi_running",
    "returns": "bool"
   }
  ],
  "name": "gi_running"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GeneratorType",
    "kwonlyargs": [],
    "name": "gi_yieldfrom",
    "returns": "(GeneratorType[_T_co, _T_contra, Any] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Generator",
    "kwonlyargs": [],
    "name": "gi_yieldfrom",
    "returns": "(Generator[Any, Any, Any] | None)"
   }
  ],
  "name": "gi_yieldfrom"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.AsyncGeneratorType",
    "kwonlyargs": [],
    "name": "ag_await",
    "returns": "(Awaitable[Any] | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.AsyncGenerator",
    "kwonlyargs": [],
    "name": "ag_await",
    "returns": "Any"
   }
  ],
  "name": "ag_await"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.AsyncGeneratorType",
    "kwonlyargs": [],
    "name": "ag_frame",
    "returns": "FrameType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.AsyncGenerator",
    "kwonlyargs": [],
    "name": "ag_frame",
    "returns": "FrameType"
   }
  ],
  "name": "ag_frame"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.AsyncGeneratorType",
    "kwonlyargs": [],
    "name": "ag_running",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.AsyncGenerator",
    "kwonlyargs": [],
    "name": "ag_running",
    "returns": "bool"
   }
  ],
  "name": "ag_running"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.AsyncGeneratorType",
    "kwonlyargs": [],
    "name": "ag_code",
    "returns": "CodeType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.AsyncGenerator",
    "kwonlyargs": [],
    "name": "ag_code",
    "returns": "CodeType"
   }
  ],
  "name": "ag_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CoroutineType",
    "kwonlyargs": [],
    "name": "cr_await",
    "returns": "(Any | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Coroutine",
    "kwonlyargs": [],
    "name": "cr_await",
    "returns": "(Any | None)"
   }
  ],
  "name": "cr_await"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CoroutineType",
    "kwonlyargs": [],
    "name": "cr_code",
    "returns": "CodeType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Coroutine",
    "kwonlyargs": [],
    "name": "cr_code",
    "returns": "CodeType"
   }
  ],
  "name": "cr_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CoroutineType",
    "kwonlyargs": [],
    "name": "cr_frame",
    "returns": "FrameType"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Coroutine",
    "kwonlyargs": [],
    "name": "cr_frame",
    "returns": "FrameType"
   }
  ],
  "name": "cr_frame"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.CoroutineType",
    "kwonlyargs": [],
    "name": "cr_running",
    "returns": "bool"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Coroutine",
    "kwonlyargs": [],
    "name": "cr_running",
    "returns": "bool"
   }
  ],
  "name": "cr_running"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodType",
    "kwonlyargs": [],
    "name": "__self__",
    "returns": "object"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.BuiltinFunctionType",
    "kwonlyargs": [],
    "name": "__self__",
    "returns": "(object | ModuleType)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodWrapperType",
    "kwonlyargs": [],
    "name": "__self__",
    "returns": "object"
   }
  ],
  "name": "__self__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.WrapperDescriptorType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodWrapperType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MethodDescriptorType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.ClassMethodDescriptorType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GetSetDescriptorType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.MemberDescriptorType",
    "kwonlyargs": [],
    "name": "__objclass__",
    "returns": "type"
   }
  ],
  "name": "__objclass__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.TracebackType",
    "kwonlyargs": [],
    "name": "tb_frame",
    "returns": "FrameType"
   }
  ],
  "name": "tb_frame"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.TracebackType",
    "kwonlyargs": [],
    "name": "tb_lasti",
    "returns": "int"
   }
  ],
  "name": "tb_lasti"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.TracebackType",
    "kwonlyargs": [],
    "name": "tb_lineno",
    "returns": "int"
   }
  ],
  "name": "tb_lineno"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_back",
    "returns": "(FrameType | None)"
   }
  ],
  "name": "f_back"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_builtins",
    "returns": "dict[str, Any]"
   }
  ],
  "name": "f_builtins"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_code",
    "returns": "CodeType"
   }
  ],
  "name": "f_code"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_globals",
    "returns": "dict[str, Any]"
   }
  ],
  "name": "f_globals"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_lasti",
    "returns": "int"
   }
  ],
  "name": "f_lasti"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_lineno",
    "returns": "(int | Any)"
   }
  ],
  "name": "f_lineno"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.FrameType",
    "kwonlyargs": [],
    "name": "f_locals",
    "returns": "dict[str, Any]"
   }
  ],
  "name": "f_locals"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[FrameType, str, Any], Any] | None)",
    "className": "types.FrameType",
    "name": "f_trace"
   }
  ],
  "name": "f_trace"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GenericAlias",
    "kwonlyargs": [],
    "name": "__origin__",
    "returns": "type"
   },
   {
    "annotation": "ParamSpec",
    "className": "typing.ParamSpecArgs",
    "name": "__origin__"
   },
   {
    "annotation": "ParamSpec",
    "className": "typing.ParamSpecKwargs",
    "name": "__origin__"
   }
  ],
  "name": "__origin__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GenericAlias",
    "kwonlyargs": [],
    "name": "__args__",
    "returns": "tuple[Any, ...]"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.UnionType",
    "kwonlyargs": [],
    "name": "__args__",
    "returns": "tuple[Any, ...]"
   }
  ],
  "name": "__args__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "types.GenericAlias",
    "kwonlyargs": [],
    "name": "__parameters__",
    "returns": "tuple[Any, ...]"
   }
  ],
  "name": "__parameters__"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[timezone]",
    "className": "datetime.timezone",
    "name": "utc"
   }
  ],
  "name": "utc"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[timezone]",
    "className": "datetime.timezone",
    "name": "min"
   },
   {
    "annotation": "ClassVar[date]",
    "className": "datetime.date",
    "name": "min"
   },
   {
    "annotation": "ClassVar[time]",
    "className": "datetime.time",
    "name": "min"
   },
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.timedelta",
    "name": "min"
   },
   {
    "annotation": "ClassVar[datetime]",
    "className": "datetime.datetime",
    "name": "min"
   }
  ],
  "name": "min"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[timezone]",
    "className": "datetime.timezone",
    "name": "max"
   },
   {
    "annotation": "ClassVar[date]",
    "className": "datetime.date",
    "name": "max"
   },
   {
    "annotation": "ClassVar[time]",
    "className": "datetime.time",
    "name": "max"
   },
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.timedelta",
    "name": "max"
   },
   {
    "annotation": "ClassVar[datetime]",
    "className": "datetime.datetime",
    "name": "max"
   }
  ],
  "name": "max"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.date",
    "name": "resolution"
   },
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.time",
    "name": "resolution"
   },
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.timedelta",
    "name": "resolution"
   },
   {
    "annotation": "ClassVar[timedelta]",
    "className": "datetime.datetime",
    "name": "resolution"
   }
  ],
  "name": "resolution"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.date",
    "kwonlyargs": [],
    "name": "year",
    "returns": "int"
   }
  ],
  "name": "year"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.date",
    "kwonlyargs": [],
    "name": "month",
    "returns": "int"
   }
  ],
  "name": "month"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.date",
    "kwonlyargs": [],
    "name": "day",
    "returns": "int"
   }
  ],
  "name": "day"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "hour",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "hour",
    "returns": "int"
   }
  ],
  "name": "hour"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "minute",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "minute",
    "returns": "int"
   }
  ],
  "name": "minute"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "second",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "second",
    "returns": "int"
   }
  ],
  "name": "second"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "microsecond",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "microsecond",
    "returns": "int"
   }
  ],
  "name": "microsecond"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "tzinfo",
    "returns": "(_tzinfo | None)"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "tzinfo",
    "returns": "(_tzinfo | None)"
   }
  ],
  "name": "tzinfo"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.time",
    "kwonlyargs": [],
    "name": "fold",
    "returns": "int"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.datetime",
    "kwonlyargs": [],
    "name": "fold",
    "returns": "int"
   }
  ],
  "name": "fold"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.timedelta",
    "kwonlyargs": [],
    "name": "days",
    "returns": "int"
   }
  ],
  "name": "days"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.timedelta",
    "kwonlyargs": [],
    "name": "seconds",
    "returns": "int"
   }
  ],
  "name": "seconds"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "datetime.timedelta",
    "kwonlyargs": [],
    "name": "microseconds",
    "returns": "int"
   }
  ],
  "name": "microseconds"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "node"
   },
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "node",
    "returns": "_Int"
   }
  ],
  "name": "node"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "platform.uname_result",
    "name": "processor"
   }
  ],
  "name": "processor"
 },
 {
  "definitions": [
   {
    "annotation": "(Any | None)",
    "className": "typing.TypeVar",
    "name": "__bound__"
   },
   {
    "annotation": "(Any | None)",
    "className": "typing.ParamSpec",
    "name": "__bound__"
   }
  ],
  "name": "__bound__"
 },
 {
  "definitions": [
   {
    "annotation": "tuple[Any, ...]",
    "className": "typing.TypeVar",
    "name": "__constraints__"
   }
  ],
  "name": "__constraints__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "typing.TypeVar",
    "name": "__covariant__"
   },
   {
    "annotation": "bool",
    "className": "typing.ParamSpec",
    "name": "__covariant__"
   }
  ],
  "name": "__covariant__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "typing.TypeVar",
    "name": "__contravariant__"
   },
   {
    "annotation": "bool",
    "className": "typing.ParamSpec",
    "name": "__contravariant__"
   }
  ],
  "name": "__contravariant__"
 },
 {
  "definitions": [
   {
    "annotation": "type",
    "className": "typing.NewType",
    "name": "__supertype__"
   }
  ],
  "name": "__supertype__"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "endpos",
    "returns": "int"
   }
  ],
  "name": "endpos"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "lastindex",
    "returns": "(int | None)"
   }
  ],
  "name": "lastindex"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "lastgroup",
    "returns": "(str | None)"
   }
  ],
  "name": "lastgroup"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "re",
    "returns": "Pattern[AnyStr]"
   }
  ],
  "name": "re"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Match",
    "kwonlyargs": [],
    "name": "regs",
    "returns": "tuple[tuple[int, int], ...]"
   }
  ],
  "name": "regs"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Pattern",
    "kwonlyargs": [],
    "name": "groupindex",
    "returns": "Mapping[str, int]"
   }
  ],
  "name": "groupindex"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "typing.Pattern",
    "kwonlyargs": [],
    "name": "groups",
    "returns": "int"
   }
  ],
  "name": "groups"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "typing.NamedTuple",
    "name": "_field_defaults"
   }
  ],
  "name": "_field_defaults"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "typing.NamedTuple",
    "name": "_source"
   }
  ],
  "name": "_source"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "typing.ForwardRef",
    "name": "__forward_arg__"
   }
  ],
  "name": "__forward_arg__"
 },
 {
  "definitions": [
   {
    "annotation": "CodeType",
    "className": "typing.ForwardRef",
    "name": "__forward_code__"
   }
  ],
  "name": "__forward_code__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "typing.ForwardRef",
    "name": "__forward_evaluated__"
   }
  ],
  "name": "__forward_evaluated__"
 },
 {
  "definitions": [
   {
    "annotation": "(Any | None)",
    "className": "typing.ForwardRef",
    "name": "__forward_value__"
   }
  ],
  "name": "__forward_value__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "typing.ForwardRef",
    "name": "__forward_is_argument__"
   }
  ],
  "name": "__forward_is_argument__"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "typing.ForwardRef",
    "name": "__forward_is_class__"
   }
  ],
  "name": "__forward_is_class__"
 },
 {
  "definitions": [
   {
    "annotation": "(Any | None)",
    "className": "typing.ForwardRef",
    "name": "__forward_module__"
   }
  ],
  "name": "__forward_module__"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "plistlib.PlistFormat",
    "name": "FMT_XML"
   }
  ],
  "name": "FMT_XML"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "plistlib.PlistFormat",
    "name": "FMT_BINARY"
   }
  ],
  "name": "FMT_BINARY"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "unicodedata.UCD",
    "name": "unidata_version"
   }
  ],
  "name": "unidata_version"
 },
 {
  "definitions": [
   {
    "annotation": "Pattern[str]",
    "className": "poplib.POP3",
    "name": "timestamp"
   }
  ],
  "name": "timestamp"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "difflib.Match",
    "name": "a"
   }
  ],
  "name": "a"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "difflib.Match",
    "name": "b"
   }
  ],
  "name": "b"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "dis.Instruction",
    "name": "opname"
   }
  ],
  "name": "opname"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "dis.Instruction",
    "name": "opcode"
   }
  ],
  "name": "opcode"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "dis.Instruction",
    "name": "argval"
   }
  ],
  "name": "argval"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "dis.Instruction",
    "name": "argrepr"
   }
  ],
  "name": "argrepr"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "dis.Instruction",
    "name": "starts_line"
   }
  ],
  "name": "starts_line"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "dis.Instruction",
    "name": "is_jump_target"
   }
  ],
  "name": "is_jump_target"
 },
 {
  "definitions": [
   {
    "annotation": "types.CodeType",
    "className": "dis.Bytecode",
    "name": "codeobj"
   }
  ],
  "name": "codeobj"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "dis.Bytecode",
    "name": "first_line"
   }
  ],
  "name": "first_line"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "uuid.SafeUUID",
    "name": "safe"
   }
  ],
  "name": "safe"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "uuid.SafeUUID",
    "name": "unsafe"
   }
  ],
  "name": "unsafe"
 },
 {
  "definitions": [
   {
    "annotation": "None",
    "className": "uuid.SafeUUID",
    "name": "unknown"
   }
  ],
  "name": "unknown"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "bytes",
    "returns": "_Bytes"
   }
  ],
  "name": "bytes"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "bytes_le",
    "returns": "_Bytes"
   }
  ],
  "name": "bytes_le"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "clock_seq",
    "returns": "_Int"
   }
  ],
  "name": "clock_seq"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "clock_seq_hi_variant",
    "returns": "_Int"
   }
  ],
  "name": "clock_seq_hi_variant"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "clock_seq_low",
    "returns": "_Int"
   }
  ],
  "name": "clock_seq_low"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "fields",
    "returns": "_FieldsType"
   }
  ],
  "name": "fields"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "hex",
    "returns": "str"
   }
  ],
  "name": "hex"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "int",
    "returns": "_Int"
   }
  ],
  "name": "int"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "time_hi_version",
    "returns": "_Int"
   }
  ],
  "name": "time_hi_version"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "time_low",
    "returns": "_Int"
   }
  ],
  "name": "time_low"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "time_mid",
    "returns": "_Int"
   }
  ],
  "name": "time_mid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "urn",
    "returns": "str"
   }
  ],
  "name": "urn"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "uuid.UUID",
    "kwonlyargs": [],
    "name": "variant",
    "returns": "str"
   }
  ],
  "name": "variant"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.TestResults",
    "name": "failed"
   }
  ],
  "name": "failed"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.TestResults",
    "name": "attempted"
   }
  ],
  "name": "attempted"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "doctest.Example",
    "name": "want"
   }
  ],
  "name": "want"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "doctest.Example",
    "name": "exc_msg"
   }
  ],
  "name": "exc_msg"
 },
 {
  "definitions": [
   {
    "annotation": "list[Example]",
    "className": "doctest.DocTest",
    "name": "examples"
   }
  ],
  "name": "examples"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Any]",
    "className": "doctest.DocTest",
    "name": "globs"
   }
  ],
  "name": "globs"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "doctest.DocTest",
    "name": "docstring"
   }
  ],
  "name": "docstring"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "doctest.DocTestRunner",
    "name": "DIVIDER"
   }
  ],
  "name": "DIVIDER"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.DocTestRunner",
    "name": "optionflags"
   }
  ],
  "name": "optionflags"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.DocTestRunner",
    "name": "original_optionflags"
   }
  ],
  "name": "original_optionflags"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.DocTestRunner",
    "name": "tries"
   }
  ],
  "name": "tries"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "doctest.DocTestRunner",
    "name": "failures"
   }
  ],
  "name": "failures"
 },
 {
  "definitions": [
   {
    "annotation": "Example",
    "className": "doctest.DocTestFailure",
    "name": "example"
   },
   {
    "annotation": "Example",
    "className": "doctest.UnexpectedException",
    "name": "example"
   }
  ],
  "name": "example"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "doctest.DocTestFailure",
    "name": "got"
   }
  ],
  "name": "got"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "profile.Profile",
    "name": "bias"
   }
  ],
  "name": "bias"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "venv.EnvBuilder",
    "name": "system_site_packages"
   }
  ],
  "name": "system_site_packages"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "venv.EnvBuilder",
    "name": "clear"
   }
  ],
  "name": "clear"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "venv.EnvBuilder",
    "name": "symlinks"
   }
  ],
  "name": "symlinks"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "venv.EnvBuilder",
    "name": "upgrade"
   }
  ],
  "name": "upgrade"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "venv.EnvBuilder",
    "name": "with_pip"
   }
  ],
  "name": "with_pip"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "CALLS"
   }
  ],
  "name": "CALLS"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "CUMULATIVE"
   }
  ],
  "name": "CUMULATIVE"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "FILENAME"
   }
  ],
  "name": "FILENAME"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "LINE"
   }
  ],
  "name": "LINE"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "NAME"
   }
  ],
  "name": "NAME"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "NFL"
   }
  ],
  "name": "NFL"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "PCALLS"
   }
  ],
  "name": "PCALLS"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "STDNAME"
   }
  ],
  "name": "STDNAME"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.SortKey",
    "name": "TIME"
   }
  ],
  "name": "TIME"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pstats.FunctionProfile",
    "name": "ncalls"
   }
  ],
  "name": "ncalls"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "pstats.FunctionProfile",
    "name": "tottime"
   }
  ],
  "name": "tottime"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "pstats.FunctionProfile",
    "name": "percall_tottime"
   }
  ],
  "name": "percall_tottime"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "pstats.FunctionProfile",
    "name": "cumtime"
   }
  ],
  "name": "cumtime"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "pstats.FunctionProfile",
    "name": "percall_cumtime"
   }
  ],
  "name": "percall_cumtime"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pstats.FunctionProfile",
    "name": "file_name"
   }
  ],
  "name": "file_name"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pstats.FunctionProfile",
    "name": "line_number"
   }
  ],
  "name": "line_number"
 },
 {
  "definitions": [
   {
    "annotation": "float",
    "className": "pstats.StatsProfile",
    "name": "total_tt"
   }
  ],
  "name": "total_tt"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, FunctionProfile]",
    "className": "pstats.StatsProfile",
    "name": "func_profiles"
   }
  ],
  "name": "func_profiles"
 },
 {
  "definitions": [
   {
    "annotation": "_SortArgDict",
    "className": "pstats.Stats",
    "name": "sort_arg_dict_default"
   }
  ],
  "name": "sort_arg_dict_default"
 },
 {
  "definitions": [
   {
    "annotation": "type[Warning]",
    "className": "warnings.WarningMessage",
    "name": "category"
   }
  ],
  "name": "category"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_name",
    "returns": "str"
   }
  ],
  "name": "pw_name"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_passwd",
    "returns": "str"
   }
  ],
  "name": "pw_passwd"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_uid",
    "returns": "int"
   }
  ],
  "name": "pw_uid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_gid",
    "returns": "int"
   }
  ],
  "name": "pw_gid"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_gecos",
    "returns": "str"
   }
  ],
  "name": "pw_gecos"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_dir",
    "returns": "str"
   }
  ],
  "name": "pw_dir"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pwd.struct_passwd",
    "kwonlyargs": [],
    "name": "pw_shell",
    "returns": "str"
   }
  ],
  "name": "pw_shell"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "weakref.finalize",
    "kwonlyargs": [],
    "name": "alive",
    "returns": "bool"
   }
  ],
  "name": "alive"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "weakref.finalize",
    "name": "atexit"
   }
  ],
  "name": "atexit"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "enum.EnumMeta",
    "name": "_member_names_"
   }
  ],
  "name": "_member_names_"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Enum]",
    "className": "enum.EnumMeta",
    "name": "_member_map_"
   }
  ],
  "name": "_member_map_"
 },
 {
  "definitions": [
   {
    "annotation": "dict[Any, Enum]",
    "className": "enum.EnumMeta",
    "name": "_value2member_map_"
   }
  ],
  "name": "_value2member_map_"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "enum.Enum",
    "name": "_name_"
   },
   {
    "annotation": "(str | None)",
    "className": "enum.Flag",
    "name": "_name_"
   }
  ],
  "name": "_name_"
 },
 {
  "definitions": [
   {
    "annotation": "Any",
    "className": "enum.Enum",
    "name": "_value_"
   },
   {
    "annotation": "int",
    "className": "enum.IntEnum",
    "name": "_value_"
   },
   {
    "annotation": "Any",
    "className": "enum.auto",
    "name": "_value_"
   },
   {
    "annotation": "int",
    "className": "enum.Flag",
    "name": "_value_"
   }
  ],
  "name": "_value_"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "enum.Enum",
    "name": "_order_"
   }
  ],
  "name": "_order_"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "enum.Enum",
    "name": "__order__"
   }
  ],
  "name": "__order__"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "py_compile.PyCompileError",
    "name": "exc_type_name"
   }
  ],
  "name": "exc_type_name"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "py_compile.PycInvalidationMode",
    "name": "TIMESTAMP"
   }
  ],
  "name": "TIMESTAMP"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "py_compile.PycInvalidationMode",
    "name": "CHECKED_HASH"
   }
  ],
  "name": "CHECKED_HASH"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "py_compile.PycInvalidationMode",
    "name": "UNCHECKED_HASH"
   }
  ],
  "name": "UNCHECKED_HASH"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "webbrowser.BaseBrowser",
    "name": "basename"
   }
  ],
  "name": "basename"
 },
 {
  "definitions": [
   {
    "annotation": "(list[str] | None)",
    "className": "webbrowser.UnixBrowser",
    "name": "raise_opts"
   },
   {
    "annotation": "list[str]",
    "className": "webbrowser.Galeon",
    "name": "raise_opts"
   }
  ],
  "name": "raise_opts"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "webbrowser.UnixBrowser",
    "name": "background"
   }
  ],
  "name": "background"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "webbrowser.UnixBrowser",
    "name": "redirect_stdout"
   }
  ],
  "name": "redirect_stdout"
 },
 {
  "definitions": [
   {
    "annotation": "list[str]",
    "className": "webbrowser.UnixBrowser",
    "name": "remote_args"
   }
  ],
  "name": "remote_args"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "webbrowser.UnixBrowser",
    "name": "remote_action"
   }
  ],
  "name": "remote_action"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "webbrowser.UnixBrowser",
    "name": "remote_action_newwin"
   }
  ],
  "name": "remote_action_newwin"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "webbrowser.UnixBrowser",
    "name": "remote_action_newtab"
   }
  ],
  "name": "remote_action_newtab"
 },
 {
  "definitions": [
   {
    "annotation": "(list[Class | str] | None)",
    "className": "pyclbr.Class",
    "name": "super"
   }
  ],
  "name": "super"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, int]",
    "className": "pyclbr.Class",
    "name": "methods"
   }
  ],
  "name": "methods"
 },
 {
  "definitions": [
   {
    "annotation": "(TracebackType | None)",
    "className": "pydoc.ErrorDuringImport",
    "name": "tb"
   }
  ],
  "name": "tb"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "pydoc.Doc",
    "name": "PYTHONDOCS"
   }
  ],
  "name": "PYTHONDOCS"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pydoc.HTMLRepr",
    "name": "maxlist"
   },
   {
    "annotation": "int",
    "className": "pydoc.TextRepr",
    "name": "maxlist"
   },
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxlist"
   }
  ],
  "name": "maxlist"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pydoc.HTMLRepr",
    "name": "maxtuple"
   },
   {
    "annotation": "int",
    "className": "pydoc.TextRepr",
    "name": "maxtuple"
   },
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxtuple"
   }
  ],
  "name": "maxtuple"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pydoc.HTMLRepr",
    "name": "maxdict"
   },
   {
    "annotation": "int",
    "className": "pydoc.TextRepr",
    "name": "maxdict"
   },
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxdict"
   }
  ],
  "name": "maxdict"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pydoc.HTMLRepr",
    "name": "maxstring"
   },
   {
    "annotation": "int",
    "className": "pydoc.TextRepr",
    "name": "maxstring"
   },
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxstring"
   }
  ],
  "name": "maxstring"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pydoc.HTMLRepr",
    "name": "maxother"
   },
   {
    "annotation": "int",
    "className": "pydoc.TextRepr",
    "name": "maxother"
   },
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxother"
   }
  ],
  "name": "maxother"
 },
 {
  "definitions": [
   {
    "annotation": "HTMLRepr",
    "className": "pydoc.HTMLDoc",
    "name": "_repr_instance"
   },
   {
    "annotation": "TextRepr",
    "className": "pydoc.TextDoc",
    "name": "_repr_instance"
   }
  ],
  "name": "_repr_instance"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str]",
    "className": "pydoc.Helper",
    "name": "symbols"
   }
  ],
  "name": "symbols"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, str | tuple[str, ...]]",
    "className": "pydoc.Helper",
    "name": "topics"
   }
  ],
  "name": "topics"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "pydoc.Helper",
    "kwonlyargs": [],
    "name": "input",
    "returns": "IO[str]"
   }
  ],
  "name": "input"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pydoc.ModuleScanner",
    "name": "quit"
   }
  ],
  "name": "quit"
 },
 {
  "definitions": [
   {
    "annotation": "Sequence[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "hide"
   }
  ],
  "name": "hide"
 },
 {
  "definitions": [
   {
    "annotation": "dict[AnyStr, dircmp[AnyStr]]",
    "className": "filecmp.dircmp",
    "name": "subdirs"
   }
  ],
  "name": "subdirs"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "same_files"
   }
  ],
  "name": "same_files"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "diff_files"
   }
  ],
  "name": "diff_files"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "funny_files"
   }
  ],
  "name": "funny_files"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "common_dirs"
   }
  ],
  "name": "common_dirs"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "common_files"
   }
  ],
  "name": "common_files"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "common_funny"
   }
  ],
  "name": "common_funny"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "common"
   }
  ],
  "name": "common"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "left_only"
   }
  ],
  "name": "left_only"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "right_only"
   }
  ],
  "name": "right_only"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "left_list"
   }
  ],
  "name": "left_list"
 },
 {
  "definitions": [
   {
    "annotation": "list[AnyStr]",
    "className": "filecmp.dircmp",
    "name": "right_list"
   }
  ],
  "name": "right_list"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, Callable[[], None]]",
    "className": "filecmp.dircmp",
    "name": "methodmap"
   }
  ],
  "name": "methodmap"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "buffer_size"
   }
  ],
  "name": "buffer_size"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pyexpat.XMLParserType",
    "name": "buffer_text"
   }
  ],
  "name": "buffer_text"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "buffer_used"
   }
  ],
  "name": "buffer_used"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pyexpat.XMLParserType",
    "name": "namespace_prefixes"
   }
  ],
  "name": "namespace_prefixes"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pyexpat.XMLParserType",
    "name": "ordered_attributes"
   }
  ],
  "name": "ordered_attributes"
 },
 {
  "definitions": [
   {
    "annotation": "bool",
    "className": "pyexpat.XMLParserType",
    "name": "specified_attributes"
   }
  ],
  "name": "specified_attributes"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "ErrorByteIndex"
   }
  ],
  "name": "ErrorByteIndex"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "ErrorCode"
   }
  ],
  "name": "ErrorCode"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "ErrorColumnNumber"
   }
  ],
  "name": "ErrorColumnNumber"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "ErrorLineNumber"
   }
  ],
  "name": "ErrorLineNumber"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "CurrentByteIndex"
   }
  ],
  "name": "CurrentByteIndex"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "CurrentColumnNumber"
   }
  ],
  "name": "CurrentColumnNumber"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "pyexpat.XMLParserType",
    "name": "CurrentLineNumber"
   }
  ],
  "name": "CurrentLineNumber"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str | None, int], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "XmlDeclHandler"
   }
  ],
  "name": "XmlDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str | None, str | None, bool], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "StartDoctypeDeclHandler"
   }
  ],
  "name": "StartDoctypeDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "EndDoctypeDeclHandler"
   }
  ],
  "name": "EndDoctypeDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, _Model], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "ElementDeclHandler"
   }
  ],
  "name": "ElementDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str, str, str | None, bool], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "AttlistDeclHandler"
   }
  ],
  "name": "AttlistDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, dict[str, str]], Any] | Callable[[str, list[str]], Any] |\n    Callable[[str, dict[str, str], list[str]], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "StartElementHandler"
   }
  ],
  "name": "StartElementHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "EndElementHandler"
   }
  ],
  "name": "EndElementHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "ProcessingInstructionHandler"
   }
  ],
  "name": "ProcessingInstructionHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "CharacterDataHandler"
   }
  ],
  "name": "CharacterDataHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str | None, str, str | None, str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "UnparsedEntityDeclHandler"
   }
  ],
  "name": "UnparsedEntityDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, bool, str | None, str | None, str, str | None, str | None],\n    Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "EntityDeclHandler"
   }
  ],
  "name": "EntityDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str | None, str, str | None], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "NotationDeclHandler"
   }
  ],
  "name": "NotationDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "StartNamespaceDeclHandler"
   }
  ],
  "name": "StartNamespaceDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "EndNamespaceDeclHandler"
   }
  ],
  "name": "EndNamespaceDeclHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "CommentHandler"
   }
  ],
  "name": "CommentHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "StartCdataSectionHandler"
   }
  ],
  "name": "StartCdataSectionHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "EndCdataSectionHandler"
   }
  ],
  "name": "EndCdataSectionHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "DefaultHandler"
   }
  ],
  "name": "DefaultHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str], Any] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "DefaultHandlerExpand"
   }
  ],
  "name": "DefaultHandlerExpand"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[], int] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "NotStandaloneHandler"
   }
  ],
  "name": "NotStandaloneHandler"
 },
 {
  "definitions": [
   {
    "annotation": "(Callable[[str, str | None, str | None, str | None], int] | None)",
    "className": "pyexpat.XMLParserType",
    "name": "ExternalEntityRefHandler"
   }
  ],
  "name": "ExternalEntityRefHandler"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "queue.Queue",
    "name": "maxsize"
   }
  ],
  "name": "maxsize"
 },
 {
  "definitions": [
   {
    "annotation": "Lock",
    "className": "queue.Queue",
    "name": "mutex"
   }
  ],
  "name": "mutex"
 },
 {
  "definitions": [
   {
    "annotation": "Condition",
    "className": "queue.Queue",
    "name": "not_empty"
   }
  ],
  "name": "not_empty"
 },
 {
  "definitions": [
   {
    "annotation": "Condition",
    "className": "queue.Queue",
    "name": "not_full"
   }
  ],
  "name": "not_full"
 },
 {
  "definitions": [
   {
    "annotation": "Condition",
    "className": "queue.Queue",
    "name": "all_tasks_done"
   }
  ],
  "name": "all_tasks_done"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "queue.Queue",
    "name": "unfinished_tasks"
   }
  ],
  "name": "unfinished_tasks"
 },
 {
  "definitions": [
   {
    "annotation": "ClassVar[int]",
    "className": "random.Random",
    "name": "VERSION"
   }
  ],
  "name": "VERSION"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "maxline"
   }
  ],
  "name": "maxline"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "passiveserver"
   }
  ],
  "name": "passiveserver"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ftplib.FTP",
    "name": "af"
   }
  ],
  "name": "af"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "ftplib.FTP",
    "name": "lastresp"
   }
  ],
  "name": "lastresp"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "ftplib.FTP_TLS",
    "name": "ssl_version"
   }
  ],
  "name": "ssl_version"
 },
 {
  "definitions": [
   {
    "annotation": "_SingleDispatchCallable[_T]",
    "className": "functools.singledispatchmethod",
    "name": "dispatcher"
   }
  ],
  "name": "dispatcher"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "functools.cached_property",
    "name": "attrname"
   }
  ],
  "name": "attrname"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipExtFile",
    "name": "MAX_N"
   }
  ],
  "name": "MAX_N"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipExtFile",
    "name": "MIN_READ_SIZE"
   }
  ],
  "name": "MIN_READ_SIZE"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "zipfile.ZipFile",
    "name": "comment"
   },
   {
    "annotation": "bytes",
    "className": "zipfile.ZipInfo",
    "name": "comment"
   }
  ],
  "name": "comment"
 },
 {
  "definitions": [
   {
    "annotation": "list[ZipInfo]",
    "className": "zipfile.ZipFile",
    "name": "filelist"
   }
  ],
  "name": "filelist"
 },
 {
  "definitions": [
   {
    "annotation": "dict[str, ZipInfo]",
    "className": "zipfile.ZipFile",
    "name": "NameToInfo"
   }
  ],
  "name": "NameToInfo"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipFile",
    "name": "start_dir"
   }
  ],
  "name": "start_dir"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipFile",
    "name": "compression"
   }
  ],
  "name": "compression"
 },
 {
  "definitions": [
   {
    "annotation": "(int | None)",
    "className": "zipfile.ZipFile",
    "name": "compresslevel"
   }
  ],
  "name": "compresslevel"
 },
 {
  "definitions": [
   {
    "annotation": "(str | None)",
    "className": "zipfile.ZipFile",
    "name": "pwd"
   }
  ],
  "name": "pwd"
 },
 {
  "definitions": [
   {
    "annotation": "_DateTuple",
    "className": "zipfile.ZipInfo",
    "name": "date_time"
   }
  ],
  "name": "date_time"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "compress_type"
   }
  ],
  "name": "compress_type"
 },
 {
  "definitions": [
   {
    "annotation": "bytes",
    "className": "zipfile.ZipInfo",
    "name": "extra"
   }
  ],
  "name": "extra"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "create_system"
   }
  ],
  "name": "create_system"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "create_version"
   }
  ],
  "name": "create_version"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "extract_version"
   }
  ],
  "name": "extract_version"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "reserved"
   }
  ],
  "name": "reserved"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "flag_bits"
   }
  ],
  "name": "flag_bits"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "volume"
   }
  ],
  "name": "volume"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "internal_attr"
   }
  ],
  "name": "internal_attr"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "external_attr"
   }
  ],
  "name": "external_attr"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "header_offset"
   }
  ],
  "name": "header_offset"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "CRC"
   }
  ],
  "name": "CRC"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "compress_size"
   }
  ],
  "name": "compress_size"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "zipfile.ZipInfo",
    "name": "file_size"
   }
  ],
  "name": "file_size"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "zipfile.ZipInfo",
    "name": "orig_filename"
   }
  ],
  "name": "orig_filename"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxlevel"
   }
  ],
  "name": "maxlevel"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxset"
   }
  ],
  "name": "maxset"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxfrozenset"
   }
  ],
  "name": "maxfrozenset"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxdeque"
   }
  ],
  "name": "maxdeque"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxarray"
   }
  ],
  "name": "maxarray"
 },
 {
  "definitions": [
   {
    "annotation": "int",
    "className": "reprlib.Repr",
    "name": "maxlong"
   }
  ],
  "name": "maxlong"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "zipimport.zipimporter",
    "name": "archive"
   }
  ],
  "name": "archive"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "zipimport.zipimporter",
    "name": "prefix"
   }
  ],
  "name": "prefix"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_utime",
    "returns": "float"
   }
  ],
  "name": "ru_utime"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_stime",
    "returns": "float"
   }
  ],
  "name": "ru_stime"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_maxrss",
    "returns": "int"
   }
  ],
  "name": "ru_maxrss"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_ixrss",
    "returns": "int"
   }
  ],
  "name": "ru_ixrss"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_idrss",
    "returns": "int"
   }
  ],
  "name": "ru_idrss"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_isrss",
    "returns": "int"
   }
  ],
  "name": "ru_isrss"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_minflt",
    "returns": "int"
   }
  ],
  "name": "ru_minflt"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_majflt",
    "returns": "int"
   }
  ],
  "name": "ru_majflt"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_nswap",
    "returns": "int"
   }
  ],
  "name": "ru_nswap"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_inblock",
    "returns": "int"
   }
  ],
  "name": "ru_inblock"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_oublock",
    "returns": "int"
   }
  ],
  "name": "ru_oublock"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_msgsnd",
    "returns": "int"
   }
  ],
  "name": "ru_msgsnd"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_msgrcv",
    "returns": "int"
   }
  ],
  "name": "ru_msgrcv"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_nsignals",
    "returns": "int"
   }
  ],
  "name": "ru_nsignals"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_nvcsw",
    "returns": "int"
   }
  ],
  "name": "ru_nvcsw"
 },
 {
  "definitions": [
   {
    "args": [
     {
      "annotation": "",
      "arg": "self"
     }
    ],
    "className": "resource.struct_rusage",
    "kwonlyargs": [],
    "name": "ru_nivcsw",
    "returns": "int"
   }
  ],
  "name": "ru_nivcsw"
 },
 {
  "definitions": [
   {
    "annotation": "str",
    "className": "getopt.GetoptError",
    "name": "opt"
   }
  ],
  "name": "opt"
 }
]
